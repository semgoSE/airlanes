{"version":3,"sources":["panels/Groups.jsx","components/SubscribeCities.jsx","panels/Catalog.jsx","panels/SectionCatalog.jsx","components/SnackbarError.jsx","components/MyGroups.jsx","components/MyDB.jsx","panels/MySubs.jsx","panels/Friends.jsx","panels/Settings.jsx","components/ChooseCountry.jsx","components/ChooseCity.jsx","App.js","serviceWorker.js","index.js"],"names":["Groups","id","state","openCatalog","catalog","size","map","item","index","key","expandable","onClick","SubscribeCities","from","to","all","choose","e","setState","currentTarget","name","i","parseInt","checked","bool","forEach","element","chooseAll","submit","a","props","setPopout","filter","length","arr","concat","tag","groupId","section","fetch","JSON","stringify","user_id","String","userId","then","response","json","data","tags","body","group_id","group_name","category","checkbox","check","close","this","style","overflow","actionsLayout","actions","title","action","autoclose","mode","onClose","position","textAlign","overflowX","height","overflowY","indicator","onChange","level","weight","split","React","Component","Catalog","subscribe","screenName","bridge","sendPromise","app_id","appId","scope","request_id","auth","access_token","method","params","v","user","subscribeMessages","domain","tagsIn","tagsOut","items","group","match","text","matchAll","matchOut","push","matchIn","indexOf","currentSection","currentCatalog","catch","subscribeMessagesAlert","go","left","chooseSection","disabled","multiline","Fragment","channelName","window","open","description","SectionCatalog","SnakbarError","before","fill","MyGroups","snackbar","err","SnackbarError","caption","after","SEASONS_TRANSCRIPTION","MONTHS_TRANSCRIPTION","0","1","2","3","4","5","6","7","8","9","10","11","12","CONTINENTS","PASSENGERS","url","url1Business","url2Passengers","urlForma","CURRENCY","AZN","BYN","CNY","EUR","KGS","KZT","RUB","THB","UAH","USD","UZS","CURRENCY1","LANGUAGES","de","en","es","fr","it","ru","th","tr","MyDB","openAlert","console","log","delete","remove","splice","date","requests","separator","padding","lineHeight","parse","output","countrySrc","citySrc","continentDst","countryDst","cityDst","forward","dates","year","season","month","passengers","costMin","costMax","currency","interval","updated","limit","language","currencyForUrl","optional","color","profitability","days","daysOfWeek","every","array","res","toLowerCase","showAddionalWeather","MySubs","activeTab","vertical","selected","marginTop","Friends","friends","getFriends","fields","city","getPrice","cities","myCode","code","friendCode","indexPrice","Object","keys","price","src","photo_50","first_name","last_name","icon","header","CONTINENT_DST","A","B","C","D","E","F","Settings","datesCnt","Date","getFullYear","randomCost","dayTempMin","dayTempMax","nighTempMin","nighTempMax","allDays","value","onChangeFrom","addFrom","yearSrc","seasonSrc","monthSrc","removeFrom","onChangeDays","Number","t","sort_res","dual","obj","save_request","top","data-type","placeholder","changeDefaultName","changeDefault","changeDefaultText","continent","defaultValue","Array","vaule","display","min","max","step","onFocus","type","bottom","ChooseCountry","inp","default","list","resArr","findIndex","x","country_name","onChoose","changeFunction","back","ChooseCity","country","App","activeStory","activePanel","popout","sortData","sectionIndex","shift","onStoryChange","dataset","story","location","href","axios","get","defaultCountry","chooseCountryText","tabbar","data-story","Boolean","hostname","send","ReactDOM","render","document","getElementById","eruda","erudaCode","erudaDom","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2b8b5985.chunk.js","sourcesContent":["import React from 'react'\nimport { Panel, PanelHeader, List, SimpleCell, PanelSpinner } from '@vkontakte/vkui'\n\nconst Groups = ({ id, state, openCatalog }) => (\n  <Panel id={id}>\n    <PanelHeader>Сообщества</PanelHeader>\n      {state.catalog === null ? \n        <PanelSpinner size='large'/>\n      :\n    <List>\n      {\n        state.catalog && (\n          state.catalog.map((item, index) => \n            <SimpleCell\n              key={item.catalog}\n              id={index}\n              expandable\n              onClick={openCatalog}\n            >\n              {item.catalog}\n            </SimpleCell>\n          )\n        )\n          \n       \n      }\n    </List>\n    }\n  </Panel>\n)\n\nexport default Groups\n","import React from 'react'\nimport { Alert, Checkbox, Title, FormLayout, Switch, Cell, ScreenSpinner } from '@vkontakte/vkui'\n\nexport class SubscribeCities extends React.Component {\n  state = {\n    from: null,\n    to: null,\n    all:false,\n  }\n\n  componentDidMount() {\n    this.setState({ from: this.props.from, to: this.props.to })\n  }\n\n  choose = e => {\n    this.setState({\n      [e.currentTarget.name]: this.state[e.currentTarget.name].map((item, i) => {\n        if(i === parseInt(e.currentTarget.id, 10)){\n          item.checked = e.currentTarget.checked\n          return item\n        }else{\n          return item\n        }\n      })\n    })\n    let bool = true;\n    this.state.from.forEach(element => {\n      if(!element.checked) {\n        bool = false;\n      }\n    });\n    this.state.to.forEach(element => {\n      if(!element.checked) {\n        bool = false;\n      }\n    })\n    this.setState({all:bool})\n  }\n\n  chooseAll = () => {\n    let bool = !this.state.all;\n    const { from , to} = this.state;\n    this.setState({\n      from: from.map((item, i) => {  \n          item.checked = bool;\n          return item\n      }),\n      to: to.map((item, i) => {  \n        item.checked = bool;\n        return item\n    }), all:bool\n    })\n  }\n\n  submit = async () => {\n    this.props.setPopout(<ScreenSpinner />);\n    if(this.state.from.filter((item) => item.checked).length > 0 && \n      this.state.to.filter((item) => item.checked).length > 0\n    ){\n      let arr = []\n      arr = arr.concat(this.state.from.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+this.props.groupId+\"/\"+this.props.name+\"/\"+this.props.catalog+\"/\"+(this.props.section ? this.props.section : \"Любой\")))\n      arr = arr.concat(this.state.to.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+this.props.groupId+\"/\"+this.props.name+\"/\"+this.props.catalog+\"/\"+(this.props.section ? this.props.section : \"Любой\")))\n\n      fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n        \"headers\": {\n          \"accept\": \"*/*\",\n          \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n          \"content-type\": \"application/json;charset=utf-8\",\n        },\n        \"body\": JSON.stringify({\n          user_id: String(this.props.userId)\n        }),\n        \"method\": \"POST\",\n      })\n      .then(response => response.json())\n      .then(data => {\n        if(data.tags.length > 0){\n          arr = arr.concat(\n            data.tags.map((item) => \n              item.body+\"/\"+item.group_id+\"/\"+item.group_name+\"/\"+item.category+\"/\"+item.section\n            )\n          )\n        }\n        fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-tags\", {\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n            \"content-type\": \"application/json;charset=utf-8\",\n          },\n          \"referrer\": \"https://appvk.flights.ru/\",\n          \"referrerPolicy\": \"no-referrer-when-downgrade\",\n          \"body\": JSON.stringify({\n            user_id: String(this.props.userId),\n            checkbox: arr\n          }),\n          \"method\": \"POST\",\n        })\n        .then(response => response.json())\n        .then(check => {\n          if(check.response === 'ok'){\n            this.props.close()\n          }\n        })\n      })\n    }\n  }\n\n  render() {\n    const {\n      from,\n      to,\n      all\n    } = this.state\n    const {\n      close\n    } = this.props\n    return (\n      <Alert\n        style={{overflow:'auto'}}\n        actionsLayout=\"vertical\"\n        actions={[{\n            title: 'Применить',\n            action: () => this.submit(),\n          },\n          {\n          title: 'Отмена',\n          autoclose: true,\n          mode: 'cancel'\n        }]}\n        onClose={close}\n      >\n        <div style={{ position: \"relative\", textAlign: \"left\", overflowX: \"hidden\", height: '300px', overflowY: \"auto\" }}>\n          <Cell indicator={<Switch checked={all} onChange={this.chooseAll}/>}>Все</Cell>\n          <Title level=\"3\" weight=\"bold\">Показывать авиабилеты из:</Title>\n          <FormLayout>\n            {\n              from && (\n                from.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"from\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n            <Title level=\"3\" weight=\"bold\">Показывать авиабилеты в:</Title>\n            {\n              to && (\n                to.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"to\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n          </FormLayout>\n        </div>\n      </Alert>\n    )\n  }\n}\n\nexport default SubscribeCities\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, SimpleCell, Link, Button, Alert, ScreenSpinner } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class Catalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n            });\n          })\n        })\n      }\n    })\n  }\n\n  // Запрос на сообщения\n  subscribeMessages = (screenName, name) => {\n    const { state } = this.props\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n          .then(() => {\n            bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n              method: \"wall.get\",\n              request_id: 2,\n              params: {\n                domain: screenName,\n                access_token: auth.access_token,\n                v: 5.107,\n              }\n            })\n            .then(async tags => {\n              let tagsIn = [];\n              let tagsOut = [];\n              let itemsWall = tags.response.items;\n              itemsWall.forEach((group) => {\n                let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                if (match.length) {\n                  if (match.length > 2) {\n                    let matchOut = match[2];\n                    tagsOut.push(matchOut)\n                }\n                let matchIn = match[0];\n                tagsIn.push(matchIn)\n                }\n              });\n              tagsIn = tagsIn.map((item) => \n                item[0]\n              )\n              tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n              tagsOut = tagsOut.map((item) => \n                item[0]\n              )\n              tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n              \n              this.props.setPopout(\n                <SubscribeCities\n                  userId={state.user.id}\n                  section={state.currentSection}\n                  catalog={state.catalog[state.currentCatalog].catalog}\n                  name={name}\n                  setPopout={(data) => this.props.setPopout(data)}\n                  groupId={data.response[0].id}\n                  from={tagsOut.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  })}\n                  to={tagsIn.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  })}\n                  close={() =>this.props.setPopout(null)}\n                />\n              )\n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        })\n        .catch(() => this.props.setPopout(null))\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  // Предупреждение с информацией\n  subscribeMessagesAlert = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const name = e.currentTarget.name\n    this.props.setPopout(\n      <Alert\n        actions={[{\n          title: 'Отмена',\n          autoclose: true,\n          mode: 'cancel'\n        }, {\n          title: 'Разрешить',\n          autoclose: true,\n          action: () => this.subscribeMessages(screenName, name),\n        }]}\n        onClose={() => this.props.setPopout(null)}\n      >\n        <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n      </Alert>\n    )\n  }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"home\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          state.catalog && (\n            state.catalog[state.currentCatalog].to.map((item, index) => \n              item.section ? \n                <SimpleCell\n                  key={index}\n                  expandable\n                  id={index}\n                  onClick={this.props.chooseSection}\n                >\n                  <Link>{item.section}</Link>\n                </SimpleCell>\n              :\n              <RichCell\n                key={index}\n                disabled\n                multiline\n                actions={\n                  <React.Fragment>\n                    <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={this.subscribe}\n                    >Подписаться</Button>\n                     <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={e => window.open(e.currentTarget.id, '_blank')}\n                    >Посмотреть</Button>\n                    <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                      <Icon28SettingsOutline />\n                    </Link>\n                  </React.Fragment>\n                }\n              >\n                {item.description}\n              </RichCell>\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default Catalog\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, Link, Button, Header, ScreenSpinner, Alert } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class SectionCatalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n                \"sec-fetch-dest\": \"empty\",\n                \"sec-fetch-mode\": \"cors\",\n                \"sec-fetch-site\": \"same-origin\"\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n              \"mode\": \"cors\",\n              \"credentials\": \"include\"\n            });\n          })\n        })\n      }\n    })\n  }\n\n    // Запрос на сообщения\n    subscribeMessages = (screenName, name) => {\n      const { state } = this.props\n      this.props.setPopout(<ScreenSpinner />)\n      bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n        app_id: state.appId,\n        scope: \"wall,groups\",\n        request_id: 1\n      })\n      .then(auth => {\n        if(auth.access_token && auth.scope === \"wall,groups\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.getById\",\n            request_id: 2,\n            params: {\n              group_id: screenName,\n              access_token: auth.access_token,\n              v: 5.107,\n            }\n          })\n          .then(data => {\n            bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n            .then(() => {\n              bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n                method: \"wall.get\",\n                request_id: 2,\n                params: {\n                  domain: screenName,\n                  access_token: auth.access_token,\n                  v: 5.107,\n                }\n              })\n              .then(async tags => {\n                let tagsIn = [];\n                let tagsOut = [];\n                let itemsWall = tags.response.items;\n                itemsWall.forEach((group) => {\n                  let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                  if (match.length) {\n                    if (match.length > 2) {\n                      let matchOut = match[2];\n                      tagsOut.push(matchOut)\n                  }\n                  let matchIn = match[0];\n                  tagsIn.push(matchIn)\n                  }\n                });\n                tagsIn = tagsIn.map((item) => \n                  item[0]\n                )\n                tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n                tagsOut = tagsOut.map((item) => \n                  item[0]\n                )\n                tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n                this.props.setPopout(\n                  <SubscribeCities\n                    userId={state.user.id}\n                    section={state.currentSection}\n                    catalog={state.catalog[state.currentCatalog].catalog}\n                    name={name}\n                    groupId={data.response[0].id}\n                    from={tagsOut.map((item) => {\n                      return {\n                        tag: item,\n                        checked: false\n                      }\n                    })}\n                    to={tagsIn.map((item) => {\n                      return {\n                        tag: item,\n                        checked: false\n                      }\n                    })}\n                    close={() =>this.props.setPopout(null)}\n                  />\n                )\n              })\n              .catch(() => this.props.setPopout(null))\n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        }\n      })\n      .catch(() => this.props.setPopout(null))\n    }\n  \n    // Предупреждение с информацией\n    subscribeMessagesAlert = e => {\n      const screenName = e.currentTarget.id.split(\"com/\")[1]\n      const name = e.currentTarget.name\n      this.props.setPopout(\n        <Alert\n          actions={[{\n            title: 'Отмена',\n            autoclose: true,\n            mode: 'cancel'\n          }, {\n            title: 'Разрешить',\n            autoclose: true,\n            action: () => this.subscribeMessages(screenName, name),\n          }]}\n          onClose={() => this.props.setPopout(null)}\n        >\n          <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n        </Alert>\n      )\n    }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"catalog\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            <Header>{state.catalog[state.currentCatalog].to[state.currentSection].section}</Header>\n          )\n        }\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            state.catalog && (\n              state.catalog[state.currentCatalog].to[state.currentSection].arr.map((item, index) => \n                <RichCell\n                  key={index}\n                  disabled\n                  multiline\n                  actions={\n                    <React.Fragment>\n                      <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={this.subscribe}\n                      >Подписаться</Button>\n                       <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={e => window.open(e.currentTarget.id, '_blank')}\n                      >Посмотреть</Button>\n                      <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                        <Icon28SettingsOutline />\n                      </Link>\n                    </React.Fragment>\n                  }\n                >\n                  {item.description}\n                </RichCell>\n              )\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default SectionCatalog\n","import React, { Component } from 'react'\r\nimport { render } from '@testing-library/react';\r\nimport { Snackbar } from '@vkontakte/vkui';\r\n\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\n\r\nexport class SnakbarError extends Component {\r\n    state = {\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Snackbar onClose={this.props.close} before={<Icon24Error fill='#FA5728'/>}>Ошибка интернет-соединения. Попробуйте позже.</Snackbar>\r\n        )\r\n    }\r\n}\r\n \r\nexport default SnakbarError;","import React, { Component } from 'react'\nimport { Group, ScreenSpinner, List, RichCell, Link, Separator, Placeholder } from '@vkontakte/vkui'\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DeleteOutlineAndroid from '@vkontakte/icons/dist/28/delete_outline_android';\n\nimport SnackbarError from './SnackbarError';\n\nexport class MyGroups extends Component {\n  state = {\n    data: null,\n    snackbar:null,\n  }\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ data: data.tags })\n      this.props.setPopout(null)\n    }).catch(err => {\n      this.props.setPopout(null)\n      this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})}/>, data:'error'})\n    })\n  }\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <Group>\n        {this.state.data === 'error' ? <Placeholder>Ошибка интернет-соеденения</Placeholder>:\n        <List>\n          {\n            data && (\n              data.map((item, i) =>\n                <div key={i}>\n                  <RichCell\n                    text={item.group_name}\n                    caption={\n                      \"Куда: \"+item.body.split(\"#\")[1].split(\"@\")[0]\n                    }\n                    after={\n                      <div>\n                        <Link>\n                          <Icon28EditOutline />\n                        </Link><br /><br />\n                        <Link>\n                          <Icon28DeleteOutlineAndroid />\n                        </Link>\n                      </div>\n                    }\n                  >\n                    {item.category}\n                  </RichCell>\n                  <Separator />\n                </div>\n              )\n            )\n          }\n        </List>\n      }\n      {this.state.snackbar}\n      </Group>\n    )\n  }\n}\n\nexport default MyGroups\n","import React, { Component } from 'react'\nimport SnackbarError from './SnackbarError';\nimport { Group, ScreenSpinner, CardGrid, Card, Div, Button, Alert, Placeholder } from '@vkontakte/vkui'\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENTS = {\n  'random': 'любая',\n  'E': 'Европа',\n  'F': 'Африка',\n  'O': 'Океания',\n  'A': 'Азия',\n  'S': 'Южная Америка',\n  'N': 'Северная Америка',\n};\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рубль \",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst CURRENCY1 = {\n  AZN: \"манат\",\n  BYN: \"беларусских рублей\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рублей\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nexport class MyDB extends Component {\n  state = {\n    snackbar:null\n  }\n\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-requests\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ data: data.requests })\n      this.props.setPopout(null)\n    }).catch(err => {\n      this.props.setPopout(null)\n      this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})}/>, data:'error'})\n    })\n  }\n\n  openAlert = (request_id, i) => {\n    console.log(request_id)\n      this.props.setPopout(\n        <Alert\n        actions={[{\n          title: 'Нет',\n          autoclose: true,\n          mode: 'cancel'\n        }, {\n          title: 'Да',\n          autoclose: true,\n          mode: 'destructive',\n          action: () => this.delete(request_id, i),\n        }]}\n        onClose={() => this.props.setPopout(null)}>\n          <h1>Удалить?</h1>\n        </Alert>\n      )\n  }\n\n  delete = (request_id, i) => {\n    this.props.setPopout(<ScreenSpinner />);\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/delete-request\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"referrer\": \"https://appvk.flights.ru/\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify({request_id:request_id}),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(check => {\n      if(check.response === 'ok'){\n        let remove = this.state.data.splice(i, 1);\n        this.setState({ date:remove });\n        this.props.setPopout(null);\n      }\n    })\n  }\n  \n\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <div>\n        {\n          data &&        \n          <div>\n          {data === 'error' ? <Placeholder>Ошибка интернет-соеденения</Placeholder> :\n          (\n            data.map((item, index) => \n            <Group separator=\"hide\" key={index}>\n              <CardGrid>\n                <Card size=\"l\" mode=\"shadow\">\n                  <Div style={{ padding: '20px', lineHeight: 1.5 }}>\n                    Из страны <b>{\n                      JSON.parse(item.output).countrySrc ? JSON.parse(item.output).countrySrc : \"любая\"\n                    }</b> и города <b>{JSON.parse(item.output).citySrc ? JSON.parse(item.output).citySrc : \"любой\"}</b><br />\n                    В часть света <b>{CONTINENTS[JSON.parse(item.output).continentDst]}</b> и страну <b>{JSON.parse(item.output).countryDst ? JSON.parse(item.output).countryDst : \"любая\"}</b><br />\n                    В город <b>{JSON.parse(item.output).cityDst ? JSON.parse(item.output).cityDst : \"любой\"}</b><br />\n                    Направление полетов - <b>{JSON.parse(item.output).forward ? \"туда\" : \"туда-обратно\"}</b><br />\n                    {\n                      JSON.parse(item.output).dates.map((item, i) => \n                        <div key={i}>\n                          Год вылета ({i+1}) <b>{item.year}</b><br />\n                          Время года ({i+1}) <b>{SEASONS_TRANSCRIPTION[item.season]}</b><br />\n                          Месяц ({i+1}) <b>{MONTHS_TRANSCRIPTION[item.month]}</b><br />\n                        </div>    \n                      )\n                    }<br />\n                    Пассажиры <b>{PASSENGERS[JSON.parse(item.output).passengers]}</b><br />\n                    Цена от <b>{JSON.parse(item.output).costMin}</b> до <b>{JSON.parse(item.output).costMax}</b> {CURRENCY1[JSON.parse(item.output).currency]}<br />\n\n                    Период показа <b>{JSON.parse(item.output).interval}</b> минут<br />\n                    Глубина поиска <b>{JSON.parse(item.output).updated}</b> минут<br />\n                    Максимальное количество билетов за 24 часа <b>{JSON.parse(item.output).limit === \"0\" ? \"все\" : JSON.parse(item.output).limit}</b><br />\n                    Язык (туда-обратно) <b>{LANGUAGES[JSON.parse(item.output).language]}</b><br />\n                    Валюта (цена) <b>{CURRENCY[JSON.parse(item.output).currency]}</b><br />\n                    Валюта (метапоисковика) <b>{CURRENCY[JSON.parse(item.output).currencyForUrl]}</b><br />\n                    {\n                      JSON.parse(item.output).optional && (\n                        <div><br />\n                          <div style={{ color: 'var(--tabbar_inactive_icon)' }}>Дополнительные параметры</div>\n                          {\n                            JSON.parse(item.output).profitability && (\"Выгодность покупки больше \")\n                          }\n                          {\n                            JSON.parse(item.output).profitability && \n                            <b>{JSON.parse(item.output).profitability+\"%\"}</b>\n                          }<br />\n                          Дни недели вылета <b>{\n                            ((days) => {\n                              const daysOfWeek = [\n                                \"вс\",\n                                \"пн\",\n                                \"вт\",\n                                \"ср\",\n                                \"чт\",\n                                \"пт\",\n                                \"сб\"\n                              ]\n                              let check = 0;\n                              days.every((element, index, array) => {\n                                  check++;\n                                  return element === true;\n                              });\n                              if (check === 7) {\n                                  return 'все';\n                              }\n                              let res = '';\n                              for (let index = 1; index < days.length; index++) {\n                                  if (days[index]) {\n                                      res += daysOfWeek[index].toLowerCase() + ', ';\n                                  }\n                              }\n                              res += daysOfWeek[0].toLowerCase();\n                              return res;\n                            })(JSON.parse(item.output).days)\n                          }</b><br />\n                          {\n                            JSON.parse(item.output).showAddionalWeather && (\n                              <div>\n                                Прогноз погоды в день прилета<br />\n                                Днем от <b>{JSON.parse(item.output)['dayTemp.min']}</b> С до <b>{JSON.parse(item.output)['dayTemp.max']}</b> С<br />\n                                Ночью от <b>{JSON.parse(item.output)['nightTemp.min']}</b> С до <b>{JSON.parse(item.output)['nightTemp.max']}</b> С<br />\n                              </div>\n                            )\n                          }\n                        </div>\n                      )\n                    }\n                  </Div>\n                  <Div>\n                    <Button\n                      size=\"xl\"\n                    >\n                      Редактировать\n                    </Button><br />\n                    <Button\n                      onClick={() => this.openAlert(item.id, index)}\n                      size=\"xl\"\n                      mode=\"destructive\"\n                    >\n                      Удалить\n                    </Button>\n                  </Div>\n                </Card>\n              </CardGrid>\n            </Group>\n            )\n          )\n         }\n         </div> \n        }\n        {this.state.snackbar}\n      </div>\n    )\n  }\n}\n\nexport default MyDB\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, FixedLayout, Tabs, TabsItem } from '@vkontakte/vkui'\nimport MyGroups from '../components/MyGroups'\nimport MyDB from '../components/MyDB'\n\nexport class MySubs extends Component {\n  state = {\n    activeTab: 'groups',\n  }\n\n  render() {\n    const {\n      activeTab\n    } = this.state\n    const {\n      id,\n      state\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader>Мои подписки</PanelHeader>\n        <FixedLayout vertical=\"top\">\n          <Tabs>\n            <TabsItem\n              selected={activeTab === 'groups'}\n              onClick={() => this.setState({ activeTab: 'groups' })}\n            >Сообщества</TabsItem>\n            <TabsItem\n              selected={activeTab === 'database'}\n              onClick={() => this.setState({ activeTab: 'database' })}\n            >База данных</TabsItem>\n          </Tabs>\n        </FixedLayout>\n        <div style={{ marginTop: '60px' }} />\n        {\n          activeTab === 'groups' ? \n            <MyGroups\n              setPopout={this.props.setPopout}\n              state={state}\n            />\n          :\n            <MyDB\n              setPopout={this.props.setPopout}\n              state={state}\n            />\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default MySubs\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, Placeholder, Button, RichCell, Avatar, ScreenSpinner } from '@vkontakte/vkui'\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SnackbarError from '../components/SnackbarError';\n\nexport class Friends extends Component {\n  state = {\n    friends: null,\n    snackbar:null\n  }\n\n  componentDidMount() {\n    this.getFriends()\n  }\n  \n  getFriends = () => {\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: this.props.state.appId,\n      scope: \"friends\"\n    })\n    .then(data => {\n      if(data.access_token){\n        if(data.scope === \"friends\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"friends.get\",\n            params: {\n              access_token: data.access_token,\n              fields: \"city,photo_50\",\n              v: 5.107\n            },\n            request_id: '3'\n          })\n          .then(data => {\n            if(data.response.items){\n              this.setState({\n                friends: data.response.items.filter((item) => item.city).filter((item) => \n                  item.city.id !== this.props.state.user.city.id\n                )\n              })\n              this.props.setPopout(null)\n            }else{\n              this.props.setPopout(null)\n            }\n          })\n          .catch(() => this.props.setPopout(null))\n        }else{\n          this.props.setPopout(null)\n        }\n      }else{\n        this.props.setPopout(null)\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  getPrice = (e) => {\n    this.props.setPopout(<ScreenSpinner />)\n    const city = e.currentTarget.id.split(\"_\")[1]\n    const id = e.currentTarget.id.split(\"_\")[0]\n    fetch(\"https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/data/ru/cities.json\")\n    .then(response => response.json())\n    .then(cities => {\n      const myCode = cities.filter((item) => item.name === this.props.state.user.city.title)[0].code\n      const friendCode = cities.filter((item) => item.name === city)[0].code\n      fetch(`https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/v1/prices/calendar?&origin=${myCode}&destination=${friendCode}&calendar_type=departure_date&token=d378bb3f3b879e6fc87899314ba5ce5d`)\n      .then(response => response.json())\n      .then(data => {\n        let indexPrice = Object.keys(data.data)[0]\n        if(Object.keys(data.data).length > 3){\n          indexPrice = Object.keys(data.data)[3]\n        }\n        this.setState({\n          friends: this.state.friends.map((item) => {\n            if(item.id === parseInt(id, 10)){\n              item.price = (data.data[indexPrice].price + \" \" + data.currency)\n            }\n            return item\n          })\n        })\n        this.props.setPopout(null)\n      }).catch(err => {\n        this.props.setPopout(null)\n        this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})}/>})\n      })\n    }).catch(err => {\n      console.log('error');\n    })\n  }\n\n  render() {\n    const {\n      id\n    } = this.props\n    const {\n      friends\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader>Друзья</PanelHeader>\n        {\n          friends ? \n          friends.map((item) => \n            <RichCell\n              key={item.id}\n              actions={\n                <React.Fragment>\n                  <Button\n                    id={item.id+\"_\"+item.city.title}\n                    onClick={this.getPrice}\n                  >\n                    {\n                      item.price ? item.price : \"Показать цену\"\n                    }\n                  </Button>\n                </React.Fragment>\n              }\n              text={item.city.title}\n              before={<Avatar src={item.photo_50}/>}\n            >\n              {item.first_name+\" \"+item.last_name}\n            </RichCell>\n          )\n          :\n          <Placeholder\n            icon={<Icon56UsersOutline />}\n            header=\"Друзья\"\n            action={<Button onClick={this.getFriends} size=\"l\">Показать список</Button>}\n          >\n            Чтобы получить список к друзьям, вам нужно предоставить доступ приложению.\n          </Placeholder>\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default Friends\n","import React, { Component } from 'react'\nimport SnackbarError from '../components/SnackbarError'; \nimport { Panel, PanelHeader, FormLayout, Header, Input, Select, Checkbox, Button, Div, RangeSlider, SelectMimicry, ScreenSpinner, SimpleCell, Cell, Switch } from '@vkontakte/vkui'\nimport Icon28AddCircleOutline from '@vkontakte/icons/dist/28/add_circle_outline';\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\n\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENT_DST = {\n  A:\"Любая\",\n  B:'Европа',\n  C:\"Африка\",\n  D:'Океания',\n  E:\"Азия\",\n  F:\"Южная Америка\",\n  D:\"Северная Америка\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге\",\n  RUB: \"рубль\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nexport class Settings extends Component {\n  state = {\n    updated: \"60\",\n    limit: \"0\",\n    datesCnt: [{\n      year: (new Date()).getFullYear(),\n      season: 'all',\n      month: '0'\n    }],\n    language: 'ru',\n    profitability:30,\n    currency: 'RUB',\n    currencyForUrl: 'RUB',\n    passengers:'url',\n    randomCost:false,\n    costMin: 100,\n    costMax: 500000,\n    dayTempMin:-50,\n    dayTempMax:50,\n    interval:'60',\n    nighTempMin:-50,\n    nighTempMax:50,\n    days:[true, true, true, true, true, true, true],\n    allDays:true,\n    snackbar:null\n  }\n\n\n  onChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  onChangeFrom = e => {\n    const { datesCnt } = this.state\n    datesCnt[parseInt(e.currentTarget.id, 10)][e.currentTarget.name] = e.currentTarget.value\n    this.setState({\n      datesCnt\n    })\n  }\n\n  addFrom = () => {\n    const { datesCnt } = this.state\n    datesCnt.push({\n      yearSrc: (new Date()).getFullYear(),\n      seasonSrc: SEASONS_TRANSCRIPTION['all'],\n      monthSrc: MONTHS_TRANSCRIPTION['0']\n    })\n    this.setState({\n      datesCnt\n    })\n  }\n\n  removeFrom = () => {\n    const { datesCnt } = this.state\n    this.setState({\n      datesCnt: datesCnt.splice(0, datesCnt.length-1)\n    })\n  }\n\n  onChangeDays = (e) => {\n    console.log(e.currentTarget.name);\n    if(e.currentTarget.name == 'all') {\n      this.setState({ allDays:!this.state.allDays});\n    }else{\n      //this.setState({ allDays:!this.state.allDays});\n      let bool = !this.state.days[Number(e.currentTarget.name)];\n      let days = this.state.days.splice([Number(e.currentTarget.name)], 1, bool);\n      console.log(this.state.days);\n      \n      let t = true;\n      this.state.days.forEach(e => {\n        if(!e) t = false\n      })\n      this.setState({ days:this.state.days, allDays:t });\n    }\n\n  }\n\n\n  //проверка дней все или не все\n\n  sort_res = () => { //готовим данные к отправке\n    this.props.setPopout(<ScreenSpinner />)\n    const { user, citySrc, cityDst, countryDst, countrySrc } = this.props.state;\n    const { costMax, costMin, currency,currencyForUrl,language, randomCost, dual,forward, datesCnt, profitability, dayTempMin, dayTempMax, nighTempMax, nighTempMin,passengers, updated, interval, limit } = this.state;\n    let days;\n    if(this.state.allDays) {\n      days = [true, true, true, true, true, true, true];\n    }else{\n      days = this.state.days;\n    }\n    let output = {\n      citySrc, \n      cityDst,\n      countryDst,\n      countrySrc,\n      costMax, \n      costMin,\n      currency,\n      currencyForUrl, \n      language,\n      randomCost,\n      forward:(forward === 'on'),\n      dual:(dual === 'on'),\n      passengers,\n      updated:Number(updated),\n      limit,\n      interval,\n      optional:true,\n      dates:datesCnt,\n      showAddionalWeather:true,\n      profitability:String(profitability),\n      ['nightTemp.max']:nighTempMax,\n      ['nightTemp.min']:nighTempMin,\n      ['dayTemp.max']:dayTempMax,\n      ['dayTemp.min']:dayTempMin,\n      days\n    }\n    let obj = {\n      id:null,\n      interval:interval,\n      limit:limit,\n      updated:Number(updated),\n      user_id:user.id,\n      output:output\n    }\n    this.save_request(obj);\n    console.log(obj);\n  }\n\n  save_request = (obj) => {  //сохранение подписки\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-user-api-request\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"referrer\": \"https://appvk.flights.ru/\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify(obj),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(check => {\n      if(check.response === 'ok'){\n        this.props.setPopout(null);\n        console.log(check);\n      }\n    }).catch(err => {\n        this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})} />})\n        this.props.setPopout(null);\n    })\n  }\n\n\n  render() {\n    const {\n      id\n    } = this.props\n    const {\n      datesCnt,\n      currency,\n      currencyForUrl,\n      language,\n      countrySrc,\n      citySrc,\n      countryDst,\n      cityDst,\n      continentDst,\n      randomCost,\n      costMin,\n      costMax,\n      dayTempMin,\n      dayTempMax,\n      nighTempMax,\n      nighTempMin,\n      days\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader>Настройки</PanelHeader>\n        <FormLayout>\n          <Header>Откуда</Header>\n          <SelectMimicry\n            top=\"Страна вылета\"\n            name=\"countrySrc\"\n            data-type=\"country\"\n            placeholder=\"Россия\"\n            onClick={() => {\n              this.props.changeDefaultName(\"countrySrc\")\n              this.props.changeDefault(\"Страна вылета\")\n              this.props.changeDefaultText(countrySrc)\n              this.props.go(\"chooseCountry\");\n            }}\n          >{this.props.state.countrySrc}</SelectMimicry>\n          <SelectMimicry\n            top=\"Город вылета\"\n            placeholder=\"Москва\"\n            name=\"citySrc\"\n            disabled={this.props.state.countrySrc == null}\n            onClick={() => {\n              this.props.changeDefaultName(\"citySrc\")\n              this.props.changeDefault(\"Город вылета\")\n              this.props.changeDefaultText(citySrc)\n              this.props.go(\"chooseCity\");\n            }}\n          >{this.props.state.citySrc}</SelectMimicry>\n          <Header>Куда</Header>\n\n          <Select\n            top=\"Часть света\"\n            name=\"continentDst\"\n            onChange={this.onChange}\n            value={continentDst}\n          >\n            {\n              Object.keys(CONTINENT_DST).map((continent) => \n                <option value={continent} key={continent}>\n                  {CONTINENT_DST[continent]}\n                </option>\n              )\n            }\n          </Select>\n\n          <SelectMimicry\n            top=\"Страна\"\n            name=\"countryDst\"\n            placeholder=\"Италия\"\n            onClick={() => {\n              this.props.changeDefaultName(\"countryDst\")\n              this.props.changeDefault(\"Страна прибытия\")\n              this.props.changeDefaultText(countryDst)\n              this.props.go(\"chooseCountry\");   \n             }          \n            }\n          >{this.props.state.countryDst}</SelectMimicry>\n          <SelectMimicry\n            top=\"Город\"\n            name=\"cityDst\"\n            placeholder=\"Рим\"\n            disabled={this.props.state.countryDst == null}\n            onClick={() => {\n              this.props.changeDefaultName(\"cityDst\")\n              this.props.changeDefault(\"Город прибытия\")\n              this.props.changeDefaultText(cityDst)\n              this.props.go(\"chooseCity\");   \n             }          \n            }\n          >{this.props.state.cityDst}</SelectMimicry>\n          <Header>Интервал</Header>\n          <Select\n            top=\"Получать дешевые авиабилеты один раз в:\"\n            name=\"interval\"\n          >\n            <option value=\"60\">Час</option>\n            <option value=\"240\">Четыре часа</option>\n            <option value=\"480\">Восемь часов</option>\n            <option value=\"1440\">24 часа</option>\n          </Select>\n          <Select\n            top=\"Получать информацию за крайние N, часов\"\n            name=\"updated\"\n            onChange={this.onChange}\n            defaultValue=\"60\"\n          >\n            <option value=\"60\">1 час</option>\n          </Select>\n          <Header>Количество</Header>\n          <Select\n            top=\"Сколько дешевых авиабилетов показывать в сутки?\"\n            name=\"limit\"\n            defaultValue=\"0\"\n          >\n            <option value=\"0\">Все</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n            <option value=\"300\">300</option>\n          </Select>\n          <Header>Полеты</Header>\n          <Checkbox name=\"forward\" onChange={this.onChange}>Туда</Checkbox>\n          <Checkbox name=\"dual\" onChange={this.onChange}>Туда-обратно</Checkbox>\n          <Header>Когда</Header>\n          {\n            datesCnt && (\n              datesCnt.map((item, i) => \n                <FormLayout key={i}>\n                  <Select\n                    top={`Год вылета (${i+1})`}\n                    name=\"year\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.yearSrc}\n                  >\n                    {\n                      Array.from(Array(31).keys()).map((year) => \n                        <option key={year} vaule={(new Date()).getFullYear()+year}>\n                          {(new Date()).getFullYear()+year}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  <Select\n                    top={`Время года (${i+1})`}\n                    name=\"season\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.seasonSrc}\n                  >\n                    {\n                      Object.keys(SEASONS_TRANSCRIPTION).map((season) => \n                        <option value={season} key={season}>\n                          {SEASONS_TRANSCRIPTION[season]}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  <Select\n                    top={`Месяц года (${i+1})`}\n                    name=\"month\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.monthSrc}\n                  >\n                    {\n                      Object.keys(MONTHS_TRANSCRIPTION).map((month) => \n                        <option value={month} key={month}>\n                          {MONTHS_TRANSCRIPTION[month]}\n                        </option>\n                      )\n                    }\n                  </Select>\n                </FormLayout>\n              )\n            )\n          }\n          {\n            datesCnt.length > 1\n          }\n          <Div style={{ display: 'flex' }}>\n            {\n              datesCnt.length < 3 && (\n                <Button\n                  size=\"l\"\n                  onClick={this.addFrom}\n                >\n                  <Icon28AddCircleOutline />\n                </Button>\n              )\n            }\n            {\n              datesCnt.length > 1 && (\n                <Button\n                  size=\"l\"\n                  mode=\"destructive\"\n                  onClick={this.removeFrom}\n                >\n                  <Icon28CancelCircleOutline color=\"rgb(255, 26, 0)\" />\n                </Button>\n              )\n            }\n          </Div>\n          <Select\n            top=\"Язык\"\n            name=\"language\"\n            onChange={this.onChange}\n            value={language}\n          >\n            {\n              Object.keys(LANGUAGES).map((language) => \n                <option value={language} key={language}>\n                  {LANGUAGES[language]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта\"\n            name=\"currency\"\n            onChange={this.onChange}\n            value={currency}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта метапоисковика\"\n            name=\"currencyForUrl\"\n            onChange={this.onChange}\n            value={currencyForUrl}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Пассажиры\"\n            name=\"passengers\"\n            onChange={this.onChange}\n          >\n            {\n              Object.keys(PASSENGERS).map((passengers) => \n                <option value={passengers} key={passengers}>\n                  {PASSENGERS[passengers]}\n                </option>\n              )\n            }\n          </Select>\n          <Header>Стоимость, {currency}</Header>\n          <Checkbox\n            checked={randomCost}\n            onChange={(e) => {\n              this.setState({\n                randomCost: e.currentTarget.checked\n              })\n            }}\n          >\n            Любая\n          </Checkbox>\n          <RangeSlider\n            top={costMin + \" - \" + costMax}\n            min={100}\n            max={500000}\n            step={100}\n            defaultValue={[100, 500000]}\n            value={[costMin, costMax]}\n            onChange={(value) => {\n              this.setState({\n                costMin: value[0],\n                costMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <Div style={{ display: 'flex' }}>\n            <Input\n              onFocus={() => {\n                console.log('focus')\n              }}\n              value={costMin}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value < costMax && value > 100){\n                    this.setState({ costMin: value })\n                  }\n                }\n              }}\n            />\n            <Input\n              value={costMax}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value > costMin && value < 500000){\n                    this.setState({ costMax: value })\n                  }\n                }\n              }}\n            />\n          </Div>\n          <Header>Дополнительные параметры</Header>\n          <Select name='profitability' onChange={this.onChange} top=\"Показывать авиабилеты только с выгодой больше, %\">\n            <option>30</option>\n            <option>40</option>\n            <option>50</option>\n            <option>60</option>\n            <option>70</option>\n            <option>80</option>\n            <option>90</option>\n          </Select>\n          <Header>Вылеты в определенные дни недели</Header>\n            <Cell indicator={<Checkbox checked={this.state.allDays} name='all' onChange={this.onChangeDays}/>}>Любой</Cell>\n            <Div style={{marginTop:-20}}>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='0' onChange={this.onChangeDays} checked={days[0] || this.state.allDays} />}>Понедельник</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='1' onChange={this.onChangeDays} checked={days[1] || this.state.allDays}/>} >Вторник</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='2' onChange={this.onChangeDays} checked={days[2] || this.state.allDays}/>}>Среда</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='3' onChange={this.onChangeDays} checked={days[3] || this.state.allDays}/>}>Четверг</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='4' onChange={this.onChangeDays} checked={days[4] || this.state.allDays}/>}>Пятница</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='5' onChange={this.onChangeDays} checked={days[5] || this.state.allDays}/>}>Суббота</Cell>\n              <Cell indicator={<Checkbox style={{ padding:0}} name='6' onChange={this.onChangeDays} checked={days[6] || this.state.allDays}/>}>Воскресенье</Cell>\n            </Div>\n          <Header>Погода</Header>\n          <RangeSlider\n            top=\"Температура воздуха днем в день прилета\"\n            bottom={\"От \" + dayTempMin + \" до \" + dayTempMax}\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[dayTempMin, dayTempMax]}\n            onChange={(value) => {\n              this.setState({\n                dayTempMin: value[0],\n                dayTempMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <RangeSlider\n            top=\"Температура воздуха ночью в день прилета\"\n            bottom={\"От\" + nighTempMin + \" до \" + nighTempMax}\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[nighTempMin, nighTempMax]}\n            onChange={(value) => {\n              this.setState({\n                nighTempMin: value[0],\n                nighTempMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <Button mode='primary' size='xl' onClick={this.sort_res}>Применить</Button>\n        </FormLayout>\n        {this.state.snackbar}\n      </Panel>\n    )\n  }\n}\n\nexport default Settings \n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nexport class ChooseCountry extends Component {\n  state = {\n    inp: this.props.default,\n    list:null\n  }\n\n  onChange = (e) => {\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${\n      e.currentTarget.value\n    }&locale=ru`)\n    .then(response => response.json())\n    .then(list => {\n      if(list.length > 0){\n        var resArr = [];\n        list.forEach(function(item){\n          var i = resArr.findIndex(x => x.country_name === item.country_name);\n          if(i <= -1){\n            resArr.push(item);\n          }\n        });\n        this.setState({\n          list: resArr\n        })\n      }\n    })\n  }\n\n  onChoose = (country_name) => {\n    this.props.changeFunction(country_name);\n    this.props.back()\n  }\n\n  render() {\n    const {\n      list\n    } = this.state\n    const {\n      id,\n      back,\n      text\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={back} />\n          }\n        >{text}</PanelHeader>\n        <Div>\n          <Input\n            onChange={this.onChange}\n          />\n        </Div>\n        {list === null ? \n        <Placeholder>Начните вводить название страны</Placeholder>\n        :\n        <List>\n          {\n            list && list.map((item, i) => \n              <SimpleCell\n                onClick={() => this.onChoose(item.country_name)}\n                id={item.country_name}\n                key={i}\n                after={\n                  item.country_name === text && (\n                    <Icon24Done />\n                  )\n                }\n              >\n                {item.country_name}\n              </SimpleCell>\n            )\n          }\n        </List>\n       }\n      </Panel>\n    )\n  }\n}\n\nexport default ChooseCountry\n","import React, { Component } from 'react'\r\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport class ChooseCity extends Component {\r\n  state = {\r\n    inp: this.props.default,\r\n    list:null\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let country = \"\";\r\n    console.log(this.props.state)\r\n    if(this.props.changeDefaultName == 'citySrc') \r\n        country = this.props.state.countrySrc;\r\n    else \r\n        country = this.props.state.countryDst;\r\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${country} ${\r\n      e.currentTarget.value\r\n    }&locale=ru&types[]=city`)\r\n    .then(response => response.json())\r\n    .then(list => {\r\n      if(list.length > 0){\r\n        var resArr = [];\r\n        list.forEach(function(item){\r\n          var i = resArr.findIndex(x => x.name === item.name);\r\n          if(i <= -1 && item.country_name === country){\r\n            resArr.push(item);\r\n          }\r\n        });\r\n        this.setState({\r\n          list: resArr\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onChoose = (name) => {\r\n    this.props.changeFunction(name);\r\n    this.props.back()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list\r\n    } = this.state\r\n    const {\r\n      id,\r\n      back,\r\n      text\r\n    } = this.props\r\n    return (\r\n      <Panel id={id}>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack onClick={back} />\r\n          }\r\n        >{text}</PanelHeader>\r\n        <Div>\r\n          <Input\r\n            onChange={this.onChange}\r\n          />\r\n        </Div>\r\n        {list === null ? \r\n        <Placeholder>Начните вводить название города</Placeholder>:\r\n        <List>\r\n          {\r\n            list && list.map((item, i) => \r\n              <SimpleCell\r\n                onClick={() => this.onChoose(item.name)}\r\n                id={item.name}\r\n                key={i}\r\n                after={\r\n                  item.name === text && (\r\n                    <Icon24Done />\r\n                  )\r\n                }\r\n              >\r\n                {item.name}\r\n              </SimpleCell>\r\n            )\r\n          }\r\n        </List>\r\n      }\r\n      </Panel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseCity\r\n","import React from 'react'\nimport { Epic, Tabbar, TabbarItem, View, Panel } from '@vkontakte/vkui'\nimport bridge from '@vkontakte/vk-bridge'\nimport axios from 'axios';\n\n// icons\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\nimport Icon28Settings from '@vkontakte/icons/dist/28/settings';\nimport Icon28HomeOutline from '@vkontakte/icons/dist/28/home_outline';\nimport Icon28Users from '@vkontakte/icons/dist/28/users';\nimport Icon28Send from '@vkontakte/icons/dist/28/send';\n\n\n// panels\nimport Groups from './panels/Groups'\nimport Catalog from './panels/Catalog'\nimport SectionCatalog from './panels/SectionCatalog'\nimport MySubs from './panels/MySubs'\nimport Friends from './panels/Friends'\nimport Settings from './panels/Settings'\nimport ChooseCountry from './components/ChooseCountry';\nimport ChooseCity from './components/ChooseCity';\n\nclass App extends React.Component {\n  state = {\n    activeStory: 'settings',\n    activePanel: 'home',\n    popout: null,\n    currentCatalog: 0,\n    catalog:null,\n    appId: null,\n  }\n\n  componentDidMount() {\n    // Получаем данные о пользователе и каналы\n    // this.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetUserInfo\")\n    .then(user => {\n      this.setState({\n        appId: parseInt(window.location.href.split(\"vk_app_id=\")[1].split(\"&\")[0], 10),\n        user\n      })\n      axios.get(\"https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Channels\")\n      .then(async data => {\n        await this.sortData(data.data)\n      })\n    })\n  }\n\n  // Приведение каналов в адекватный вид:\n  // [\n  //   {\n  //     catalog: \"catalog name\",\n  //     to: [\n  //       \"country\",\n  //       {\n  //         \"section\": \"в европу\",\n  //         arr: [\n  //           \"country\"\n  //         ]\n  //       }\n  //     ]\n  //   }\n  // ]\n  sortData = async data => {\n    const catalog = []\n    data.forEach(async item => {\n      let index = catalog.findIndex(a => a.catalog === item.catalog)\n      if(index === -1){\n        catalog.push({\n          catalog: item.catalog,\n          to: []\n        })\n        index = catalog.length-1\n      }\n      if(item.section){\n        const sectionIndex = catalog[index].to.findIndex(a => a.section === item.section)\n        if(sectionIndex === -1){\n          catalog[index].to.push({\n            section: item.section,\n            arr: [item]\n          })\n        }else{\n          catalog[index].to[sectionIndex].arr.push(item)\n        }\n      }else{\n        catalog[index].to.push(item)\n      }\n    })\n    catalog.shift()\n    catalog.splice(catalog.findIndex(a => a.catalog === \"\"),1)\n    this.setState({ catalog })\n    this.setPopout(null)\n  }\n  \n  // Смена табов\n  onStoryChange = (e) => {\n    this.setState({ activeStory: e.currentTarget.dataset.story, activePanel: 'home' })\n  }\n\n  // Рисование попаута\n  setPopout = popout => {\n    this.setState({ popout })\n  }\n\n  // Открытие той или иной части света\n  openCatalog = e => {\n    this.setState({ \n      activePanel: 'catalog',\n      currentCatalog: parseInt(e.currentTarget.id, 10),\n    })\n  }\n\n  choose = ( data) => {\n    console.log(this.state.changeDefaultName, data);\n    this.setState({[this.state.changeDefaultName]: data});\n  }\n\n  // Изменение панели\n  go = activePanel => {\n    this.setState({ activePanel, currentSection: null })\n  }\n\n  // Открыть секцию\n  chooseSection = e => {\n    this.setState({ activePanel: \"sectionCatalog\", currentSection: parseInt(e.currentTarget.id, 10) })\n  }\n\n  render () {\n    const {\n      activePanel,\n      popout,\n      defaultCountry,\n      chooseCountryText,\n      changeFunction,\n      changeDefaultName\n    } = this.state\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'groups'}\n            data-story=\"groups\"\n            text=\"Сообщества\"\n          ><Icon28Users3Outline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'settings'}\n            data-story=\"settings\"\n            text=\"Настройки\"\n          ><Icon28Settings /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'subscribes'}\n            data-story=\"subscribes\"\n            text=\"Мои подписки\"\n          ><Icon28HomeOutline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'friends'}\n            data-story=\"friends\"\n            text=\"Друзья\"\n          ><Icon28Users /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'aviasales'}\n            data-story=\"aviasales\"\n            text=\"Aviasales\"\n          ><Icon28Send /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id=\"groups\" activePanel={activePanel} popout={popout}>\n          <Groups\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n            openCatalog={this.openCatalog}\n          />\n          <Catalog\n            id=\"catalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            chooseSection={this.chooseSection}\n          />\n          <SectionCatalog\n            id=\"sectionCatalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n          />\n        </View>\n        <View id=\"settings\" activePanel={activePanel} popout={popout}>\n          <Settings\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            changeDefault={(chooseCountryText) => this.setState({ chooseCountryText })}\n            changeDefaultText={(defaultCountry) => this.setState({ defaultCountry })}\n            changeDefaultName={(changeDefaultName) => this.setState({ changeDefaultName })}\n          />\n          <ChooseCountry\n            id=\"chooseCountry\"\n            default={defaultCountry}\n            text={chooseCountryText}\n            changeFunction={this.choose}\n            changeDefaultName={changeDefaultName}\n            back={() => this.setState({ activePanel: 'home' })}\n          />\n\n          <ChooseCity\n            id='chooseCity'\n            default={defaultCountry}\n            text={chooseCountryText}\n            changeFunction={this.choose}\n            changeDefaultName={changeDefaultName}\n            state={this.state}\n            back={() => this.setState({ activePanel: 'home' })}\n          />\n        </View>\n        <View id=\"subscribes\" activePanel={activePanel} popout={popout}>\n          <MySubs\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n          />\n        </View>\n        <View id=\"friends\" activePanel={activePanel} popout={popout}>\n          <Friends\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n          />\n        </View>\n        <View id=\"aviasales\" activePanel={activePanel} popout={popout}>\n          <Panel id=\"home\"></Panel>\n        </View>\n      </Epic>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as eruda from 'eruda';\nimport * as erudaCode from 'eruda-code';\nimport * as erudaDom from 'eruda-dom';\nimport bridge from '@vkontakte/vk-bridge'\nimport '@vkontakte/vkui/dist/vkui.css';\n\nbridge.send(\"VKWebAppInit\", {})\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\neruda.init();\neruda.add(erudaCode);\neruda.add(erudaDom);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}