{"version":3,"sources":["panels/Groups.jsx","components/SubscribeCities.jsx","panels/Catalog.jsx","panels/SectionCatalog.jsx","components/MyGroups.jsx","components/MyDB.jsx","panels/MySubs.jsx","panels/Friends.jsx","panels/Settings.jsx","components/ChooseCountry.jsx","components/ChooseCity.jsx","App.js","serviceWorker.js","index.js"],"names":["Groups","id","state","openCatalog","catalog","size","map","item","index","key","expandable","onClick","SubscribeCities","from","to","choose","e","setState","currentTarget","name","i","parseInt","checked","submit","a","filter","length","arr","concat","tag","props","groupId","section","fetch","JSON","stringify","user_id","String","userId","then","response","json","data","tags","body","group_id","group_name","category","checkbox","check","close","this","actionsLayout","actions","title","action","autoclose","mode","onClose","style","position","textAlign","overflowX","height","overflowY","level","weight","onChange","split","React","Component","Catalog","subscribe","screenName","bridge","sendPromise","app_id","appId","scope","request_id","auth","access_token","method","params","v","user","subscribeMessages","setPopout","domain","tagsIn","tagsOut","items","forEach","group","match","text","matchAll","matchOut","push","matchIn","indexOf","currentSection","currentCatalog","catch","subscribeMessagesAlert","go","left","chooseSection","disabled","multiline","Fragment","channelName","window","open","description","SectionCatalog","MyGroups","caption","after","SEASONS_TRANSCRIPTION","MONTHS_TRANSCRIPTION","0","1","2","3","4","5","6","7","8","9","10","11","12","CONTINENTS","PASSENGERS","url","url1Business","url2Passengers","urlForma","CURRENCY","AZN","BYN","CNY","EUR","KGS","KZT","RUB","THB","UAH","USD","UZS","CURRENCY1","LANGUAGES","de","en","es","fr","it","ru","th","tr","MyDB","requests","separator","padding","lineHeight","parse","output","countrySrc","citySrc","continentDst","countryDst","cityDst","forward","dates","year","season","month","passengers","costMin","costMax","currency","interval","updated","limit","language","currencyForUrl","optional","color","profitability","days","daysOfWeek","every","element","array","res","toLowerCase","showAddionalWeather","MySubs","activeTab","vertical","selected","marginTop","Friends","friends","getFriends","fields","city","getPrice","cities","myCode","code","friendCode","indexPrice","Object","keys","price","before","src","photo_50","first_name","last_name","icon","header","CONTINENT_DST","A","B","C","D","E","F","Settings","datesCnt","Date","getFullYear","randomCost","dayTempMin","dayTempMax","nighTempMin","nighTempMax","value","onChangeFrom","addFrom","yearSrc","seasonSrc","monthSrc","removeFrom","splice","sort_res","dual","obj","save_request","console","log","axios","post","top","data-type","changeDefaultName","changeDefault","changeDefaultText","continent","placeholder","defaultValue","Array","vaule","display","min","max","step","onFocus","type","bottom","ChooseCountry","inp","default","list","resArr","findIndex","x","country_name","onChoose","changeFunction","back","ChooseCity","country","App","activeStory","activePanel","popout","sortData","sectionIndex","shift","onStoryChange","dataset","story","location","href","get","defaultCountry","chooseCountryText","tabbar","data-story","Boolean","hostname","send","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6e52ee52.chunk.js","sourcesContent":["import React from 'react'\nimport { Panel, PanelHeader, List, SimpleCell, PanelSpinner } from '@vkontakte/vkui'\n\nconst Groups = ({ id, state, openCatalog }) => (\n  <Panel id={id}>\n    <PanelHeader>Сообщества</PanelHeader>\n      {state.catalog === null ? \n        <PanelSpinner size='large'/>\n      :\n    <List>\n      {\n        state.catalog && (\n          state.catalog.map((item, index) => \n            <SimpleCell\n              key={item.catalog}\n              id={index}\n              expandable\n              onClick={openCatalog}\n            >\n              {item.catalog}\n            </SimpleCell>\n          )\n        )\n          \n       \n      }\n    </List>\n    }\n  </Panel>\n)\n\nexport default Groups\n","import React from 'react'\nimport { Alert, Checkbox, Title, FormLayout } from '@vkontakte/vkui'\n\nexport class SubscribeCities extends React.Component {\n  state = {\n    from: null,\n    to: null,\n  }\n\n  componentDidMount() {\n    this.setState({ from: this.props.from, to: this.props.to })\n  }\n\n  choose = e => {\n    this.setState({\n      [e.currentTarget.name]: this.state[e.currentTarget.name].map((item, i) => {\n        if(i === parseInt(e.currentTarget.id, 10)){\n          item.checked = e.currentTarget.checked\n          return item\n        }else{\n          return item\n        }\n      })\n    })\n  }\n\n  submit = async () => {\n    if(this.state.from.filter((item) => item.checked).length > 0 && \n      this.state.to.filter((item) => item.checked).length > 0\n    ){\n      let arr = []\n      arr = arr.concat(this.state.from.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+this.props.groupId+\"/\"+this.props.name+\"/\"+this.props.catalog+\"/\"+(this.props.section ? this.props.section : \"Любой\")))\n      arr = arr.concat(this.state.to.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+this.props.groupId+\"/\"+this.props.name+\"/\"+this.props.catalog+\"/\"+(this.props.section ? this.props.section : \"Любой\")))\n      fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n        \"headers\": {\n          \"accept\": \"*/*\",\n          \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n          \"content-type\": \"application/json;charset=utf-8\",\n        },\n        \"body\": JSON.stringify({\n          user_id: String(this.props.userId)\n        }),\n        \"method\": \"POST\",\n      })\n      .then(response => response.json())\n      .then(data => {\n        if(data.tags.length > 0){\n          arr = arr.concat(\n            data.tags.map((item) => \n              item.body+\"/\"+item.group_id+\"/\"+item.group_name+\"/\"+item.category+\"/\"+item.section\n            )\n          )\n        }\n        fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-tags\", {\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n            \"content-type\": \"application/json;charset=utf-8\",\n          },\n          \"referrer\": \"https://appvk.flights.ru/\",\n          \"referrerPolicy\": \"no-referrer-when-downgrade\",\n          \"body\": JSON.stringify({\n            user_id: String(this.props.userId),\n            checkbox: arr\n          }),\n          \"method\": \"POST\",\n        })\n        .then(response => response.json())\n        .then(check => {\n          if(check.response === 'ok'){\n            this.props.close()\n          }\n        })\n      })\n    }\n  }\n\n  render() {\n    const {\n      from,\n      to\n    } = this.state\n    const {\n      close\n    } = this.props\n    return (\n      <Alert\n        actionsLayout=\"vertical\"\n        actions={[{\n            title: 'Применить',\n            action: () => this.submit(),\n          },\n          {\n          title: 'Отмена',\n          autoclose: true,\n          mode: 'cancel'\n        }]}\n        onClose={close}\n      >\n        <div style={{ position: \"relative\", textAlign: \"left\", overflowX: \"hidden\", height: '300px', overflowY: \"auto\" }}>\n          <Title level=\"3\" weight=\"bold\">Показывать авиабилеты из:</Title>\n          <FormLayout>\n            {\n              from && (\n                from.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"from\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n            <Title level=\"3\" weight=\"bold\">Показывать авиабилеты в:</Title>\n            {\n              to && (\n                to.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"to\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n          </FormLayout>\n        </div>\n      </Alert>\n    )\n  }\n}\n\nexport default SubscribeCities\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, SimpleCell, Link, Button, Alert, ScreenSpinner } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class Catalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n            });\n          })\n        })\n      }\n    })\n  }\n\n  // Запрос на сообщения\n  subscribeMessages = (screenName, name) => {\n    const { state } = this.props\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n          .then(() => {\n            bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n              method: \"wall.get\",\n              request_id: 2,\n              params: {\n                domain: screenName,\n                access_token: auth.access_token,\n                v: 5.107,\n              }\n            })\n            .then(async tags => {\n              let tagsIn = [];\n              let tagsOut = [];\n              let itemsWall = tags.response.items;\n              itemsWall.forEach((group) => {\n                let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                if (match.length) {\n                  if (match.length > 2) {\n                    let matchOut = match[2];\n                    tagsOut.push(matchOut)\n                }\n                let matchIn = match[0];\n                tagsIn.push(matchIn)\n                }\n              });\n              tagsIn = tagsIn.map((item) => \n                item[0]\n              )\n              tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n              tagsOut = tagsOut.map((item) => \n                item[0]\n              )\n              tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n              this.props.setPopout(\n                <SubscribeCities\n                  userId={state.user.id}\n                  section={state.currentSection}\n                  catalog={state.catalog[state.currentCatalog].catalog}\n                  name={name}\n                  groupId={data.response[0].id}\n                  from={tagsOut.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  })}\n                  to={tagsIn.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  })}\n                  close={() =>this.props.setPopout(null)}\n                />\n              )\n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        })\n        .catch(() => this.props.setPopout(null))\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  // Предупреждение с информацией\n  subscribeMessagesAlert = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const name = e.currentTarget.name\n    this.props.setPopout(\n      <Alert\n        actions={[{\n          title: 'Отмена',\n          autoclose: true,\n          mode: 'cancel'\n        }, {\n          title: 'Разрешить',\n          autoclose: true,\n          action: () => this.subscribeMessages(screenName, name),\n        }]}\n        onClose={() => this.props.setPopout(null)}\n      >\n        <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n      </Alert>\n    )\n  }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"home\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          state.catalog && (\n            state.catalog[state.currentCatalog].to.map((item, index) => \n              item.section ? \n                <SimpleCell\n                  key={index}\n                  expandable\n                  id={index}\n                  onClick={this.props.chooseSection}\n                >\n                  <Link>{item.section}</Link>\n                </SimpleCell>\n              :\n              <RichCell\n                key={index}\n                disabled\n                multiline\n                actions={\n                  <React.Fragment>\n                    <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={this.subscribe}\n                    >Подписаться</Button>\n                     <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={e => window.open(e.currentTarget.id, '_blank')}\n                    >Посмотреть</Button>\n                    <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                      <Icon28SettingsOutline />\n                    </Link>\n                  </React.Fragment>\n                }\n              >\n                {item.description}\n              </RichCell>\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default Catalog\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, Link, Button, Header, ScreenSpinner, Alert } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class SectionCatalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n                \"sec-fetch-dest\": \"empty\",\n                \"sec-fetch-mode\": \"cors\",\n                \"sec-fetch-site\": \"same-origin\"\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n              \"mode\": \"cors\",\n              \"credentials\": \"include\"\n            });\n          })\n        })\n      }\n    })\n  }\n\n    // Запрос на сообщения\n    subscribeMessages = (screenName, name) => {\n      const { state } = this.props\n      this.props.setPopout(<ScreenSpinner />)\n      bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n        app_id: state.appId,\n        scope: \"wall,groups\",\n        request_id: 1\n      })\n      .then(auth => {\n        if(auth.access_token && auth.scope === \"wall,groups\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.getById\",\n            request_id: 2,\n            params: {\n              group_id: screenName,\n              access_token: auth.access_token,\n              v: 5.107,\n            }\n          })\n          .then(data => {\n            bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n            .then(() => {\n              bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n                method: \"wall.get\",\n                request_id: 2,\n                params: {\n                  domain: screenName,\n                  access_token: auth.access_token,\n                  v: 5.107,\n                }\n              })\n              .then(async tags => {\n                let tagsIn = [];\n                let tagsOut = [];\n                let itemsWall = tags.response.items;\n                itemsWall.forEach((group) => {\n                  let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                  if (match.length) {\n                    if (match.length > 2) {\n                      let matchOut = match[2];\n                      tagsOut.push(matchOut)\n                  }\n                  let matchIn = match[0];\n                  tagsIn.push(matchIn)\n                  }\n                });\n                tagsIn = tagsIn.map((item) => \n                  item[0]\n                )\n                tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n                tagsOut = tagsOut.map((item) => \n                  item[0]\n                )\n                tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n                this.props.setPopout(\n                  <SubscribeCities\n                    userId={state.user.id}\n                    section={state.currentSection}\n                    catalog={state.catalog[state.currentCatalog].catalog}\n                    name={name}\n                    groupId={data.response[0].id}\n                    from={tagsOut.map((item) => {\n                      return {\n                        tag: item,\n                        checked: false\n                      }\n                    })}\n                    to={tagsIn.map((item) => {\n                      return {\n                        tag: item,\n                        checked: false\n                      }\n                    })}\n                    close={() =>this.props.setPopout(null)}\n                  />\n                )\n              })\n              .catch(() => this.props.setPopout(null))\n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        }\n      })\n      .catch(() => this.props.setPopout(null))\n    }\n  \n    // Предупреждение с информацией\n    subscribeMessagesAlert = e => {\n      const screenName = e.currentTarget.id.split(\"com/\")[1]\n      const name = e.currentTarget.name\n      this.props.setPopout(\n        <Alert\n          actions={[{\n            title: 'Отмена',\n            autoclose: true,\n            mode: 'cancel'\n          }, {\n            title: 'Разрешить',\n            autoclose: true,\n            action: () => this.subscribeMessages(screenName, name),\n          }]}\n          onClose={() => this.props.setPopout(null)}\n        >\n          <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n        </Alert>\n      )\n    }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"catalog\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            <Header>{state.catalog[state.currentCatalog].to[state.currentSection].section}</Header>\n          )\n        }\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            state.catalog && (\n              state.catalog[state.currentCatalog].to[state.currentSection].arr.map((item, index) => \n                <RichCell\n                  key={index}\n                  disabled\n                  multiline\n                  actions={\n                    <React.Fragment>\n                      <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={this.subscribe}\n                      >Подписаться</Button>\n                       <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={e => window.open(e.currentTarget.id, '_blank')}\n                      >Посмотреть</Button>\n                      <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                        <Icon28SettingsOutline />\n                      </Link>\n                    </React.Fragment>\n                  }\n                >\n                  {item.description}\n                </RichCell>\n              )\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default SectionCatalog\n","import React, { Component } from 'react'\nimport { Group, ScreenSpinner, List, RichCell, Link, Separator } from '@vkontakte/vkui'\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DeleteOutlineAndroid from '@vkontakte/icons/dist/28/delete_outline_android';\n\nexport class MyGroups extends Component {\n  state = {\n    data: null,\n  }\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ data: data.tags })\n      this.props.setPopout(null)\n    })\n  }\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <Group>\n        <List>\n          {\n            data && (\n              data.map((item, i) =>\n                <div key={i}>\n                  <RichCell\n                    text={item.group_name}\n                    caption={\n                      \"Куда: \"+item.body.split(\"#\")[1].split(\"@\")[0]\n                    }\n                    after={\n                      <div>\n                        <Link>\n                          <Icon28EditOutline />\n                        </Link><br /><br />\n                        <Link>\n                          <Icon28DeleteOutlineAndroid />\n                        </Link>\n                      </div>\n                    }\n                  >\n                    {item.category}\n                  </RichCell>\n                  <Separator />\n                </div>\n              )\n            )\n          }\n        </List>\n      </Group>\n    )\n  }\n}\n\nexport default MyGroups\n","import React, { Component } from 'react'\nimport { Group, ScreenSpinner, CardGrid, Card, Div, Button } from '@vkontakte/vkui'\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENTS = {\n  'random': 'любая',\n  'E': 'Европа',\n  'F': 'Африка',\n  'O': 'Океания',\n  'A': 'Азия',\n  'S': 'Южная Америка',\n  'N': 'Северная Америка',\n};\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рубль \",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst CURRENCY1 = {\n  AZN: \"манат\",\n  BYN: \"беларусских рублей\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рублей\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nexport class MyDB extends Component {\n  state = {\n\n  }\n\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-requests\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ data: data.requests })\n      this.props.setPopout(null)\n    })\n  }\n  \n\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <div>\n        {\n          data && (\n            data.map((item, index) => \n            <Group separator=\"hide\" key={index}>\n              <CardGrid>\n                <Card size=\"l\" mode=\"shadow\">\n                  <Div style={{ padding: '20px', lineHeight: 1.5 }}>\n                    Из страны <b>{\n                      JSON.parse(item.output).countrySrc ? JSON.parse(item.output).countrySrc : \"любая\"\n                    }</b> и города <b>{JSON.parse(item.output).citySrc ? JSON.parse(item.output).citySrc : \"любой\"}</b><br />\n                    В часть света <b>{CONTINENTS[JSON.parse(item.output).continentDst]}</b> и страну <b>{JSON.parse(item.output).countryDst ? JSON.parse(item.output).countryDst : \"любая\"}</b><br />\n                    В город <b>{JSON.parse(item.output).cityDst ? JSON.parse(item.output).cityDst : \"любой\"}</b><br />\n                    Направление полетов - <b>{JSON.parse(item.output).forward ? \"туда\" : \"туда-обратно\"}</b><br />\n                    {\n                      JSON.parse(item.output).dates.map((item, i) => \n                        <div key={i}>\n                          Год вылета ({i+1}) <b>{item.year}</b><br />\n                          Время года ({i+1}) <b>{SEASONS_TRANSCRIPTION[item.season]}</b><br />\n                          Месяц ({i+1}) <b>{MONTHS_TRANSCRIPTION[item.month]}</b><br />\n                        </div>    \n                      )\n                    }<br />\n                    Пассажиры <b>{PASSENGERS[JSON.parse(item.output).passengers]}</b><br />\n                    Цена от <b>{JSON.parse(item.output).costMin}</b> до <b>{JSON.parse(item.output).costMax}</b> {CURRENCY1[JSON.parse(item.output).currency]}<br />\n\n                    Период показа <b>{JSON.parse(item.output).interval}</b> минут<br />\n                    Глубина поиска <b>{JSON.parse(item.output).updated}</b> минут<br />\n                    Максимальное количество билетов за 24 часа <b>{JSON.parse(item.output).limit === \"0\" ? \"все\" : JSON.parse(item.output).limit}</b><br />\n                    Язык (туда-обратно) <b>{LANGUAGES[JSON.parse(item.output).language]}</b><br />\n                    Валюта (цена) <b>{CURRENCY[JSON.parse(item.output).currency]}</b><br />\n                    Валюта (метапоисковика) <b>{CURRENCY[JSON.parse(item.output).currencyForUrl]}</b><br />\n                    {\n                      JSON.parse(item.output).optional && (\n                        <div><br />\n                          <div style={{ color: 'var(--tabbar_inactive_icon)' }}>Дополнительные параметры</div>\n                          {\n                            JSON.parse(item.output).profitability && (\"Выгодность покупки больше \")\n                          }\n                          {\n                            JSON.parse(item.output).profitability && \n                            <b>{JSON.parse(item.output).profitability+\"%\"}</b>\n                          }<br />\n                          Дни недели вылета <b>{\n                            ((days) => {\n                              const daysOfWeek = [\n                                \"вс\",\n                                \"пн\",\n                                \"вт\",\n                                \"ср\",\n                                \"чт\",\n                                \"пт\",\n                                \"сб\"\n                              ]\n                              let check = 0;\n                              days.every((element, index, array) => {\n                                  check++;\n                                  return element === true;\n                              });\n                              if (check === 7) {\n                                  return 'все';\n                              }\n                              let res = '';\n                              for (let index = 1; index < days.length; index++) {\n                                  if (days[index]) {\n                                      res += daysOfWeek[index].toLowerCase() + ', ';\n                                  }\n                              }\n                              res += daysOfWeek[0].toLowerCase();\n                              return res;\n                            })(JSON.parse(item.output).days)\n                          }</b><br />\n                          {\n                            JSON.parse(item.output).showAddionalWeather && (\n                              <div>\n                                Прогноз погоды в день прилета<br />\n                                Днем от <b>{JSON.parse(item.output)['dayTemp.min']}</b> С до <b>{JSON.parse(item.output)['dayTemp.max']}</b> С<br />\n                                Ночью от <b>{JSON.parse(item.output)['nightTemp.min']}</b> С до <b>{JSON.parse(item.output)['nightTemp.max']}</b> С<br />\n                              </div>\n                            )\n                          }\n                        </div>\n                      )\n                    }\n                  </Div>\n                  <Div>\n                    <Button\n                      size=\"xl\"\n                    >\n                      Редактировать\n                    </Button><br />\n                    <Button\n                      size=\"xl\"\n                      mode=\"destructive\"\n                    >\n                      Удалить\n                    </Button>\n                  </Div>\n                </Card>\n              </CardGrid>\n            </Group>\n            )\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default MyDB\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, FixedLayout, Tabs, TabsItem } from '@vkontakte/vkui'\nimport MyGroups from '../components/MyGroups'\nimport MyDB from '../components/MyDB'\n\nexport class MySubs extends Component {\n  state = {\n    activeTab: 'groups',\n  }\n\n  render() {\n    const {\n      activeTab\n    } = this.state\n    const {\n      id,\n      state\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader>Мои подписки</PanelHeader>\n        <FixedLayout vertical=\"top\">\n          <Tabs>\n            <TabsItem\n              selected={activeTab === 'groups'}\n              onClick={() => this.setState({ activeTab: 'groups' })}\n            >Сообщества</TabsItem>\n            <TabsItem\n              selected={activeTab === 'database'}\n              onClick={() => this.setState({ activeTab: 'database' })}\n            >База данных</TabsItem>\n          </Tabs>\n        </FixedLayout>\n        <div style={{ marginTop: '60px' }} />\n        {\n          activeTab === 'groups' ? \n            <MyGroups\n              setPopout={this.props.setPopout}\n              state={state}\n            />\n          :\n            <MyDB\n              setPopout={this.props.setPopout}\n              state={state}\n            />\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default MySubs\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, Placeholder, Button, RichCell, Avatar, ScreenSpinner } from '@vkontakte/vkui'\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\nimport bridge from '@vkontakte/vk-bridge'\n\nexport class Friends extends Component {\n  state = {\n    friends: null,\n  }\n\n  componentDidMount() {\n    this.getFriends()\n  }\n  \n  getFriends = () => {\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: this.props.state.appId,\n      scope: \"friends\"\n    })\n    .then(data => {\n      if(data.access_token){\n        if(data.scope === \"friends\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"friends.get\",\n            params: {\n              access_token: data.access_token,\n              fields: \"city,photo_50\",\n              v: 5.107\n            },\n            request_id: '3'\n          })\n          .then(data => {\n            if(data.response.items){\n              this.setState({\n                friends: data.response.items.filter((item) => item.city).filter((item) => \n                  item.city.id !== this.props.state.user.city.id\n                )\n              })\n              this.props.setPopout(null)\n            }else{\n              this.props.setPopout(null)\n            }\n          })\n          .catch(() => this.props.setPopout(null))\n        }else{\n          this.props.setPopout(null)\n        }\n      }else{\n        this.props.setPopout(null)\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  getPrice = (e) => {\n    this.props.setPopout(<ScreenSpinner />)\n    const city = e.currentTarget.id.split(\"_\")[1]\n    const id = e.currentTarget.id.split(\"_\")[0]\n    fetch(\"https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/data/ru/cities.json\")\n    .then(response => response.json())\n    .then(cities => {\n      const myCode = cities.filter((item) => item.name === this.props.state.user.city.title)[0].code\n      const friendCode = cities.filter((item) => item.name === city)[0].code\n      fetch(`https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/v1/prices/calendar?&origin=${myCode}&destination=${friendCode}&calendar_type=departure_date&token=d378bb3f3b879e6fc87899314ba5ce5d`)\n      .then(response => response.json())\n      .then(data => {\n        let indexPrice = Object.keys(data.data)[0]\n        if(Object.keys(data.data).length > 3){\n          indexPrice = Object.keys(data.data)[3]\n        }\n        this.setState({\n          friends: this.state.friends.map((item) => {\n            if(item.id === parseInt(id, 10)){\n              item.price = (data.data[indexPrice].price + \" \" + data.currency)\n            }\n            return item\n          })\n        })\n        this.props.setPopout(null)\n      })\n    })\n  }\n\n  render() {\n    const {\n      id\n    } = this.props\n    const {\n      friends\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader>Друзья</PanelHeader>\n        {\n          friends ? \n          friends.map((item) => \n            <RichCell\n              key={item.id}\n              actions={\n                <React.Fragment>\n                  <Button\n                    id={item.id+\"_\"+item.city.title}\n                    onClick={this.getPrice}\n                  >\n                    {\n                      item.price ? item.price : \"Показать цену\"\n                    }\n                  </Button>\n                </React.Fragment>\n              }\n              text={item.city.title}\n              before={<Avatar src={item.photo_50}/>}\n            >\n              {item.first_name+\" \"+item.last_name}\n            </RichCell>\n          )\n          :\n          <Placeholder\n            icon={<Icon56UsersOutline />}\n            header=\"Друзья\"\n            action={<Button onClick={this.getFriends} size=\"l\">Показать список</Button>}\n          >\n            Чтобы получить список к друзьям, вам нужно предоставить доступ приложению.\n          </Placeholder>\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default Friends\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { Panel, PanelHeader, FormLayout, Header, Input, Select, Checkbox, Button, Div, RangeSlider, SelectMimicry } from '@vkontakte/vkui'\nimport Icon28AddCircleOutline from '@vkontakte/icons/dist/28/add_circle_outline';\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\n\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENT_DST = {\n  A:\"Любая\",\n  B:'Европа',\n  C:\"Африка\",\n  D:'Океания',\n  E:\"Азия\",\n  F:\"Южная Америка\",\n  D:\"Северная Америка\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге\",\n  RUB: \"рубль\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nexport class Settings extends Component {\n  state = {\n    updated: \"60\",\n    limit: \"0\",\n    datesCnt: [{\n      year: (new Date()).getFullYear(),\n      season: 'all',\n      month: '0'\n    }],\n    language: 'ru',\n    profitability:30,\n    currency: 'RUB',\n    currencyForUrl: 'RUB',\n    passengers:'url',\n    randomCost:false,\n    costMin: 100,\n    costMax: 500000,\n    dayTempMin:-50,\n    dayTempMax:50,\n    nighTempMin:-50,\n    nighTempMax:50\n  }\n\n\n  onChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  onChangeFrom = e => {\n    const { datesCnt } = this.state\n    datesCnt[parseInt(e.currentTarget.id, 10)][e.currentTarget.name] = e.currentTarget.value\n    this.setState({\n      datesCnt\n    })\n  }\n\n  addFrom = () => {\n    const { datesCnt } = this.state\n    datesCnt.push({\n      yearSrc: (new Date()).getFullYear(),\n      seasonSrc: SEASONS_TRANSCRIPTION['all'],\n      monthSrc: MONTHS_TRANSCRIPTION['0']\n    })\n    this.setState({\n      datesCnt\n    })\n  }\n\n  removeFrom = () => {\n    const { datesCnt } = this.state\n    this.setState({\n      datesCnt: datesCnt.splice(0, datesCnt.length-1)\n    })\n  }\n\n  sort_res = () => { //готовим данные к отправке\n    const { user, citySrc, cityDst, countryDst, countrySrc } = this.props.state;\n    const { costMax, costMin, currency,currencyForUrl,language, randomCost, dual,forward, datesCnt, profitability, dayTempMin, dayTempMax, nighTempMax, nighTempMin,passengers } = this.state;\n    let output = {\n      citySrc, \n      cityDst,\n      countryDst,\n      countrySrc,\n      costMax, \n      costMin,\n      currency,\n      currencyForUrl, \n      language,\n      randomCost,\n      forward:(forward === 'on'),\n      dual:(dual === 'on'),\n      passengers,\n      dates:datesCnt,\n      showAddionalWeather:true,\n      profitability:String(profitability),\n      ['nightTemp.max']:nighTempMax,\n      ['nightTemp.min']:nighTempMin,\n      ['dayTemp.max']:dayTempMax,\n      ['dayTemp.min']:dayTempMin,\n      days:[true, true, true, true, true, true, true]\n    }\n    let obj = {\n      id:null,\n      interval:60,\n      limit:0,\n      updated:60,\n      user_id:user.id,\n      output:output\n    }\n    this.save_request(obj);\n    console.log(obj);\n  }\n\n  save_request = (obj) => {  //сохранение подписки\n    axios.post(\"https://appvk.flights.ru/save-user-api-request\", JSON.stringify(obj))\n    .then(data => {\n      console.log(data)\n    })\n  \n  }\n\n\n  render() {\n    const {\n      id\n    } = this.props\n    const {\n      datesCnt,\n      currency,\n      currencyForUrl,\n      language,\n      countrySrc,\n      citySrc,\n      countryDst,\n      cityDst,\n      continentDst,\n      randomCost,\n      costMin,\n      costMax,\n      dayTempMin,\n      dayTempMax,\n      nighTempMax,\n      nighTempMin\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader>Настройки</PanelHeader>\n        <FormLayout>\n          <Header>Откуда</Header>\n          <SelectMimicry\n            top=\"Страна вылета\"\n            name=\"countrySrc\"\n            data-type=\"country\"\n            onClick={() => {\n              this.props.changeDefaultName(\"countrySrc\")\n              this.props.changeDefault(\"Страна вылета\")\n              this.props.changeDefaultText(countrySrc)\n              this.props.go(\"chooseCountry\");\n            }}\n          >{this.props.state.countrySrc}</SelectMimicry>\n          <SelectMimicry\n            top=\"Город вылета\"\n            name=\"citySrc\"\n            disabled={this.props.state.countrySrc == null}\n            onClick={() => {\n              this.props.changeDefaultName(\"citySrc\")\n              this.props.changeDefault(\"Город вылета\")\n              this.props.changeDefaultText(citySrc)\n              this.props.go(\"chooseCity\");\n            }}\n          >{this.props.state.citySrc}</SelectMimicry>\n          <Header>Куда</Header>\n\n          <Select\n            top=\"Часть света\"\n            name=\"continentDst\"\n            onChange={this.onChange}\n            value={continentDst}\n          >\n            {\n              Object.keys(CONTINENT_DST).map((continent) => \n                <option value={continent} key={continent}>\n                  {CONTINENT_DST[continent]}\n                </option>\n              )\n            }\n          </Select>\n\n          <SelectMimicry\n            top=\"Страна\"\n            name=\"countryDst\"\n            onClick={() => {\n              this.props.changeDefaultName(\"countryDst\")\n              this.props.changeDefault(\"Страна прибытия\")\n              this.props.changeDefaultText(countryDst)\n              this.props.go(\"chooseCountry\");   \n             }          \n            }\n          >{this.props.state.countryDst}</SelectMimicry>\n          <SelectMimicry\n            top=\"Город\"\n            name=\"cityDst\"\n            disabled={this.props.state.countryDst == null}\n            onClick={() => {\n              this.props.changeDefaultName(\"cityDst\")\n              this.props.changeDefault(\"Город прибытия\")\n              this.props.changeDefaultText(cityDst)\n              this.props.go(\"chooseCity\");   \n             }          \n            }\n          >{this.props.state.cityDst}</SelectMimicry>\n          <Header>Интервал</Header>\n          <Select\n            top=\"Получать дешевые авиабилеты один раз в:\"\n            name=\"interval\"\n            placeholder=\"Интервал\"\n          >\n            <option value=\"60\">Час</option>\n            <option value=\"240\">Четыре часа</option>\n            <option value=\"480\">Восемь часов</option>\n            <option value=\"1440\">24 часа</option>\n          </Select>\n          <Select\n            top=\"Получать информацию за крайние N, часов\"\n            name=\"updated\"\n            defaultValue=\"60\"\n          >\n            <option value=\"60\">1 час</option>\n          </Select>\n          <Header>Количество</Header>\n          <Select\n            top=\"Сколько дешевых авиабилетов показывать в сутки?\"\n            name=\"limit\"\n            defaultValue=\"0\"\n          >\n            <option value=\"0\">Все</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n            <option value=\"300\">300</option>\n          </Select>\n          <Header>Полеты</Header>\n          <Checkbox name=\"forward\" onChange={this.onChange}>Туда</Checkbox>\n          <Checkbox name=\"dual\" onChange={this.onChange}>Туда-обратно</Checkbox>\n          <Header>Когда</Header>\n          {\n            datesCnt && (\n              datesCnt.map((item, i) => \n                <FormLayout key={i}>\n                  <Select\n                    top={`Год вылета (${i+1})`}\n                    name=\"year\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.yearSrc}\n                  >\n                    {\n                      Array.from(Array(31).keys()).map((year) => \n                        <option key={year} vaule={(new Date()).getFullYear()+year}>\n                          {(new Date()).getFullYear()+year}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  <Select\n                    top={`Время года (${i+1})`}\n                    name=\"season\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.seasonSrc}\n                  >\n                    {\n                      Object.keys(SEASONS_TRANSCRIPTION).map((season) => \n                        <option value={season} key={season}>\n                          {SEASONS_TRANSCRIPTION[season]}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  <Select\n                    top={`Месяц года (${i+1})`}\n                    name=\"month\"\n                    id={i}\n                    onChange={this.onChangeFrom}\n                    value={item.monthSrc}\n                  >\n                    {\n                      Object.keys(MONTHS_TRANSCRIPTION).map((month) => \n                        <option value={month} key={month}>\n                          {MONTHS_TRANSCRIPTION[month]}\n                        </option>\n                      )\n                    }\n                  </Select>\n                </FormLayout>\n              )\n            )\n          }\n          {\n            datesCnt.length > 1\n          }\n          <Div style={{ display: 'flex' }}>\n            {\n              datesCnt.length < 3 && (\n                <Button\n                  size=\"l\"\n                  onClick={this.addFrom}\n                >\n                  <Icon28AddCircleOutline />\n                </Button>\n              )\n            }\n            {\n              datesCnt.length > 1 && (\n                <Button\n                  size=\"l\"\n                  mode=\"destructive\"\n                  onClick={this.removeFrom}\n                >\n                  <Icon28CancelCircleOutline color=\"rgb(255, 26, 0)\" />\n                </Button>\n              )\n            }\n          </Div>\n          <Select\n            top=\"Язык\"\n            name=\"language\"\n            onChange={this.onChange}\n            value={language}\n          >\n            {\n              Object.keys(LANGUAGES).map((language) => \n                <option value={language} key={language}>\n                  {LANGUAGES[language]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта\"\n            name=\"currency\"\n            onChange={this.onChange}\n            value={currency}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта метапоисковика\"\n            name=\"currencyForUrl\"\n            onChange={this.onChange}\n            value={currencyForUrl}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Пассажиры\"\n            name=\"passengers\"\n            onChange={this.onChange}\n          >\n            {\n              Object.keys(PASSENGERS).map((passengers) => \n                <option value={passengers} key={passengers}>\n                  {PASSENGERS[passengers]}\n                </option>\n              )\n            }\n          </Select>\n          <Header>Стоимость, {currency}</Header>\n          <Checkbox\n            checked={randomCost}\n            onChange={(e) => {\n              this.setState({\n                randomCost: e.currentTarget.checked\n              })\n            }}\n          >\n            Любая\n          </Checkbox>\n          <RangeSlider\n            top={costMin + \" - \" + costMax}\n            min={100}\n            max={500000}\n            step={100}\n            defaultValue={[100, 500000]}\n            value={[costMin, costMax]}\n            onChange={(value) => {\n              this.setState({\n                costMin: value[0],\n                costMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <Div style={{ display: 'flex' }}>\n            <Input\n              onFocus={() => {\n                console.log('focus')\n              }}\n              value={costMin}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value < costMax && value > 100){\n                    this.setState({ costMin: value })\n                  }\n                }\n              }}\n            />\n            <Input\n              value={costMax}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value > costMin && value < 500000){\n                    this.setState({ costMax: value })\n                  }\n                }\n              }}\n            />\n          </Div>\n          <Header>Дополнительные параметры</Header>\n          <Select name='profitability' onChange={this.onChange} top=\"Показывать авиабилеты только с выгодой больше, %\">\n            <option>30</option>\n            <option>40</option>\n            <option>50</option>\n            <option>60</option>\n            <option>70</option>\n            <option>80</option>\n            <option>90</option>\n          </Select>\n          <Header>Вылеты в определенные дни недели</Header>\n\n          <Header>Погода</Header>\n          <RangeSlider\n            top=\"Температура воздуха днем в день прилета\"\n            bottom={\"От \" + dayTempMin + \" до \" + dayTempMax}\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[dayTempMin, dayTempMax]}\n            onChange={(value) => {\n              this.setState({\n                dayTempMin: value[0],\n                dayTempMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <RangeSlider\n            top=\"Температура воздуха ночью в день прилета\"\n            bottom={\"От\" + nighTempMin + \" до \" + nighTempMax}\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[nighTempMin, nighTempMax]}\n            onChange={(value) => {\n              this.setState({\n                nighTempMin: value[0],\n                nighTempMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          <Button mode='primary' size='xl' onClick={this.sort_res}>Применить</Button>\n        </FormLayout>\n      </Panel>\n    )\n  }\n}\n\nexport default Settings \n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nexport class ChooseCountry extends Component {\n  state = {\n    inp: this.props.default,\n    list:null\n  }\n\n  onChange = (e) => {\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${\n      e.currentTarget.value\n    }&locale=ru`)\n    .then(response => response.json())\n    .then(list => {\n      if(list.length > 0){\n        var resArr = [];\n        list.forEach(function(item){\n          var i = resArr.findIndex(x => x.country_name === item.country_name);\n          if(i <= -1){\n            resArr.push(item);\n          }\n        });\n        this.setState({\n          list: resArr\n        })\n      }\n    })\n  }\n\n  onChoose = (country_name) => {\n    this.props.changeFunction(country_name);\n    this.props.back()\n  }\n\n  render() {\n    const {\n      list\n    } = this.state\n    const {\n      id,\n      back,\n      text\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={back} />\n          }\n        >{text}</PanelHeader>\n        <Div>\n          <Input\n            onChange={this.onChange}\n          />\n        </Div>\n        {list === null ? \n        <Placeholder>Начните вводить название страны</Placeholder>\n        :\n        <List>\n          {\n            list && list.map((item, i) => \n              <SimpleCell\n                onClick={() => this.onChoose(item.country_name)}\n                id={item.country_name}\n                key={i}\n                after={\n                  item.country_name === text && (\n                    <Icon24Done />\n                  )\n                }\n              >\n                {item.country_name}\n              </SimpleCell>\n            )\n          }\n        </List>\n       }\n      </Panel>\n    )\n  }\n}\n\nexport default ChooseCountry\n","import React, { Component } from 'react'\r\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport class ChooseCity extends Component {\r\n  state = {\r\n    inp: this.props.default,\r\n    list:null\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let country = \"\";\r\n    console.log(this.props.state)\r\n    if(this.props.changeDefaultName == 'citySrc') \r\n        country = this.props.state.countrySrc;\r\n    else \r\n        country = this.props.state.countryDst;\r\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${country} ${\r\n      e.currentTarget.value\r\n    }&locale=ru&types[]=city`)\r\n    .then(response => response.json())\r\n    .then(list => {\r\n      if(list.length > 0){\r\n        var resArr = [];\r\n        list.forEach(function(item){\r\n          var i = resArr.findIndex(x => x.name === item.name);\r\n          if(i <= -1 && item.country_name === country){\r\n            resArr.push(item);\r\n          }\r\n        });\r\n        this.setState({\r\n          list: resArr\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onChoose = (name) => {\r\n    this.props.changeFunction(name);\r\n    this.props.back()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list\r\n    } = this.state\r\n    const {\r\n      id,\r\n      back,\r\n      text\r\n    } = this.props\r\n    return (\r\n      <Panel id={id}>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack onClick={back} />\r\n          }\r\n        >{text}</PanelHeader>\r\n        <Div>\r\n          <Input\r\n            onChange={this.onChange}\r\n          />\r\n        </Div>\r\n        {list === null ? \r\n        <Placeholder>Начните вводить название города</Placeholder>:\r\n        <List>\r\n          {\r\n            list && list.map((item, i) => \r\n              <SimpleCell\r\n                onClick={() => this.onChoose(item.name)}\r\n                id={item.name}\r\n                key={i}\r\n                after={\r\n                  item.name === text && (\r\n                    <Icon24Done />\r\n                  )\r\n                }\r\n              >\r\n                {item.name}\r\n              </SimpleCell>\r\n            )\r\n          }\r\n        </List>\r\n      }\r\n      </Panel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseCity\r\n","import React from 'react'\nimport { Epic, Tabbar, TabbarItem, View, Panel } from '@vkontakte/vkui'\nimport bridge from '@vkontakte/vk-bridge'\nimport axios from 'axios';\n\n// icons\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\nimport Icon28Settings from '@vkontakte/icons/dist/28/settings';\nimport Icon28HomeOutline from '@vkontakte/icons/dist/28/home_outline';\nimport Icon28Users from '@vkontakte/icons/dist/28/users';\nimport Icon28Send from '@vkontakte/icons/dist/28/send';\n\n\n// panels\nimport Groups from './panels/Groups'\nimport Catalog from './panels/Catalog'\nimport SectionCatalog from './panels/SectionCatalog'\nimport MySubs from './panels/MySubs'\nimport Friends from './panels/Friends'\nimport Settings from './panels/Settings'\nimport ChooseCountry from './components/ChooseCountry';\nimport ChooseCity from './components/ChooseCity';\n\nclass App extends React.Component {\n  state = {\n    activeStory: 'settings',\n    activePanel: 'home',\n    popout: null,\n    currentCatalog: 0,\n    catalog:null,\n    appId: null,\n  }\n\n  componentDidMount() {\n    // Получаем данные о пользователе и каналы\n    // this.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetUserInfo\")\n    .then(user => {\n      this.setState({\n        appId: parseInt(window.location.href.split(\"vk_app_id=\")[1].split(\"&\")[0], 10),\n        user\n      })\n      axios.get(\"https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Channels\")\n      .then(async data => {\n        await this.sortData(data.data)\n      })\n    })\n  }\n\n  // Приведение каналов в адекватный вид:\n  // [\n  //   {\n  //     catalog: \"catalog name\",\n  //     to: [\n  //       \"country\",\n  //       {\n  //         \"section\": \"в европу\",\n  //         arr: [\n  //           \"country\"\n  //         ]\n  //       }\n  //     ]\n  //   }\n  // ]\n  sortData = async data => {\n    const catalog = []\n    data.forEach(async item => {\n      let index = catalog.findIndex(a => a.catalog === item.catalog)\n      if(index === -1){\n        catalog.push({\n          catalog: item.catalog,\n          to: []\n        })\n        index = catalog.length-1\n      }\n      if(item.section){\n        const sectionIndex = catalog[index].to.findIndex(a => a.section === item.section)\n        if(sectionIndex === -1){\n          catalog[index].to.push({\n            section: item.section,\n            arr: [item]\n          })\n        }else{\n          catalog[index].to[sectionIndex].arr.push(item)\n        }\n      }else{\n        catalog[index].to.push(item)\n      }\n    })\n    catalog.shift()\n    catalog.splice(catalog.findIndex(a => a.catalog === \"\"),1)\n    this.setState({ catalog })\n    this.setPopout(null)\n  }\n  \n  // Смена табов\n  onStoryChange = (e) => {\n    this.setState({ activeStory: e.currentTarget.dataset.story, activePanel: 'home' })\n  }\n\n  // Рисование попаута\n  setPopout = popout => {\n    this.setState({ popout })\n  }\n\n  // Открытие той или иной части света\n  openCatalog = e => {\n    this.setState({ \n      activePanel: 'catalog',\n      currentCatalog: parseInt(e.currentTarget.id, 10),\n    })\n  }\n\n  choose = ( data) => {\n    console.log(this.state.changeDefaultName, data);\n    this.setState({[this.state.changeDefaultName]: data});\n  }\n\n  // Изменение панели\n  go = activePanel => {\n    this.setState({ activePanel, currentSection: null })\n  }\n\n  // Открыть секцию\n  chooseSection = e => {\n    this.setState({ activePanel: \"sectionCatalog\", currentSection: parseInt(e.currentTarget.id, 10) })\n  }\n\n  render () {\n    const {\n      activePanel,\n      popout,\n      defaultCountry,\n      chooseCountryText,\n      changeFunction,\n      changeDefaultName\n    } = this.state\n    return (\n      <Epic activeStory={this.state.activeStory} tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'groups'}\n            data-story=\"groups\"\n            text=\"Сообщества\"\n          ><Icon28Users3Outline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'settings'}\n            data-story=\"settings\"\n            text=\"Настройки\"\n          ><Icon28Settings /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'subscribes'}\n            data-story=\"subscribes\"\n            text=\"Мои подписки\"\n          ><Icon28HomeOutline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'friends'}\n            data-story=\"friends\"\n            text=\"Друзья\"\n          ><Icon28Users /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'aviasales'}\n            data-story=\"aviasales\"\n            text=\"Aviasales\"\n          ><Icon28Send /></TabbarItem>\n        </Tabbar>\n      }>\n        <View id=\"groups\" activePanel={activePanel} popout={popout}>\n          <Groups\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n            openCatalog={this.openCatalog}\n          />\n          <Catalog\n            id=\"catalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            chooseSection={this.chooseSection}\n          />\n          <SectionCatalog\n            id=\"sectionCatalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n          />\n        </View>\n        <View id=\"settings\" activePanel={activePanel} popout={popout}>\n          <Settings\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            changeDefault={(chooseCountryText) => this.setState({ chooseCountryText })}\n            changeDefaultText={(defaultCountry) => this.setState({ defaultCountry })}\n            changeDefaultName={(changeDefaultName) => this.setState({ changeDefaultName })}\n          />\n          <ChooseCountry\n            id=\"chooseCountry\"\n            default={defaultCountry}\n            text={chooseCountryText}\n            changeFunction={this.choose}\n            changeDefaultName={changeDefaultName}\n            back={() => this.setState({ activePanel: 'home' })}\n          />\n\n          <ChooseCity\n            id='chooseCity'\n            default={defaultCountry}\n            text={chooseCountryText}\n            changeFunction={this.choose}\n            changeDefaultName={changeDefaultName}\n            state={this.state}\n            back={() => this.setState({ activePanel: 'home' })}\n          />\n        </View>\n        <View id=\"subscribes\" activePanel={activePanel} popout={popout}>\n          <MySubs\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n          />\n        </View>\n        <View id=\"friends\" activePanel={activePanel} popout={popout}>\n          <Friends\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n          />\n        </View>\n        <View id=\"aviasales\" activePanel={activePanel} popout={popout}>\n          <Panel id=\"home\"></Panel>\n        </View>\n      </Epic>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport bridge from '@vkontakte/vk-bridge'\nimport '@vkontakte/vkui/dist/vkui.css';\n\nbridge.send(\"VKWebAppInit\", {})\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}