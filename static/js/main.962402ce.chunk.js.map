{"version":3,"sources":["panels/Groups.jsx","components/SubscribeCities.jsx","panels/Catalog.jsx","panels/SectionCatalog.jsx","components/SnackbarError.jsx","components/MyGroups.jsx","components/MyDB.jsx","panels/MySubs.jsx","panels/Friends.jsx","panels/Settings.jsx","panels/EditSettings.jsx","components/ChooseCity.jsx","components/ChooseCountry.jsx","components/ChooseCountryByContinent.jsx","App.js","serviceWorker.js","index.js"],"names":["Groups","id","state","openCatalog","go","left","onClick","catalog","size","map","item","index","key","expandable","SubscribeCities","from","to","all","this","setState","props","obj","updateModalHeight","close","React","Component","Catalog","withModalRootContext","subscribe","e","screenName","currentTarget","split","bridge","sendPromise","app_id","appId","scope","request_id","then","auth","access_token","method","params","group_id","v","data","response","fetch","JSON","stringify","user_id","user","checkbox","subscribeMessages","name","setPopout","domain","tags","a","tagsIn","tagsOut","items","forEach","group","match","text","matchAll","length","matchOut","push","matchIn","filter","i","indexOf","groupId","tag","checked","onChangeGroups","openModal","catch","subscribeMessagesAlert","actions","title","autoclose","mode","action","onClose","currentCatalog","section","chooseSection","disabled","multiline","Fragment","channelName","window","open","description","SectionCatalog","currentSection","arr","SnakbarError","console","log","before","fill","MyGroups","snackbar","openMenu","edit_","body","openConfirm","delete","tag_id","json","check","splice","string","itemsWall","tags_obj","element","tags_name","err","String","SnackbarError","group_name","caption","after","category","SEASONS_TRANSCRIPTION","MONTHS_TRANSCRIPTION","0","1","2","3","4","5","6","7","8","9","10","11","12","CONTINENTS","PASSENGERS","url","url1Business","url2Passengers","urlForma","CURRENCY","AZN","BYN","CNY","EUR","KGS","KZT","RUB","THB","UAH","USD","UZS","CURRENCY1","LANGUAGES","de","en","es","fr","it","ru","th","tr","blue","color","MyDB","openAlert","edit","parse","output","setTimeout","requests","separator","style","padding","lineHeight","countrySrc","citySrc","continentDst","countryDst","cityDst","dual","forward","dates","year","season","month","passengers","costMin","costMax","currency","interval","updated","limit","language","currencyForUrl","optional","profitability","days","daysOfWeek","every","array","res","toLowerCase","showAddionalWeather","MySubs","activeTab","vertical","selected","marginTop","paddingBottom","onChange","Friends","friends","getFriends","fields","city","getPrice","friend","cities","myCode","code","friendCode","indexPrice","Object","keys","price","date","src","photo_200","status","country","bdate","online","last_seen","fontSize","Date","time","toLocaleString","day","hour","minute","first_name","last_name","icon","header","CONTINENT_DST","E","F","D","A","S","N","min","max","paddingTop","Settings","listCountry","datesCnt","getFullYear","activeCnt","randomCost","randomTempDay","randomTempNight","dayTempMin","dayTempMax","value","onChangeCheck","onChangeFrom","parseInt","addFrom","yearSrc","seasonSrc","monthSrc","removeFrom","onChangeDays","allDays","bool","Number","t","sort_res","citySrcCode","cityDstCode","countryDstCode","countrySrcCode","nighTempMax","nighTempMin","src_name","dst_name","content","searchCountry","type","list","unshift","nameTranslations","nameCountry","searchCity","nameCity","s","n","all_flight","top","align","placeholder","options","el","search","continent","continentCode","Array","m","getMonth","defaultValue","step","display","onFocus","border","href","target","EditSettings","cityDstList","citySrcList","form","nameList","p","ChooseCity","inp","default","changeDefaultName","resArr","country_name","onChoose","changeFunction","back","App","activeStory","activePanel","activeModal","popout","sortData","findIndex","sectionIndex","shift","onStoryChange","dataset","story","modal","chooseGlobal","save_request","onChangeForm","choose","chooseAll","submit","concat","location","axios","get","defaultCountry","chooseCountryText","isWebView","tabbar","data-story","dynamicContentHeight","settlingHeight","position","textAlign","overflowX","overflowY","backgroundColor","className","indicator","level","weight","shadow","fontWeight","iata","user_code","itoa","Boolean","hostname","send","ReactDOM","render","document","getElementById","eruda","erudaCode","erudaDom","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.962402ce.chunk.js","sourcesContent":["import React from 'react'\nimport { Panel, PanelHeader, List, SimpleCell, PanelSpinner, PanelHeaderBack } from '@vkontakte/vkui'\n\nconst Groups = ({ id, state, openCatalog, go }) => (\n  <Panel id={id}>\n    <PanelHeader left={<PanelHeaderBack onClick={() => go('home')} />}>Сообщества</PanelHeader>\n      {state.catalog === null ? \n        <PanelSpinner size='large'/>\n      :\n    <List>\n      {\n        state.catalog && (\n          state.catalog.map((item, index) => \n            <SimpleCell\n              key={item.catalog}\n              id={index}\n              expandable\n              onClick={openCatalog}\n            >\n              {item.catalog}\n            </SimpleCell>\n          )\n        )\n          \n       \n      }\n    </List>\n    }\n  </Panel>\n)\n\nexport default Groups\n","import React from 'react'\nimport { Div, Checkbox, Title, FormLayout, Switch, Cell, ScreenSpinner, ModalPage, withModalRootContext } from '@vkontakte/vkui'\n\nexport class SubscribeCities extends React.Component {\n  state = {\n    from: null,\n    to: null,\n    all:false,\n  }\n\n  componentDidMount() {\n    this.setState({ from: this.props.state.obj.from, to: this.props.state.obj.to })\n    this.props.updateModalHeight();\n  }\n\n\n\n\n  render() {\n    const {\n      from,\n      to,\n      all\n    } = this.state\n    const {\n      id,\n      close,\n      state\n    } = this.props\n    return (\n    \n<div />\n      \n\n    )\n  }\n}\nexport default withModalRootContext(SubscribeCities);\n\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, SimpleCell, Link, Button, Alert, ScreenSpinner } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class Catalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n            });\n          })\n        })\n      }\n    })\n  }\n\n  // Запрос на сообщения\n  subscribeMessages = (screenName, name) => {\n    const { state } = this.props\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n          .then(() => {\n            bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n              method: \"wall.get\",\n              request_id: 2,\n              params: {\n                domain: screenName,\n                access_token: auth.access_token,\n                v: 5.107,\n              }\n            })\n            .then(async tags => {\n              let tagsIn = [];\n              let tagsOut = [];\n              let itemsWall = tags.response.items;\n              itemsWall.forEach((group) => {\n                let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                if (match.length) {\n                  if (match.length > 2) {\n                    let matchOut = match[2];\n                    tagsOut.push(matchOut)\n                }\n                let matchIn = match[0];\n                tagsIn.push(matchIn)\n                }\n              });\n              tagsIn = tagsIn.map((item) => \n                item[0]\n              )\n              tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n              tagsOut = tagsOut.map((item) => \n                item[0]\n              )\n              tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n              let obj = {\n                name:name,\n                id:null,\n                groupId:data.response[0].id, \n                from:tagsOut.map((item) => {\n                  return {\n                    tag: item,\n                    checked: false\n                  }\n                }),\n                to:tagsIn.map((item) => {\n                  return {\n                    tag: item,\n                    checked: false\n                  }\n                })\n\n              }\n              this.props.onChangeGroups('obj', obj);\n              this.props.openModal('subscribeCities')\n              this.props.setPopout(null) \n              \n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        })\n        .catch(() => this.props.setPopout(null))\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  // Предупреждение с информацией\n  subscribeMessagesAlert = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const name = e.currentTarget.name\n    this.props.setPopout(\n      <Alert\n        actions={[{\n          title: 'Отмена',\n          autoclose: true,\n          mode: 'cancel'\n        }, {\n          title: 'Разрешить',\n          autoclose: true,\n          action: () => this.subscribeMessages(screenName, name),\n        }]}\n        onClose={() => this.props.setPopout(null)}\n      >\n        <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n      </Alert>\n    )\n  }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"groups\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          state.catalog && (\n            state.catalog[state.currentCatalog].to.map((item, index) => \n              item.section ? \n                <SimpleCell\n                  key={index}\n                  expandable\n                  id={index}\n                  onClick={this.props.chooseSection}\n                >\n                  <Link>{item.section}</Link>\n                </SimpleCell>\n              :\n              <RichCell\n                key={index}\n                disabled\n                multiline\n                actions={\n                  <React.Fragment>\n                    <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={this.subscribe}\n                    >Подписаться</Button>\n                     <Button\n                      mode=\"outline\"\n                      id={item.channelName}\n                      onClick={e => window.open(e.currentTarget.id, '_blank')}\n                    >Посмотреть</Button>\n                    <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                      <Icon28SettingsOutline />\n                    </Link>\n                  </React.Fragment>\n                }\n              >\n                {item.description}\n              </RichCell>\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default Catalog\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, RichCell, Link, Button, Header, ScreenSpinner, Alert } from '@vkontakte/vkui'\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport SubscribeCities from '../components/SubscribeCities'\n\nexport class SectionCatalog extends Component {\n  // Подписка на сообщество\n  subscribe = e => {\n    const screenName = e.currentTarget.id.split(\"com/\")[1]\n    const { state } = this.props\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppJoinGroup\", {\"group_id\": data.response[0].id})\n          .then(() => {\n            // Если пользователь подписался, то отправляем запрос \n            // на сохранение этих данных\n            fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-groups\", {\n              \"headers\": {\n                \"accept\": \"*/*\",\n                \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n                \"content-type\": \"application/json;charset=utf-8\",\n                \"sec-fetch-dest\": \"empty\",\n                \"sec-fetch-mode\": \"cors\",\n                \"sec-fetch-site\": \"same-origin\"\n              },\n              \"body\": JSON.stringify({\n                user_id: state.user.id,\n                app_id: state.appId,\n                checkbox: data.response[0].id\n              }),\n              \"method\": \"POST\",\n              \"mode\": \"cors\",\n              \"credentials\": \"include\"\n            });\n          })\n        })\n      }\n    })\n  }\n\n    // Запрос на сообщения\n    subscribeMessages = (screenName, name) => {\n      const { state } = this.props\n      this.props.setPopout(<ScreenSpinner />)\n      bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n        app_id: state.appId,\n        scope: \"wall,groups\",\n        request_id: 1\n      })\n      .then(auth => {\n        if(auth.access_token && auth.scope === \"wall,groups\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"groups.getById\",\n            request_id: 2,\n            params: {\n              group_id: screenName,\n              access_token: auth.access_token,\n              v: 5.107,\n            }\n          })\n          .then(data => {\n            bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n            .then(() => {\n              bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n                method: \"wall.get\",\n                request_id: 2,\n                params: {\n                  domain: screenName,\n                  access_token: auth.access_token,\n                  v: 5.107,\n                }\n              })\n              .then(async tags => {\n                let tagsIn = [];\n                let tagsOut = [];\n                let itemsWall = tags.response.items;\n                itemsWall.forEach((group) => {\n                  let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                  if (match.length) {\n                    if (match.length > 2) {\n                      let matchOut = match[2];\n                      tagsOut.push(matchOut)\n                  }\n                  let matchIn = match[0];\n                  tagsIn.push(matchIn)\n                  }\n                });\n                tagsIn = tagsIn.map((item) => \n                  item[0]\n                )\n                tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n                tagsOut = tagsOut.map((item) => \n                  item[0]\n                )\n                tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n                let obj = {\n                  name:name,\n                  id:null,\n                  groupId:data.response[0].id, \n                  from:tagsOut.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  }),\n                  to:tagsIn.map((item) => {\n                    return {\n                      tag: item,\n                      checked: false\n                    }\n                  })\n  \n                }\n                this.props.onChangeGroups('obj', obj);\n                this.props.openModal('subscribeCities')\n                this.props.setPopout(null)\n              })\n              .catch(() => this.props.setPopout(null))\n            })\n            .catch(() => this.props.setPopout(null))\n          })\n          .catch(() => this.props.setPopout(null))\n        }\n      })\n      .catch(() => this.props.setPopout(null))\n    }\n  \n    // Предупреждение с информацией\n    subscribeMessagesAlert = e => {\n      const screenName = e.currentTarget.id.split(\"com/\")[1]\n      const name = e.currentTarget.name\n      this.props.setPopout(\n        <Alert\n          actions={[{\n            title: 'Отмена',\n            autoclose: true,\n            mode: 'cancel'\n          }, {\n            title: 'Разрешить',\n            autoclose: true,\n            action: () => this.subscribeMessages(screenName, name),\n          }]}\n          onClose={() => this.props.setPopout(null)}\n        >\n          <p>Вы можете получать со стены сообщества в личные сообщения только те авиабилеты, которые Вам интересны. Для этого разрешите сейчас сообщения в сообществе и выберите города прилета из списка.</p>\n        </Alert>\n      )\n    }\n\n  render() {\n    const {\n      id,\n      state,\n      go,\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={() => go(\"catalog\")} />\n          }\n        >{state.catalog[state.currentCatalog].catalog}</PanelHeader>\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            <Header>{state.catalog[state.currentCatalog].to[state.currentSection].section}</Header>\n          )\n        }\n        {\n          (state.currentSection || state.currentSection === 0) && (\n            state.catalog && (\n              state.catalog[state.currentCatalog].to[state.currentSection].arr.map((item, index) => \n                <RichCell\n                  key={index}\n                  disabled\n                  multiline\n                  actions={\n                    <React.Fragment>\n                      <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={this.subscribe}\n                      >Подписаться</Button>\n                       <Button\n                        mode=\"outline\"\n                        id={item.channelName}\n                        onClick={e => window.open(e.currentTarget.id, '_blank')}\n                      >Посмотреть</Button>\n                      <Link name={item.description} id={item.channelName} onClick={this.subscribeMessagesAlert}>\n                        <Icon28SettingsOutline />\n                      </Link>\n                    </React.Fragment>\n                  }\n                >\n                  {item.description}\n                </RichCell>\n              )\n            )\n          )\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default SectionCatalog\n","import React, { Component } from 'react'\r\nimport { render } from '@testing-library/react';\r\nimport { Snackbar } from '@vkontakte/vkui';\r\n\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\n\r\nexport class SnakbarError extends Component {\r\n    state = {\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.text);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <Snackbar onClose={this.props.close} before={<Icon24Error fill='#FA5728'/>}>{this.props.text ? this.props.text : \"Ошибка интернет-соеденения.\"}</Snackbar>\r\n        )\r\n    }\r\n}\r\n \r\nexport default SnakbarError;","import React, { Component } from 'react'\nimport bridge from '@vkontakte/vk-bridge'\nimport { Group, ScreenSpinner, List, RichCell, Link, Separator, Placeholder, ActionSheet, ActionSheetItem, Alert } from '@vkontakte/vkui'\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\nimport Icon28DeleteOutlineAndroid from '@vkontakte/icons/dist/28/delete_outline_android';\n\n\nimport SnackbarError from './SnackbarError';\n\nexport class MyGroups extends Component {\n  state = {\n    data: null,\n    snackbar:null,\n  }\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      \n      this.setState({ data: data.tags })\n      this.props.setPopout(null)\n    }).catch(err => {\n      this.props.setPopout(null)\n      this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})}/>, data:'error'})\n    })\n  }\n\n  openMenu = (item, i) => {\n    this.props.setPopout(\n      <ActionSheet onClose={() => this.props.setPopout(null)}>\n        <ActionSheetItem autoclose before={<Icon28EditOutline />} onClick={() => this.edit_(item.body, item.id)}>\n          Редактировать\n        </ActionSheetItem>\n        <ActionSheetItem mode=\"destructive\" before={<Icon28DeleteOutlineAndroid />} onClick={() => this.openConfirm(item.id, i)}>\n          Удалить  \n        </ActionSheetItem>\n      </ActionSheet>\n    )\n  }\n\n  openConfirm = (id, i) => {\n    this.props.setPopout(\n      <Alert\n      onClose={() => this.props.setPopout(null)}\n      actions={[{\n        title: 'Нет',\n        autoclose: true,\n        mode: 'cancel'\n      }, {\n        title: 'Да',\n        autoclose: true,\n        mode: 'destructive',\n        action: () => this.delete(id, i),\n      }]}>\n       Вы уверены?\n      </Alert>\n    )\n  }\n\n  delete = (id, i) => {\n    console.log(i)\n    this.props.setPopout(<ScreenSpinner />);\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/remove-tag\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"referrer\": \"https://appvk.flights.ru/\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify({tag_id:id, user_id:this.props.state.user.id}),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(check => {\n      if(check.response === 'ok'){\n        this.state.data.splice(i, 1);\n        this.props.setPopout(null);\n      }\n    })\n  }\n\n  edit_ = (string, id) => {\n    let name = string.split('#')[1];\n    let screenName = string.split('@')[1];\n    const { state } = this.props\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: state.appId,\n      scope: \"wall,groups\",\n      request_id: 1\n    })\n    .then(auth => {\n      if(auth.access_token && auth.scope === \"wall,groups\"){\n        bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n          method: \"groups.getById\",\n          request_id: 2,\n          params: {\n            group_id: screenName,\n            access_token: auth.access_token,\n            v: 5.107,\n          }\n        })\n        .then(data => {\n          bridge.sendPromise(\"VKWebAppAllowMessagesFromGroup\", {\"group_id\": data.response[0].id, \"key\": \"dBuBKe1kFcdemzB\"})\n          .then(() => {\n            bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n              method: \"wall.get\",\n              request_id: 2,\n              params: {\n                domain: screenName,\n                access_token: auth.access_token,\n                v: 5.107,\n              }\n            })\n            .then(async tags => {\n              let tagsIn = [];\n              let tagsOut = [];\n              let itemsWall = tags.response.items;\n              let tags_obj = this.state.data.filter(element => { if(element.body.split('@')[1] ===  screenName) { return true; }});\n              let tags_name = tags_obj.map(e => { return e.body});\n              console.log(tags_name);\n              itemsWall.forEach((group) => {\n                let match = [...group.text.matchAll(/(#.*@.*)/g)];\n                if (match.length) {\n                  if (match.length > 2) {\n                    let matchOut = match[2];\n                    tagsOut.push(matchOut)\n                }\n                let matchIn = match[0];\n                tagsIn.push(matchIn)\n                }\n              });\n              tagsIn = tagsIn.map((item) => \n                item[0]\n              )\n              tagsIn = tagsIn.filter((v,i) => tagsIn.indexOf(v) === i)\n              tagsOut = tagsOut.map((item) => \n                item[0]\n              )\n              tagsOut = tagsOut.filter((v,i) => tagsOut.indexOf(v) === i)\n              let obj = {\n                name:name,\n                id:id,\n                groupId:data.response[0].id, \n                from:tagsOut.map((item) => {\n                  return {\n                    tag: item,\n                    checked: tags_name.indexOf(item) !== -1\n                  }\n                }),\n                to:tagsIn.map((item) => {\n                  return {\n                    tag: item,\n                    checked: tags_name.indexOf(item) !== -1\n                  }\n                })\n              }\n              this.props.onChangeGroups('obj', obj);\n              this.props.openModal('subscribeCities');\n              this.props.setPopout(null);\n\n            })\n            .catch((err) => {this.props.setPopout(null); console.log(err)})\n          })\n          .catch((err) => {this.props.setPopout(null); console.log(err)})\n        })\n        .catch((err) => {this.props.setPopout(null); console.log(err)})\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <Group>\n        {this.state.data === 'error' ? <Placeholder>Ошибка интернет-соеденения</Placeholder>:\n        data && (\n        <div>\n          {data.length === 0 ? <Placeholder>У вас нет подписок.</Placeholder>:\n        <List>\n          {\n            \n              data.map((item, i) =>\n                <div key={i}>\n                  <RichCell\n                    onClick={() => this.openMenu(item, i)}\n                    text={item.group_name}\n                    caption={\n                      \"Куда: \"+item.body.split(\"#\")[1].split(\"@\")[0]\n                    }\n                    after={\n                      <div>\n                        <Link>\n                          <Icon28EditOutline />\n                        </Link><br /><br />\n                        <Link>\n                          <Icon28DeleteOutlineAndroid />\n                        </Link>\n                      </div>\n                    }\n                  >\n                    {item.category}\n                  </RichCell>\n                  <Separator />\n                </div>\n              )\n            \n          }\n        </List>\n        }\n        </div>\n        )\n      }\n      {this.state.snackbar}\n      </Group>\n    )\n  }\n}\n\nexport default MyGroups\n","import React, { Component } from 'react'\nimport SnackbarError from './SnackbarError';\nimport { Group, ScreenSpinner, CardGrid, Card, Div, Button, Alert, Placeholder } from '@vkontakte/vkui'\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENTS = {\n  'random': 'любая',\n  'E': 'Европа',\n  'F': 'Африка',\n  'O': 'Океания',\n  'A': 'Азия',\n  'S': 'Южная Америка',\n  'N': 'Северная Америка',\n};\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рубль \",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst CURRENCY1 = {\n  AZN: \"манат\",\n  BYN: \"беларусских рублей\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рублей\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nconst blue = {\n  color:'var(--accent)'\n}\n\nexport class MyDB extends Component {\n  state = {\n    snackbar:null\n  }\n\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-requests\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"body\": JSON.stringify({\n        user_id: String(this.props.state.user.id)\n      }),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(data => {\n      this.setState({ data: data.requests })\n      this.props.setPopout(null)\n    }).catch(err => {\n      this.props.setPopout(null)\n      this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})}/>, data:'error'})\n    })\n  }\n\n  openAlert = (request_id, i) => {\n    console.log(request_id)\n      this.props.setPopout(\n        <Alert\n        actions={[{\n          title: 'Нет',\n          autoclose: true,\n          mode: 'cancel'\n        }, {\n          title: 'Да',\n          autoclose: true,\n          mode: 'destructive',\n          action: () => this.delete(request_id, i),\n        }]}\n        onClose={() => this.props.setPopout(null)}>\n          <h1>Удалить?</h1>\n        </Alert>\n      )\n  }\n\n  delete = (request_id, i) => {\n    this.props.setPopout(<ScreenSpinner />);\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/delete-request\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"referrer\": \"https://appvk.flights.ru/\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify({request_id:request_id}),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(check => {\n      if(check.response === 'ok'){\n        let remove = this.state.data.splice(i, 1);\n\n        this.props.setPopout(null);\n      }\n    })\n  }\n\n  edit = (obj) => {\n    let data = JSON.parse(obj.output);\n    this.props.onChangeGroups('form', {...data, id:obj.id});\n    setTimeout(() => this.props.go('edit_settings'), 500)\n  }\n  \n\n  render() {\n    const {\n      data\n    } = this.state\n    return (\n      <div>\n        {\n          data &&        \n          <div>\n          {data === 'error' ? <Placeholder>Ошибка интернет-соеденения</Placeholder> :\n          <div>\n            {data.length === 0 ? <Placeholder>У вас нет подписок.</Placeholder>:\n          (\n            data.map((item, index) => \n            <Group separator=\"hide\" key={index}>\n              <CardGrid>\n                <Card size=\"l\" mode=\"shadow\">\n                  <Div style={{ padding: '20px', lineHeight: 1.5 }}>\n                    Из страны <b style={blue}>{\n                      JSON.parse(item.output).countrySrc ? JSON.parse(item.output).countrySrc : \"любая\"\n                    }</b> и города <b style={blue}>{JSON.parse(item.output).citySrc ? JSON.parse(item.output).citySrc : \"любой\"}</b><br />\n                    В часть света <b style={blue}>{CONTINENTS[JSON.parse(item.output).continentDst]}</b> и страну <b style={blue}>{JSON.parse(item.output).countryDst ? JSON.parse(item.output).countryDst : \"любая\"}</b><br />\n                    В город <b style={blue}>{JSON.parse(item.output).cityDst ? JSON.parse(item.output).cityDst : \"любой\"}</b><br />\n                    Направление полетов: туда-обратно - <b style={blue}>{JSON.parse(item.output).dual ? \"да\" : \"нет\"}</b><br />\n                    Направление полетов: туда - <b style={blue}>{JSON.parse(item.output).forward ? \"да\" : \"нет\"}</b><br />\n                    {\n                      JSON.parse(item.output).dates.map((item, i) => \n                        <div key={i}>\n                          Год вылета ({i+1}) <b style={blue}>{item.year}</b><br />\n                          Время года ({i+1}) <b style={blue}>{SEASONS_TRANSCRIPTION[item.season]}</b><br />\n                          Месяц ({i+1}) <b style={blue}>{MONTHS_TRANSCRIPTION[item.month]}</b><br />\n                        </div>    \n                      )\n                    }<br />\n                    Пассажиры <b style={blue}>{PASSENGERS[JSON.parse(item.output).passengers]}</b><br />\n                    Цена от <b style={blue}>{JSON.parse(item.output).costMin}</b> до <b style={blue}>{JSON.parse(item.output).costMax}</b> {CURRENCY1[JSON.parse(item.output).currency]}<br />\n\n                    Период показа <b style={blue}>{JSON.parse(item.output).interval}</b> минут<br />\n                    Глубина поиска <b style={blue}>{JSON.parse(item.output).updated}</b> минут<br />\n                    Максимальное количество билетов за 24 часа <b style={blue}>{JSON.parse(item.output).limit === \"0\" ? \"все\" : JSON.parse(item.output).limit}</b><br />\n                    Язык (туда-обратно) <b style={blue}>{LANGUAGES[JSON.parse(item.output).language]}</b><br />\n                    Валюта (цена) <b style={blue}>{CURRENCY[JSON.parse(item.output).currency]}</b><br />\n                    Валюта (метапоисковика) <b style={blue}>{CURRENCY[JSON.parse(item.output).currencyForUrl]}</b><br />\n                    {\n                      JSON.parse(item.output).optional && (\n                        <div><br />\n                          <div style={{ color: 'var(--tabbar_inactive_icon)' }}>Дополнительные параметры</div>\n                          {\n                            JSON.parse(item.output).profitability && (\"Выгодность покупки больше \")\n                          }\n                          {\n                            JSON.parse(item.output).profitability && \n                            <b style={blue}>{JSON.parse(item.output).profitability+\"%\"}</b>\n                          }<br />\n                          Дни недели вылета <b style={blue}>{\n                            ((days) => {\n                              const daysOfWeek = [\n                                \"вс\",\n                                \"пн\",\n                                \"вт\",\n                                \"ср\",\n                                \"чт\",\n                                \"пт\",\n                                \"сб\"\n                              ]\n                              let check = 0;\n                              days.every((element, index, array) => {\n                                  check++;\n                                  return element === true;\n                              });\n                              if (check === 7) {\n                                  return 'все';\n                              }\n                              let res = '';\n                              for (let index = 1; index < days.length; index++) {\n                                  if (days[index]) {\n                                      res += daysOfWeek[index].toLowerCase() + ', ';\n                                  }\n                              }\n                              res += daysOfWeek[0].toLowerCase();\n                              return res;\n                            })(JSON.parse(item.output).days)\n                          }</b><br />\n                          {\n                            JSON.parse(item.output).showAddionalWeather && (\n                              <div>\n                                Прогноз погоды в день прилета<br />\n                                Днем от <b style={blue}>{JSON.parse(item.output)['dayTemp.min']}</b> С до <b style={blue}>{JSON.parse(item.output)['dayTemp.max']}</b> С<br />\n                                Ночью от <b style={blue}>{JSON.parse(item.output)['nightTemp.min']}</b> С до <b style={blue}>{JSON.parse(item.output)['nightTemp.max']}</b> С<br />\n                              </div>\n                            )\n                          }\n                        </div>\n                      )\n                    }\n                  </Div>\n                  <Div>\n                    <Button\n                      onClick={() => this.edit(item)}\n                      size=\"xl\"\n                    >\n                      Редактировать\n                    </Button><br />\n                    <Button\n                      onClick={() => this.openAlert(item.id, index)}\n                      size=\"xl\"\n                      mode=\"destructive\"\n                    >\n                      Удалить\n                    </Button>\n                  </Div>\n                </Card>\n              </CardGrid>\n            </Group>\n            )\n          )\n            }\n          </div>\n         }\n         </div> \n        }\n        {this.state.snackbar}\n      </div>\n    )\n  }\n}\n\nexport default MyDB\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, FixedLayout, Tabs, TabsItem, Div, Button } from '@vkontakte/vkui'\nimport MyGroups from '../components/MyGroups'\nimport MyDB from '../components/MyDB'\n\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\n\nexport class MySubs extends Component {\n  state = {\n    activeTab: 'groups',\n  }\n\n  render() {\n    const {\n      activeTab\n    } = this.state\n    const {\n      id,\n      state\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader>Мои подписки</PanelHeader>\n        <FixedLayout vertical=\"top\">\n          <Tabs>\n            <TabsItem\n              selected={activeTab === 'groups'}\n              onClick={() => this.setState({ activeTab: 'groups' })}\n            >Витрина</TabsItem>\n            <TabsItem\n              selected={activeTab === 'database'}\n              onClick={() => this.setState({ activeTab: 'database' })}\n            >Настройки</TabsItem>\n          </Tabs>\n        </FixedLayout>\n        <Div style={{ marginTop: 40, paddingBottom: 0 }}>\n        <Button mode='secondary' size='xl' before={<Icon28AddOutline />} onClick={() => this.props.onChangeGroups('activePanel', (activeTab === 'database' ? 'settings' : 'groups'))}>Создать</Button>\n        </Div>\n        {\n          activeTab === 'groups' ? \n            <MyGroups\n              setPopout={this.props.setPopout}\n              onChangeGroups={this.props.onChangeGroups}\n              openModal={this.props.openModal}\n              state={state}\n            />\n          :\n            <MyDB\n              onChangeGroups={this.props.onChangeGroups}\n              setPopout={this.props.setPopout}\n              state={state}\n              onChange={this.props.onChange}\n              go={this.props.go}\n            />\n        }\n      </Panel>\n    )\n  }\n}\n\nexport default MySubs\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, Placeholder, Button, SimpleCell, Avatar, ScreenSpinner, RichCell } from '@vkontakte/vkui'\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\nimport bridge from '@vkontakte/vk-bridge'\nimport { VKMiniAppAPI } from '@vkontakte/vk-mini-apps-api'\nimport SnackbarError from '../components/SnackbarError';\n\nimport Icon28ViewOutline from '@vkontakte/icons/dist/28/view_outline';\n\n\nexport class Friends extends Component {\n  state = {\n    friends: null,\n    snackbar:null\n  }\n\n  componentDidMount() {\n    this.getFriends()\n  }\n  \n  getFriends = () => {\n    this.props.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetAuthToken\", {\n      app_id: this.props.state.appId,\n      scope: \"friends\"\n    })\n    .then(data => {\n      if(data.access_token){\n        if(data.scope === \"friends\"){\n          bridge.sendPromise(\"VKWebAppCallAPIMethod\", {\n            method: \"friends.get\",\n            params: {\n              access_token: data.access_token,\n              fields: \"city,photo_200,country,bdate,status,last_seen\",\n              v: 5.107\n            },\n            request_id: '3'\n          })\n          .then(data => {\n            if(data.response.items){\n              this.setState({\n                friends: data.response.items.filter((item) => item.city).filter((item) => \n                  item.city.id !== this.props.state.user.city.id\n                )\n              })\n              this.props.setPopout(null)\n            }else{\n              this.props.setPopout(null)\n            }\n          })\n          .catch(() => this.props.setPopout(null))\n        }else{\n          this.props.setPopout(null)\n        }\n      }else{\n        this.props.setPopout(null)\n      }\n    })\n    .catch(() => this.props.setPopout(null))\n  }\n\n   isEmpty(obj) {\n    for (let key in obj) {\n      return false;\n    }\n    return true;\n  }\n\n  getPrice = (city) => {\n\n  }\n\n  date(date) {\n    if(date == \"\" || date == null) {\n      return \"Не указан\";\n    }\n    let arr = date.split('.');\n    switch (arr[1]) {\n      case '1':\n        return arr[0]+' января';\n      break\n\n      case '2':\n        return arr[0]+' февраля';\n      break\n\n      case '3':\n        return arr[0]+' марта';\n      break\n\n      case '4':\n        return arr[0]+' апреля';\n      break\n      case '5':\n        return arr[0]+' мая';\n      break\n      case '6':\n        return arr[0]+' июня';\n      break\n      case '7':\n        return arr[0]+' июля';\n      break\n      case '8':\n        return arr[0]+' августа';\n      break\n      case '9':\n        return arr[0]+' сентября';\n      break\n\n      case '10':\n        return arr[0]+' октября';\n      break \n        \n      case '11':\n        return arr[0]+' ноября';\n      break\n      case '12':\n        return arr[0]+' декабря';\n      break\n    }\n  }\n\n  open = (friend) => {\n    console.log(friend)\n    this.props.setPopout(<ScreenSpinner />)\n    fetch(\"https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/data/ru/cities.json\")\n    .then(response => response.json())\n    .then(cities => {\n      let myCode = cities.filter((item) => item.name === this.props.state.user.city.title)[0].code\n      const friendCode = cities.filter((item) => item.name === friend.city.title)[0].code\n      fetch(`https://cors-anywhere.herokuapp.com/https://api.travelpayouts.com/v1/prices/calendar?&origin=${myCode}&destination=${friendCode}&calendar_type=departure_date&token=d378bb3f3b879e6fc87899314ba5ce5d`)\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        let indexPrice = Object.keys(data.data)[0]\n        if(Object.keys(data.data).length > 3){\n          indexPrice = Object.keys(data.data)[3]\n        }\n        this.props.onChangeGroups('friend', {...friend, price: data.data[indexPrice].price}); \n        this.props.openModal('bullet_to_friend')\n        this.props.setPopout(null)\n      }).catch(err => {\n        this.props.setPopout(null)\n        this.setState({snackbar:<SnackbarError text={\"Не нашли цену билета к этому другу :(\"} close={() => this.setState({snackbar:null})}/>})\n      })\n    }).catch(err => {\n      this.props.setPopout(null)\n      this.setState({snackbar:<SnackbarError text={\"Не нашли город друга :(\"} close={() => this.setState({snackbar:null})}/>})\n    })\n\n  }\n\n  render() {\n    const {\n      id\n    } = this.props\n    const {\n      friends\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader>Друзья</PanelHeader>\n        {\n          friends ? \n          friends.map((friend, i) => \n          <RichCell key={i} before={<Avatar src={friend.photo_200}/>} multiline\n          text={friend.status}\n          caption={friend.city == null || friend.country == null ? '??':friend.country.title+\". \"+friend.city.title+\". День рождения: \"+this.date(friend.bdate)}\n          after={friend.online == 1 && friend.last_seen == null ? <span style={{ color: 'var(--dynamic_green)' }}>В сети</span> : (friend.last_seen && <span style={{ fontSize: 12}}>{new Date(friend.last_seen.time*1000).toLocaleString('ru', {  year: 'numeric', month: 'numeric',day: 'numeric', hour: 'numeric',minute: 'numeric'})}</span>)}\n          onClick={() => this.open(friend)}>\n          {friend.first_name+\" \"+friend.last_name}\n          </RichCell>\n          )\n          :\n          <Placeholder\n            icon={<Icon56UsersOutline />}\n            header=\"Друзья\"\n            action={<Button onClick={this.getFriends} size=\"l\">Показать список</Button>}\n          >\n            Чтобы получить список к друзьям, вам нужно предоставить доступ приложению.\n          </Placeholder>\n        }\n        {this.state.snackbar}\n      </Panel>\n    )\n  }\n}\n\nexport default Friends\n","import React, { Component } from 'react'\nimport SnackbarError from '../components/SnackbarError'; \nimport { Panel, PanelHeader, FormLayout, Header, Input, Select, Checkbox, Button, Div, RangeSlider, PanelHeaderBack, ScreenSpinner, SimpleCell, Cell, Switch, FormLayoutGroup, Tabs, TabsItem, Separator } from '@vkontakte/vkui'\nimport Icon28AddOutline from '@vkontakte/icons/dist/28/add_outline';\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel';\n\nimport SelectSearch from 'react-select-search';\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\n\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENT_DST = {\n  all:\"любая\",\n  E:'Европа',\n  F:\"Африка\",\n  D:'Океания',\n  A:\"Азия\",\n  S:\"Южная Америка\",\n  N:\"Северная Америка\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nconst CURRENCY = {\n  AZN: {name:\"манат\", min:5, max:7000},\n  BYN: {name:\"беларусский рубль\", min:10, max:10000},\n  CNY: {name:\"юань\", min:10, max:30000},\n  EUR: {name:\"евро\", min:1, max:4000},\n  KGS: {name:\"сом\", min:100, max:300000},\n  KZT: {name:\"тенге\", min:500, max:1500000},\n  RUB: {name:\"рубль\", min:100, max:300000},\n  THB: {name:\"бат\", min:10, max:150000},\n  UAH: {name:\"гривна\", min:50, max:100000},\n  USD: {name:\"доллар\", min:1, max:5000},\n  UZS: {name:\"сум\", min:500, max:500000}\n}\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  urlForma: \"другой вариант\"\n}\n\nconst checkbox = {\n  paddingTop:0, paddingBottom:0\n}\n\nexport class Settings extends Component {\n  state = {\n    data:[],\n    listCountry:[],\n    cities:[],\n    updated: \"60\",\n    interval: \"60\",\n    limit: \"0\",\n    countryDst:'all',\n    cityDst:'all',\n    datesCnt: [{\n      year: (new Date()).getFullYear(),\n      season: 'all',\n      month: '0'\n    }],\n    activeCnt:0,\n    language: 'ru',\n    dual: true,\n    forward: true,\n    profitability:30,\n    currency: 'RUB',\n    currencyForUrl: 'RUB',\n    passengers:'url',\n    randomCost:true,\n    randomTempDay:true,\n    randomTempNight:true,\n    costMin: 100,\n    costMax: 500000,\n    dayTempMin:-50,\n    dayTempMax:50,\n    interval:'60',\n    nighTempMin:-50,\n    nighTempMax:50,\n    days:[true, true, true, true, true, true, true],\n    allDays:true,\n    snackbar:null,\n    all_flight:true\n  }\n\n\n  componentDidMount() {\n    this.props.setPopout(<ScreenSpinner />);\n    fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Countries`)\n    .then(response => response.json())\n    .then(listCountry => {\n        listCountry.unshift({code:'all', nameTranslations:{ru:\"любая\"}})\n        let s = listCountry.filter(country => country.nameTranslations.ru.indexOf(this.props.state.user.country.title) > -1)[0];\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Cities/byCountry/`+s.code)\n          .then(response => response.json())\n          .then(cities => {\n              cities.unshift({code:'all', nameTranslations:{ru:\"любая\"}})\n              let n = cities.filter(city => city.nameTranslations.ru != null && city.nameTranslations.ru.indexOf(this.props.state.user.city.title) > -1)[0];\n              console.log(n);\n              this.setState({ listCountry, cities, countrySrc:s.code,  countrySrcCode:s.nameTranslations.ru, citySrc:n.code, citySrcCode:n.nameTranslations.ru}, this.props.setPopout(null));\n        })\n    })\n\n    /**/\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value\n    })\n  }\n\n  onChangeCheck = (e) => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.checked\n    })\n  }\n\n  onChangeFrom = e => {\n    const { datesCnt } = this.state\n    datesCnt[parseInt(e.currentTarget.id, 10)][e.currentTarget.name] = e.currentTarget.value\n    if([e.currentTarget.name] == 'year') {\n      console.log('p');\n      datesCnt[parseInt(e.currentTarget.id, 10)]['season'] = 'all';\n      datesCnt[parseInt(e.currentTarget.id, 10)]['month'] = 0;\n    }\n    this.setState({\n      datesCnt\n    })\n  }\n\n  addFrom = () => {\n    const { datesCnt } = this.state\n    datesCnt.push({\n      yearSrc: (new Date()).getFullYear(),\n      seasonSrc: SEASONS_TRANSCRIPTION['all'],\n      monthSrc: MONTHS_TRANSCRIPTION['0']\n    })\n    this.setState({\n      datesCnt\n    })\n  }\n\n  removeFrom = () => {\n    const { datesCnt } = this.state\n    this.setState({\n      activeCnt: this.state.activeCnt -1,\n      datesCnt: datesCnt.splice(0, datesCnt.length-1)\n    })\n  }\n\n  onChangeDays = (e) => {\n    console.log(e.currentTarget.name);\n    if(e.currentTarget.name == 'all') {\n      this.setState({ allDays:!this.state.allDays, days:[false, false, false, false, false, false, false]});\n    }else{\n      //this.setState({ allDays:!this.state.allDays});\n      let bool = !this.state.days[Number(e.currentTarget.name)];\n      let days = this.state.days.splice([Number(e.currentTarget.name)], 1, bool);\n      console.log(this.state.days);\n      \n      let t = true;\n      this.state.days.forEach(e => {\n        if(!e) t = false\n      })\n      this.setState({ days:this.state.days, allDays:t });\n    }\n\n  }\n\n//готовим данные к отправке\n  sort_res = () => { \n    this.props.setPopout(<ScreenSpinner />)\n    const { user } = this.props.state;\n    const { citySrcCode, cityDstCode, countryDstCode, countrySrcCode,citySrc, cityDst, countryDst, countrySrc, costMax, costMin, currency,currencyForUrl,language, randomCost, dual,forward, datesCnt, profitability, dayTempMin, dayTempMax, nighTempMax, nighTempMin,passengers, updated, interval, limit, continentDst } = this.state;\n    let days;\n    if(this.state.allDays) {\n      days = [true, true, true, true, true, true, true];\n    }else{\n      days = this.state.days;\n    }\n    let output = {\n      citySrc:citySrcCode, \n      cityDst:cityDstCode,\n      countryDst:countryDstCode,\n      countrySrc:countrySrcCode,\n      continentDst,\n      costMax, \n      costMin,\n      currency,\n      currencyForUrl, \n      language,\n      randomCost,\n      forward,\n      dual,\n      passengers,\n      updated:Number(updated),\n      limit,\n      interval,\n      optional:true,\n      dates:datesCnt,\n      showAddionalWeather:true,\n      profitability:String(profitability),\n      ['nightTemp.max']:nighTempMax,\n      ['nightTemp.min']:nighTempMin,\n      ['dayTemp.max']:dayTempMax,\n      ['dayTemp.min']:dayTempMin,\n      days\n    }\n\n    let src_name;\n    let dst_name;\n    fetch(` https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20191125T185829Z.bafa3ff776a2185a.64a334987cf74f3b022d5c07a4b67f2247dbc05b&lang=ru-en&text=${citySrcCode}`)\n    .then(response => response.json())\n    .then(res => {\n      src_name = res.text;\n      fetch(` https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20191125T185829Z.bafa3ff776a2185a.64a334987cf74f3b022d5c07a4b67f2247dbc05b&lang=ru-en&text=${cityDstCode}`)\n      .then(response => response.json())\n      .then(res => {\n        dst_name = res.text;\n        let content = {\n          ['src.CountryCode']:countrySrc,\n          ['src.name']:src_name,\n          ['dst.name']:dst_name,\n          ['Discount']:{ ['$gte']:profitability},\n          ['SrcDayOfWeek']:{['$in']:days.map((item, i) => { if(item == true) return i})},\n          ['Dst.CountryCode']:(countryDst == 'all' ? null : countryDst),\n          ['Price']:{['$gte']:costMin, ['$lte']:costMax},\n          ['Temp.Max']:{['$gte']:dayTempMin, ['$lte']:dayTempMax},\n          ['Temp.Min']:{['$gte']:nighTempMin, ['$lte']:nighTempMax},\n          ['Dst.continentCode']:continentDst,\n        }\n        let obj = {\n          id:null,\n          interval:interval,\n          limit:limit,\n          updated:Number(updated),\n          user_id:user.id,\n          output,\n          content\n        }\n        //this.save_request(obj);\n        this.props.onChangeGroups('item', obj);\n        this.props.openModal('confirm_settings');\n        this.props.setPopout(null);\n      })\n    })\n\n\n\n\n  }\n\n// автокомплит стран\n  searchCountry = (value, obj, name) => { // автокомплит\n        let type = 'citySrc';\n        if(name == 'countryDst') type = 'cityDst';\n        this.setState({ [name]: value, [type]:null });\n        this.props.setPopout(<ScreenSpinner />)\n        if(value !== 'all') {\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Cities/byCountry/${value}`)\n        .then(response => response.json())\n        .then(list => {\n          list.unshift({code:'all', nameTranslations:{ ru: \"любой\"}})\n          let nameCountry = name+\"Code\";\n          this.setState({cities:list, [nameCountry]: obj.name})\n      })\n      }\n      this.props.setPopout(null)\n  }\n\n//// автокомплит городов\n  searchCity = (value, obj, name) => {\n    let nameCity = name+\"Code\";\n    this.setState({ [name]: value, [nameCity]: obj.name});\n    console.log(this.state)\n  }\n\n\n\n  render() {\n    const {\n      id,\n      state,\n    } = this.props\n    const {\n      datesCnt,\n      currency,\n      currencyForUrl,\n      language,\n      countrySrc,\n      countrySrcCode,\n      countryDstCode,\n      citySrc,\n      countryDst,\n      cityDst,\n      continentDst,\n      randomCost,\n      randomTempDay,\n      randomTempNight,\n      costMin,\n      costMax,\n      dayTempMin,\n      dayTempMax,\n      nighTempMax,\n      nighTempMin,\n      days,\n      dual,\n      updated,\n      interval,\n      forward,\n      activeCnt,\n      all_flight\n    } = this.state\n    return (\n      <Panel id={id}>\n        <PanelHeader left={<PanelHeaderBack onClick={() => this.props.go('home')}/>}>Настройки</PanelHeader>\n        <FormLayout>\n        <Header style={{ color: 'var(--accent)' }}>Откуда</Header>\n          <FormLayoutGroup top=\"Страна\">\n            <div align=\"left\" style={{ padding:\"0 12px\"}}>\n              <SelectSearch \n                placeholder=\"Выберите страну\" \n                options={this.state.listCountry.filter((el) => el.code != 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \n                value={countrySrc} \n                onChange={(value, obj) => this.searchCountry(value, obj, \"countrySrc\")}\n                search\n              />\n           </div>\n          </FormLayoutGroup>\n         {countrySrcCode != null ? \n          <FormLayoutGroup top=\"Город\">\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\n            <SelectSearch \n              placeholder=\"Выберете город\" \n              options={this.state.cities.filter((el) => el.code != 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \n              value={citySrc} \n              onChange={(value, obj) => this.searchCity(value, obj, \"citySrc\")}\n              search\n            />\n         </div>\n        </FormLayoutGroup>:null\n         }\n         </FormLayout>\n         <datalist id='citySrc'>\n             <option>любой</option>\n            {this.state.data.map((city) => \n             <option value={city.nameTranslations.ru}>{city.code}</option>\n            )}\n          </datalist>\n          <FormLayout>\n          <Header style={{ color: 'var(--accent)' }}>Куда</Header>\n\n          <Select\n  \n            top=\"Часть света\"\n            name=\"continentDst\"\n            onChange={(e) => { this.onChange(e); this.setState({countryDst:'all', cityDst:'all'}, console.log(this.state)) }}\n            value={continentDst}\n          >\n            {\n              Object.keys(CONTINENT_DST).map((continent) => \n                <option value={continent} key={continent}>\n                  {CONTINENT_DST[continent]}\n                </option>\n              )\n            }\n          </Select>\n            {continentDst == null || continentDst == 'all' ? null :\n          <FormLayoutGroup top=\"Страна\">\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\n            <SelectSearch \n              placeholder=\"Выберите страну\" \n              options={this.state.listCountry.filter(city => city.continentCode == continentDst || city.code == 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \n              value={countryDst} \n              onChange={(value, obj) => this.searchCountry(value, obj, \"countryDst\")}\n              search\n            />\n         </div>\n        </FormLayoutGroup>}\n\n          {countryDst == 'all' || countryDst == null || continentDst == 'all' ? null :\n          <FormLayoutGroup top=\"Город\">\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\n            <SelectSearch \n              placeholder=\"Выберите город\" \n              options={this.state.cities.map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \n              value={countryDst} \n              onChange={(value, obj) => this.searchCity(value, obj, \"cityDst\")}\n              search\n            />\n         </div>\n        </FormLayoutGroup>\n            }\n\n\n      <Header>Когда</Header>\n          <Tabs mode=\"buttons\">\n            {datesCnt && (\n              datesCnt.map((item, i) => <TabsItem selected={activeCnt == i} onClick={() => this.setState({ activeCnt: i })}>{(i+1)+\" период\"}</TabsItem>)\n            )}\n            {datesCnt.length < 3 && <TabsItem onClick={this.addFrom}><Icon16Add /></TabsItem>}\n            {datesCnt.length > 1 && <TabsItem onClick={this.removeFrom} ><Icon16Cancel fill=\"rgb(255, 26, 0)\"/></TabsItem>}\n          </Tabs>\n          </FormLayout>\n                <FormLayout key={activeCnt}>\n                  <Select\n                    top={`Год вылета (${activeCnt+1})`}\n                    name=\"year\"\n                    id={activeCnt}\n                    onChange={this.onChangeFrom}\n                    value={datesCnt[activeCnt].year}\n                  >\n                    {\n                      Array.from(Array(31).keys()).map((year) => \n                        <option key={year} value={(new Date()).getFullYear()+year}>\n                          {(new Date()).getFullYear()+year}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  <Select\n                    top={`Время года (${activeCnt+1})`}\n                    name=\"season\"\n                    id={activeCnt}\n                    onChange={this.onChangeFrom}\n                    value={datesCnt[activeCnt].season}\n                  >\n                    {\n                      Object.keys(SEASONS_TRANSCRIPTION).filter((e) => {\n                        let s = e;\n                        let m = new Date().getMonth()+1;\n                      if(new Date().getFullYear() == datesCnt[activeCnt].year) {\n                        if(s == 'all') \n                          return s;\n                        if(s == 'winter' && m <= 12)\n                          return s;\n                        if(s == 'spring' && m <= 5) \n                          return s;\n                        if(s == 'summer' && m <= 8) \n                          return s;\n                        if(s == 'fall' && m <= 11)\n                          return s;\n                      }else return e;\n                      }).map((season) => \n                        <option value={season} key={season}>\n                          {SEASONS_TRANSCRIPTION[season]}\n                        </option>\n                      )\n                    }\n                  </Select>     \n                 <Select\n                    top={`Месяц (${activeCnt+1})`}\n                    name=\"month\"\n                    id={activeCnt}\n                    onChange={this.onChangeFrom}\n                    value={datesCnt[activeCnt].month}\n                  >\n                    {\n                      Object.keys(MONTHS_TRANSCRIPTION).filter((n) => {\n                        if(n == 0) {\n                          return n;\n                        }\n                        let m = new Date().getMonth()+1;\n                       if(new Date().getFullYear() == datesCnt[activeCnt].year) { \n                        switch(datesCnt[activeCnt].season) {\n                          case 'all': \n                            return n;\n                          break;\n\n                          case 'winter':\n                            if((n == 12 && m <= n) || (n == 1 && m <= n) || (n == 2 && m <= n)) {\n                              return n;\n                            }\n                          break;  \n                          case 'summer':\n                            if((n == 6 && m <= n) || (n == 7 && m <= n) || (n == 8 && m <= n)) {\n                              return n;\n                            }\n                          break;  \n                          case 'fall':\n                            if((n == 9 && n >= m) || (n == 10 && n >= m) || (n == 11 && n >= m)) {\n                              return n;\n                            }\n                          break; \n\n                          case 'spring':\n                            if((n == 3 && n >= m) || (n == 4 && n >= m) || (n == 5 && n >= m)) {\n                              return n;\n                            }\n                          break;  \n                        }\n                      }else{\n                        switch(datesCnt[activeCnt].season) {\n                          case 'all': \n                            return n;\n                          break;\n\n                          case 'winter':\n                            if((n == 12 ) || (n == 1) || (n == 2)) {\n                              return n;\n                            }\n                          break;  \n                          case 'summer':\n                            if((n == 6 ) || (n == 7) || (n == 8)) {\n                              return n;\n                            }\n                          break;  \n                          case 'fall':\n                            if((n == 9) || (n == 10) || (n == 11)) {\n                              return n;\n                            }\n                          break; \n\n                          case 'spring':\n                            if((n == 3 ) || (n == 4 ) || (n == 5)) {\n                              return n;\n                            }\n                          break;  \n                        }\n                      }\n                      }).map((month) => \n                        <option value={month} key={month}>\n                          {MONTHS_TRANSCRIPTION[month]}\n                        </option>\n                      )\n                    }\n                  </Select>\n                  </FormLayout>\n              <FormLayout>        \n      \n      <Header style={{ color: 'var(--accent)' }}>Выберите условия</Header>\n          <Select\n            top=\"Получать дешевые авиабилеты один раз в\"\n            name=\"interval\"\n            onChange={this.onChange}\n          >\n            <option value=\"60\">1 час</option>\n            <option value=\"240\">4 часа</option>\n            <option value=\"480\">8 часов</option>\n            <option value=\"1440\">24 часа</option>\n          </Select>\n\n          <Select\n            top=\"Получать информацию за крайние N, часов\"\n            name=\"updated\"\n            onChange={this.onChange}\n            defaultValue=\"60\"\n          >\n      <option value=\"60\">1 час</option>\n      {Number(interval) > 60 ? <option value=\"120\">2 часа</option> : null}\n      {Number(interval) > 60 ? <option value=\"180\">3 часа</option> : null}\n      {Number(interval) > 60 ? <option value=\"240\">4 часа</option> : null}\n      {Number(interval) > 240 ? <option value=\"240\">5 часов</option> : null}\n      {Number(interval) > 240 ? <option value=\"240\">6 часов</option> : null}\n      {Number(interval) > 240 ? <option value=\"240\">7 часов</option> : null}\n      {Number(interval) > 240 ? <option value=\"240\">8 часов</option> : null}\n      </Select>\n\n          <Select\n            top=\"Сколько дешевых авиабилетов показывать в сутки?\"\n            name=\"limit\"\n            defaultValue=\"0\"\n          >\n            <option value=\"0\">все</option>\n            <option value=\"20\">20</option>\n            <option value=\"50\">50</option>\n            <option value=\"100\">100</option>\n            <option value=\"300\">300</option>\n          </Select>\n          \n          <FormLayoutGroup top=\"Направление полетов\">\n            {(forward && dual) &&<SimpleCell after={<Switch name=\"all_flight\" style={checkbox} onChange={(e) => { this.onChangeCheck(e); this.setState({ forward: true, dual:true})}} checked={all_flight} />}>Любое</SimpleCell>}\n            {!all_flight && <SimpleCell after={<Switch name=\"forward\" onChange={this.onChangeCheck} checked={forward} />}>туда</SimpleCell>}\n            {!all_flight && <SimpleCell after={<Switch name=\"dual\" style={checkbox} onChange={this.onChangeCheck} checked={dual} />}>туда-обратно</SimpleCell>}\n          </FormLayoutGroup>  \n            \n          <Select\n            top=\"Пассажиры\"\n            name=\"passengers\"\n            onChange={this.onChange}\n          >\n            {\n              Object.keys(PASSENGERS).map((passengers) => \n                <option value={passengers} key={passengers}>\n                  {PASSENGERS[passengers]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Язык\"\n            name=\"language\"\n            onChange={this.onChange}\n            value={language}\n          >\n            {\n              Object.keys(LANGUAGES).map((language) => \n                <option value={language} key={language}>\n                  {LANGUAGES[language]}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта в билете\"\n            name=\"currency\"\n            onChange={(e) => {this.onChange(e); this.setState({randomCost:true, costMin:CURRENCY[e.currentTarget.value].min, costMax:CURRENCY[e.currentTarget.value].max})}}\n            value={currency}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency].name}\n                </option>\n              )\n            }\n          </Select>\n          <Select\n            top=\"Валюта покупки\"\n            name=\"currencyForUrl\"\n            onChange={this.onChange}\n            value={currencyForUrl}\n          >\n            {\n              Object.keys(CURRENCY).map((currency) => \n                <option value={currency} key={currency}>\n                  {CURRENCY[currency].name}\n                </option>\n              )\n            }\n          </Select>\n\n          <FormLayoutGroup top={\"Выберите минимальную и максимальную стоимость авиабилетов, \" + currency}>\n          \n\n           <SimpleCell after={\n                       <Switch\n                       checked={randomCost}\n                       onChange={(e) => {\n                         this.setState({\n                           costMin: e.currentTarget.checked ? CURRENCY[currency].min : costMin,\n                           costMax: e.currentTarget.checked ? CURRENCY[currency].max : costMax,\n                           randomCost: e.currentTarget.checked\n                         })\n                       }}\n                     />\n           }>любая</SimpleCell>\n            \n           {!randomCost &&\n          <RangeSlider\n            top={costMin + \" - \" + costMax}\n            min={CURRENCY[currency].min}\n            max={CURRENCY[currency].max}\n            step={100}\n            defaultValue={[CURRENCY[currency].min, CURRENCY[currency].max]}\n            value={[costMin, costMax]}\n            onChange={(value) => {\n              this.setState({\n                costMin: value[0],\n                costMax: value[1],\n                randomCost: false\n              })\n            }}\n          />\n          }\n          {!randomCost &&\n          <div style={{ display: 'flex' }}>\n            <Input\n              onFocus={() => {\n                console.log('focus')\n              }}\n              value={costMin}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value < costMax && value >= CURRENCY[currency].min){\n                    this.setState({ costMin: value })\n                  }\n                }\n              }}\n            />\n            <Input\n              value={costMax}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value > costMin && value <= CURRENCY[currency].max){\n                    this.setState({ costMax: value })\n                  }\n                }\n              }}\n            />\n          </div>\n  }\n          </FormLayoutGroup> \n          <Select name='profitability' onChange={this.onChange} top=\"Показывать авиабилеты только с выгодой больше, %\">\n            <option>30</option>\n            <option>40</option>\n            <option>50</option>\n            <option>60</option>\n            <option>70</option>\n            <option>80</option>\n            <option>90</option>\n          </Select>\n          <FormLayoutGroup top=\"Хочу вылететь в определенный день недели\">\n              <SimpleCell after={<Switch checked={this.state.allDays} name='all' onChange={this.onChangeDays} />}>любой</SimpleCell>\n              {!this.state.allDays &&\n              <div>\n                <SimpleCell after={<Switch name='0' onChange={this.onChangeDays} checked={days[0] || this.state.allDays} />}>понедельник</SimpleCell>\n                <SimpleCell after={<Switch name='1' onChange={this.onChangeDays} checked={days[1] || this.state.allDays} />}>вторник</SimpleCell>\n                <SimpleCell after={<Switch name='2' onChange={this.onChangeDays} checked={days[2] || this.state.allDays} />}>среда</SimpleCell>\n                <SimpleCell after={<Switch name='3' onChange={this.onChangeDays} checked={days[3] || this.state.allDays} />}>четверг</SimpleCell>\n                <SimpleCell after={<Switch name='4' onChange={this.onChangeDays} checked={days[4] || this.state.allDays} />}>пятница</SimpleCell>\n                <SimpleCell after={<Switch name='5' onChange={this.onChangeDays} checked={days[5] || this.state.allDays} />}>суббота</SimpleCell>\n                <SimpleCell after={<Switch name='6' onChange={this.onChangeDays} checked={days[6] || this.state.allDays} />}>воскресенье</SimpleCell>\n                \n              \n              \n              \n              \n              \n              \n              </div>\n              }\n          </FormLayoutGroup>  \n          <FormLayoutGroup top=\"Температура воздуха днем в день прилета, C\">\n              <SimpleCell after={          \n          <Switch\n            checked={randomTempDay}\n            onChange={(e) => {\n              this.setState({\n                dayTempMin: e.currentTarget.checked ? -50 : dayTempMin,\n                dayTempMax: e.currentTarget.checked ?  50 : dayTempMax,\n                randomTempDay: e.currentTarget.checked\n              })\n            }}\n          />}>\n                любая\n              </SimpleCell>\n\n            \n         {!randomTempDay &&\n          <RangeSlider\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[dayTempMin, dayTempMax]}\n            onChange={(value) => {\n              this.setState({\n                dayTempMin: value[0],\n                dayTempMax: value[1],\n                randomTempDay: false\n              })\n            }}\n          />\n          }\n          {!randomTempDay &&\n          <div style={{ display: 'flex' }}>\n            <Input\n              onFocus={() => {\n                console.log('focus')\n              }}\n              value={dayTempMin}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value < dayTempMax && value >= -50){\n                    this.setState({ dayTempMin: value })\n                  }\n                }\n              }}\n            />\n            <Input\n              value={dayTempMax}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value > dayTempMin && value <= 50){\n                    this.setState({ dayTempMax: value })\n                  }\n                }\n              }}\n            />\n          </div>\n          }     \n          </FormLayoutGroup>\n          \n          <FormLayoutGroup top=\"Температура воздуха ночью в день прилета, C\">     \n            <SimpleCell after={\n                         <Switch\n                         checked={randomTempNight}\n                         onChange={(e) => {\n                           this.setState({\n                             nighTempMin: e.currentTarget.checked ? -50 : nighTempMin,\n                             nighTempMax: e.currentTarget.checked ?  50 : nighTempMax,\n                             randomTempNight: e.currentTarget.checked\n                           })\n                         }}\n                       />\n            }>любая</SimpleCell>    \n\n          {!randomTempNight &&\n          <RangeSlider\n            min={-50}\n            max={50}\n            step={1}\n            defaultValue={[-50, 50]}\n            value={[nighTempMin, nighTempMax]}\n            onChange={(value) => {\n              this.setState({\n                nighTempMin: value[0],\n                nighTempMax: value[1],\n                randomTempNight: false\n              })\n            }}\n          />\n          }\n          {!randomTempNight && \n           <div style={{ display: 'flex' }}>\n            <Input\n              onFocus={() => {\n                console.log('focus')\n              }}\n              value={nighTempMin}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value < nighTempMin && value >= -50){\n                    this.setState({ nighTempMin: value })\n                  }\n                }\n              }}\n            />\n            <Input\n              value={nighTempMax}\n              type=\"number\"\n              onChange={(e) => {\n                const value = parseInt(e.currentTarget.value, 10)\n                if(value){\n                  if(value > nighTempMax && value <= 50){\n                    this.setState({ nighTempMax: value })\n                  }\n                }\n              }}\n            />\n          </div>\n            }\n          </FormLayoutGroup>\n          <Button mode='primary' size='xl' onClick={this.sort_res}>Подписаться</Button>\n          <Button style={{ border: '1px solid var(--accent)'}} href='https://www.booking.com/?aid=1540284' size='xl' target='_blank' mode='secondary'>Выбрать отель на booking.com</Button>\n        </FormLayout>\n        {this.state.snackbar}\n      </Panel>\n    )\n  }\n}\n\nexport default Settings \n","\r\nimport React, { Component } from 'react'\r\nimport SnackbarError from '../components/SnackbarError'; \r\nimport { Panel, PanelHeader, FormLayout, Header, Input, Select, FormLayoutGroup, Button, Div, RangeSlider, SelectMimicry, ScreenSpinner, SimpleCell, Cell, Switch, PanelHeaderBack, Tabs, TabsItem, Separator } from '@vkontakte/vkui'\r\nimport Icon16Add from '@vkontakte/icons/dist/16/add';\r\nimport Icon16Cancel from '@vkontakte/icons/dist/16/cancel';\r\n\r\nimport SelectSearch from 'react-select-search';\r\n\r\nconst checkbox = {\r\n  paddingTop:0, paddingBottom:0\r\n}\r\n\r\nconst SEASONS_TRANSCRIPTION = {\r\n  'all': 'любое',\r\n  'winter': 'зима',\r\n  'spring': 'весна',\r\n  'summer': 'лето',\r\n  'fall': 'осень',\r\n};\r\n\r\nconst MONTHS_TRANSCRIPTION = {\r\n  0: 'любой',\r\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\r\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\r\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\r\n};\r\n\r\nconst CONTINENT_DST = {\r\n  all:\"любая\",\r\n  E:'Европа',\r\n  F:\"Африка\",\r\n  D:'Океания',\r\n  A:\"Азия\",\r\n  S:\"Южная Америка\",\r\n  N:\"Северная Америка\"\r\n}\r\n\r\nconst LANGUAGES = {\r\n  de: \"немецкий\",\r\n  en: \"английский\",\r\n  es: \"испанский\",\r\n  fr: \"французский\",\r\n  it: \"итальянский\",\r\n  ru: \"русский\",\r\n  th: \"тайский\",\r\n  tr: \"турецкий\"\r\n}\r\n\r\nconst CURRENCY = {\r\n  AZN: {name:\"манат\", min:5, max:7000},\r\n  BYN: {name:\"беларусский рубль\", min:10, max:10000},\r\n  CNY: {name:\"юань\", min:10, max:30000},\r\n  EUR: {name:\"евро\", min:1, max:4000},\r\n  KGS: {name:\"сом\", min:100, max:300000},\r\n  KZT: {name:\"тенге\", min:500, max:1500000},\r\n  RUB: {name:\"рубль\", min:100, max:300000},\r\n  THB: {name:\"бат\", min:10, max:150000},\r\n  UAH: {name:\"гривна\", min:50, max:100000},\r\n  USD: {name:\"доллар\", min:1, max:5000},\r\n  UZS: {name:\"сум\", min:500, max:500000}\r\n}\r\n\r\nconst PASSENGERS = {\r\n  url: \"1 пассажир, экономкласс\",\r\n  url2Passengers: \"2 пассажира, экономкласс\",\r\n  url1Business: \"1 пассажир, бизнес-класс\",\r\n  urlForma: \"другой вариант\"\r\n}\r\n\r\nexport class EditSettings extends Component {\r\n\r\n  state = {\r\n    data:[],\r\n    listCountry:[],\r\n    cityDstList:[],\r\n    citySrcList:[],\r\n    continentDst:this.props.state.form.continentDst,\r\n    updated: this.props.state.form.updated,\r\n    countrySrcCode: this.props.state.form.countrySrc,\r\n    citySrcCode: this.props.state.form.citySrc,\r\n    countryDstCode: this.props.state.form.countryDst,\r\n    cityDstCode: this.props.state.form.cityDst,\r\n    limit: this.props.state.form.limit,\r\n    datesCnt: this.props.state.form.dates,\r\n    language: this.props.state.form.language,\r\n    profitability:this.props.state.form.profitability,\r\n    currency: this.props.state.form.currency,\r\n    currencyForUrl: this.props.state.form.currencyForUrl,\r\n    passengers:this.props.state.form.passengers,\r\n    randomCost:this.props.state.form.randomCost,\r\n    costMin: this.props.state.form.costMin,\r\n    costMax: this.props.state.form.costMax,\r\n    dayTempMin: this.props.state.form['dayTemp.min'],\r\n    dayTempMax: this.props.state.form['dayTemp.max'],\r\n    interval: this.props.state.form.interval,\r\n    nighTempMin:this.props.state.form['nightTemp.min'],\r\n    nighTempMax:this.props.state.form['nightTemp.max'],\r\n    dual:this.props.state.form.dual,\r\n    forward:this.props.state.form.forward,\r\n    days:this.props.state.form.days,\r\n    allDays:(this.props.state.form.days.indexOf(false) == -1 ? true : false),\r\n    all_flight:(this.props.state.form.dual && this.props.state.form.forward),\r\n    randomTempDay:(this.props.state.form['dayTemp.min'] == -50 && this.props.state.form['dayTemp.max'] == 50),\r\n    randomTempNight:(this.props.state.form['nightTemp.min'] == -50 && this.props.state.form['nightTemp.max'] == 50),\r\n    activeCnt:0,\r\n    snackbar:null\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setPopout(<ScreenSpinner />);\r\n    fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Countries`)\r\n    .then(response => response.json())\r\n    .then(listCountry => {\r\n        listCountry.unshift({code:'all', nameTranslations:{ru:\"любая\"}})\r\n        let s = listCountry.filter(country => country.nameTranslations.ru.indexOf(this.state.countrySrcCode) > -1)[0];\r\n        console.log(s, this.state);\r\n        fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Cities/byCountry/`+s.code)\r\n          .then(response => response.json())\r\n          .then(cities => {\r\n              cities.unshift({code:'all', nameTranslations:{ru:\"любая\"}})\r\n              let n = cities.filter(city => city.nameTranslations.ru != null && city.nameTranslations.ru.indexOf(this.state.citySrcCode) > -1)[0];\r\n              console.log(n);\r\n              this.setState({ listCountry, citySrcList:cities, countrySrc:s.code,  countrySrcCode:s.nameTranslations.ru, citySrc:n.code, citySrcCode:n.nameTranslations.ru});\r\n              \r\n              if(this.state.countryDstCode != null) {\r\n                let i = listCountry.filter(country => country.nameTranslations.ru.indexOf(this.state.countryDstCode) > -1)[0];\r\n                fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Cities/byCountry/`+i.code)\r\n                .then(response => response.json())\r\n                .then(cities => {\r\n                    cities.unshift({code:'all', nameTranslations:{ru:\"любая\"}})\r\n                    let p = cities.filter(city => city.nameTranslations.ru != null && city.nameTranslations.ru.indexOf(this.state.citySrcCode) > -1)[0];\r\n                    console.log(n);\r\n                    this.setState({ listCountry, cityDstList:cities, countryDst:i.code,  countryDstCode:i.nameTranslations.ru, cityDst:p.code, cityDstCode:p.nameTranslations.ru});\r\n                  \r\n                })\r\n              } \r\n              this.props.setPopout(null)\r\n        })\r\n    })\r\n\r\n    /**/\r\n  }\r\n  \r\n\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  onChangeFrom = e => {\r\n    const { datesCnt } = this.state\r\n    datesCnt[parseInt(e.currentTarget.id, 10)][e.currentTarget.name] = e.currentTarget.value\r\n    this.setState({\r\n      datesCnt\r\n    })\r\n  }\r\n\r\n  addFrom = () => {\r\n    const { datesCnt } = this.state\r\n    datesCnt.push({\r\n      yearSrc: (new Date()).getFullYear(),\r\n      seasonSrc: SEASONS_TRANSCRIPTION['all'],\r\n      monthSrc: MONTHS_TRANSCRIPTION['0']\r\n    })\r\n    this.setState({\r\n      datesCnt\r\n    })\r\n  }\r\n\r\n  removeFrom = () => {\r\n    const { datesCnt } = this.state\r\n    this.setState({\r\n      datesCnt: datesCnt.splice(0, datesCnt.length-1)\r\n    })\r\n  }\r\n\r\n  onChangeDays = (e) => {\r\n    console.log(e.currentTarget.name);\r\n    if(e.currentTarget.name == 'all') {\r\n      this.setState({ allDays:!this.state.allDays});\r\n    }else{\r\n      let bool = !this.state.days[Number(e.currentTarget.name)];\r\n      let days = this.state.days.splice([Number(e.currentTarget.name)], 1, bool);\r\n      console.log(this.state.days);\r\n      \r\n      let t = true;\r\n      this.state.days.forEach(e => {\r\n        if(!e) t = false\r\n      })\r\n      this.setState({ days:this.state.days, allDays:t });\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  sort_res = () => { \r\n    this.props.setPopout(<ScreenSpinner />)\r\n    const { user } = this.props.state;\r\n    const { citySrcCode, cityDstCode, countryDstCode, countrySrcCode,citySrc, cityDst, countryDst, countrySrc, costMax, costMin, currency,currencyForUrl,language, randomCost, dual,forward, datesCnt, profitability, dayTempMin, dayTempMax, nighTempMax, nighTempMin,passengers, updated, interval, limit, continentDst } = this.state;\r\n    let days;\r\n    if(this.state.allDays) {\r\n      days = [true, true, true, true, true, true, true];\r\n    }else{\r\n      days = this.state.days;\r\n    }\r\n    let output = {\r\n      citySrc:citySrcCode, \r\n      cityDst:cityDstCode,\r\n      countryDst:countryDstCode,\r\n      countrySrc:countrySrcCode,\r\n      continentDst,\r\n      costMax, \r\n      costMin,\r\n      currency,\r\n      currencyForUrl, \r\n      language,\r\n      randomCost,\r\n      forward,\r\n      dual,\r\n      passengers,\r\n      updated:Number(updated),\r\n      limit,\r\n      interval,\r\n      optional:true,\r\n      dates:datesCnt,\r\n      showAddionalWeather:true,\r\n      profitability:String(profitability),\r\n      ['nightTemp.max']:nighTempMax,\r\n      ['nightTemp.min']:nighTempMin,\r\n      ['dayTemp.max']:dayTempMax,\r\n      ['dayTemp.min']:dayTempMin,\r\n      days\r\n    }\r\n\r\n    let src_name;\r\n    let dst_name;\r\n    fetch(` https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20191125T185829Z.bafa3ff776a2185a.64a334987cf74f3b022d5c07a4b67f2247dbc05b&lang=ru-en&text=${citySrcCode}`)\r\n    .then(response => response.json())\r\n    .then(res => {\r\n      src_name = res.text;\r\n      fetch(` https://translate.yandex.net/api/v1.5/tr.json/translate?key=trnsl.1.1.20191125T185829Z.bafa3ff776a2185a.64a334987cf74f3b022d5c07a4b67f2247dbc05b&lang=ru-en&text=${cityDstCode}`)\r\n      .then(response => response.json())\r\n      .then(res => {\r\n        dst_name = res.text;\r\n        let content = {\r\n          ['src.CountryCode']:countrySrc,\r\n          ['src.name']:src_name,\r\n          ['dst.name']:dst_name,\r\n          ['Discount']:{ ['$gte']:profitability},\r\n          ['SrcDayOfWeek']:{['$in']:days.map((item, i) => { if(item == true) return i})},\r\n          ['Dst.CountryCode']:(countryDst == 'all' ? null : countryDst),\r\n          ['Price']:{['$gte']:costMin, ['$lte']:costMax},\r\n          ['Temp.Max']:{['$gte']:dayTempMin, ['$lte']:dayTempMax},\r\n          ['Temp.Min']:{['$gte']:nighTempMin, ['$lte']:nighTempMax},\r\n          ['Dst.continentCode']:continentDst,\r\n        }\r\n        let obj = {\r\n          id:this.props.state.form.id,\r\n          interval:interval,\r\n          limit:limit,\r\n          updated:Number(updated),\r\n          user_id:user.id,\r\n          output,\r\n          content\r\n        }\r\n        //this.save_request(obj);\r\n        this.props.onChangeGroups('item', obj);\r\n        this.props.openModal('confirm_settings');\r\n        this.props.setPopout(null);\r\n      })\r\n    })\r\n  }\r\n\r\n// автокомплит стран\r\nsearchCountry = (value, obj, name) => { // автокомплит\r\n  let type = 'citySrc';\r\n  if(name == 'countryDst') type = 'cityDst';\r\n  this.setState({ [name]: value, [type]:null });\r\n  this.props.setPopout(<ScreenSpinner />)\r\n  if(value !== 'all') {\r\n  fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Cities/byCountry/${value}`)\r\n  .then(response => response.json())\r\n  .then(list => {\r\n    list.unshift({code:'all', nameTranslations:{ ru: \"любой\"}})\r\n    let nameCountry = name+\"Code\";\r\n    let nameList = type+\"List\";\r\n    this.setState({[nameList]:list, [nameCountry]: obj.name})\r\n})\r\n}\r\nthis.props.setPopout(null)\r\n}\r\n\r\n//// автокомплит городов\r\nsearchCity = (value, obj, name) => {\r\nlet nameCity = name+\"Code\";\r\nthis.setState({ [name]: value, [nameCity]: obj.name});\r\nconsole.log(this.state)\r\n}\r\n\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      state\r\n    } = this.props\r\n    const {\r\n      datesCnt,\r\n      currency,\r\n      currencyForUrl,\r\n      language,\r\n      countrySrc,\r\n      countrySrcCode,\r\n      countryDstCode,\r\n      citySrc,\r\n      countryDst,\r\n      cityDst,\r\n      continentDst,\r\n      randomCost,\r\n      randomTempDay,\r\n      randomTempNight,\r\n      costMin,\r\n      costMax,\r\n      dayTempMin,\r\n      dayTempMax,\r\n      nighTempMax,\r\n      nighTempMin,\r\n      days,\r\n      dual,\r\n      updated,\r\n      interval,\r\n      forward,\r\n      activeCnt,\r\n      all_flight\r\n    } = this.state\r\n    return (\r\n      <Panel id={id}>\r\n        <PanelHeader left={<PanelHeaderBack onClick={() => this.props.go('home')}/>}>Параметры</PanelHeader>\r\n        <FormLayout>\r\n        <Header style={{ color: 'var(--accent)' }}>Откуда</Header>\r\n          <FormLayoutGroup top=\"Страна\">\r\n            <div align=\"left\" style={{ padding:\"0 12px\"}}>\r\n              <SelectSearch \r\n                placeholder=\"Выберете страну\" \r\n                options={this.state.listCountry.filter((el) => el.code != 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \r\n                value={countrySrc} \r\n                onChange={(value, obj) => this.searchCountry(value, obj, \"countrySrc\")}\r\n                search\r\n              />\r\n           </div>\r\n          </FormLayoutGroup>\r\n         {countrySrcCode != null ? \r\n          <FormLayoutGroup top=\"Город\">\r\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\r\n            <SelectSearch \r\n              placeholder=\"Выберете город\" \r\n              options={this.state.citySrcList.filter((el) => el.code != 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \r\n              value={citySrc} \r\n              onChange={(value, obj) => this.searchCity(value, obj, \"citySrc\")}\r\n              search\r\n            />\r\n         </div>\r\n        </FormLayoutGroup>:null\r\n         }\r\n         </FormLayout>\r\n         <datalist id='citySrc'>\r\n             <option>любой</option>\r\n            {this.state.data.map((city) => \r\n             <option value={city.nameTranslations.ru}>{city.code}</option>\r\n            )}\r\n          </datalist>\r\n          <FormLayout>\r\n          <Header style={{ color: 'var(--accent)' }}>Куда</Header>\r\n\r\n          <Select\r\n  \r\n            top=\"Часть света\"\r\n            name=\"continentDst\"\r\n            onChange={(e) => { this.onChange(e); this.setState({countryDst:'all', cityDst:'all'}, console.log(this.state)) }}\r\n            value={continentDst}\r\n          >\r\n            {\r\n              Object.keys(CONTINENT_DST).map((continent) => \r\n                <option value={continent} key={continent}>\r\n                  {CONTINENT_DST[continent]}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n            {continentDst == null || continentDst == 'all' ? null :\r\n          <FormLayoutGroup top=\"Страна\">\r\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\r\n            <SelectSearch \r\n              placeholder=\"Выберете страну\" \r\n              options={this.state.listCountry.filter(city => city.continentCode == continentDst || city.code == 'all').map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \r\n              value={countryDst} \r\n              onChange={(value, obj) => this.searchCountry(value, obj, \"countryDst\")}\r\n              search\r\n            />\r\n         </div>\r\n        </FormLayoutGroup>}\r\n\r\n          {countryDst == 'all' || countryDst == null || continentDst == 'all' ? null :\r\n          <FormLayoutGroup top=\"Город\">\r\n          <div align=\"left\" style={{ padding:\"0 12px\"}}>\r\n            <SelectSearch \r\n              options={this.state.cityDstList.map((el, i) => {return {name: el.nameTranslations.ru, value: el.code}})} \r\n              value={countryDst} \r\n              onChange={(value, obj) => this.searchCity(value, obj, \"cityDst\")}\r\n              search\r\n            />\r\n         </div>\r\n        </FormLayoutGroup>\r\n            }\r\n      \r\n      <Header style={{ color: 'var(--accent)' }}>Выберите условия</Header>\r\n          <Select\r\n            top=\"Получать дешевые авиабилеты один раз в\"\r\n            name=\"interval\"\r\n            onChange={this.onChange}\r\n          >\r\n            <option value=\"60\">1 час</option>\r\n            <option value=\"240\">4 часа</option>\r\n            <option value=\"480\">8 часов</option>\r\n            <option value=\"1440\">24 часа</option>\r\n          </Select>\r\n\r\n          <Select\r\n            top=\"Получать информацию за крайние N, часов\"\r\n            name=\"updated\"\r\n            onChange={this.onChange}\r\n            defaultValue=\"60\"\r\n          >\r\n      <option value=\"60\">1 час</option>\r\n      {Number(interval) > 60 ? <option value=\"120\">2 часа</option> : null}\r\n      {Number(interval) > 60 ? <option value=\"180\">3 часа</option> : null}\r\n      {Number(interval) > 60 ? <option value=\"240\">4 часа</option> : null}\r\n      {Number(interval) > 240 ? <option value=\"240\">5 часов</option> : null}\r\n      {Number(interval) > 240 ? <option value=\"240\">6 часов</option> : null}\r\n      {Number(interval) > 240 ? <option value=\"240\">7 часов</option> : null}\r\n      {Number(interval) > 240 ? <option value=\"240\">8 часов</option> : null}\r\n      </Select>\r\n\r\n          <Select\r\n            top=\"Сколько дешевых авиабилетов показывать в сутки?\"\r\n            name=\"limit\"\r\n            defaultValue=\"0\"\r\n          >\r\n            <option value=\"0\">все</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"50\">50</option>\r\n            <option value=\"100\">100</option>\r\n            <option value=\"300\">300</option>\r\n          </Select>\r\n          \r\n          <FormLayoutGroup top=\"Направление полетов\">\r\n            {(forward && dual) &&<SimpleCell after={<Switch name=\"all_flight\" style={checkbox} onChange={(e) => { this.onChangeCheck(e); this.setState({ forward: true, dual:true})}} checked={all_flight} />}>Любое</SimpleCell>}\r\n            {!all_flight && <SimpleCell after={<Switch name=\"forward\" onChange={this.onChangeCheck} checked={forward} />}>туда</SimpleCell>}\r\n            {!all_flight && <SimpleCell after={<Switch name=\"dual\" style={checkbox} onChange={this.onChangeCheck} checked={dual} />}>туда-обратно</SimpleCell>}\r\n          </FormLayoutGroup>\r\n          <Tabs mode=\"buttons\">\r\n            {datesCnt && (\r\n              datesCnt.map((item, i) => <TabsItem selected={activeCnt == i} onClick={() => this.setState({ activeCnt: i })}>{(i+1)+\" период\"}</TabsItem>)\r\n            )}\r\n            {datesCnt.length < 3 && <TabsItem onClick={this.addFrom}><Icon16Add /></TabsItem>}\r\n            {datesCnt.length > 1 && <TabsItem onClick={this.removeFrom} ><Icon16Cancel fill=\"rgb(255, 26, 0)\"/></TabsItem>}\r\n          </Tabs>\r\n          </FormLayout>\r\n                <FormLayout key={activeCnt}>\r\n                  <Select\r\n                    top={`Год вылета (${activeCnt+1})`}\r\n                    name=\"year\"\r\n                    id={activeCnt}\r\n                    onChange={this.onChangeFrom}\r\n                    value={datesCnt[activeCnt].year}\r\n                  >\r\n                    {\r\n                      Array.from(Array(31).keys()).map((year) => \r\n                        <option key={year} value={(new Date()).getFullYear()+year}>\r\n                          {(new Date()).getFullYear()+year}\r\n                        </option>\r\n                      )\r\n                    }\r\n                  </Select>\r\n                  <Select\r\n                    top={`Время года (${activeCnt+1})`}\r\n                    name=\"season\"\r\n                    id={activeCnt}\r\n                    onChange={this.onChangeFrom}\r\n                    value={datesCnt[activeCnt].season}\r\n                  >\r\n                    {\r\n                      Object.keys(SEASONS_TRANSCRIPTION).filter((e) => {\r\n                        let s = e;\r\n                        let m = new Date().getMonth()+1;\r\n                      if(new Date().getFullYear() == datesCnt[activeCnt].year) {\r\n                        if(s == 'all') \r\n                          return s;\r\n                        if(s == 'winter' && m <= 12)\r\n                          return s;\r\n                        if(s == 'spring' && m <= 5) \r\n                          return s;\r\n                        if(s == 'summer' && m <= 8) \r\n                          return s;\r\n                        if(s == 'fall' && m <= 11)\r\n                          return s;\r\n                      }else return e;\r\n                      }).map((season) => \r\n                        <option value={season} key={season}>\r\n                          {SEASONS_TRANSCRIPTION[season]}\r\n                        </option>\r\n                      )\r\n                    }\r\n                  </Select>     \r\n                 <Select\r\n                    top={`Месяц (${activeCnt+1})`}\r\n                    name=\"month\"\r\n                    id={activeCnt}\r\n                    onChange={this.onChangeFrom}\r\n                    value={datesCnt[activeCnt].month}\r\n                  >\r\n                    {\r\n                      Object.keys(MONTHS_TRANSCRIPTION).filter((n) => {\r\n                        if(n == 0) {\r\n                          return n;\r\n                        }\r\n                        let m = new Date().getMonth()+1;\r\n                       if(new Date().getFullYear() == datesCnt[activeCnt].year) { \r\n                        switch(datesCnt[activeCnt].season) {\r\n                          case 'all': \r\n                            return n;\r\n                          break;\r\n\r\n                          case 'winter':\r\n                            if((n == 12 && m <= n) || (n == 1 && m <= n) || (n == 2 && m <= n)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                          case 'summer':\r\n                            if((n == 6 && m <= n) || (n == 7 && m <= n) || (n == 8 && m <= n)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                          case 'fall':\r\n                            if((n == 9 && n >= m) || (n == 10 && n >= m) || (n == 11 && n >= m)) {\r\n                              return n;\r\n                            }\r\n                          break; \r\n\r\n                          case 'spring':\r\n                            if((n == 3 && n >= m) || (n == 4 && n >= m) || (n == 5 && n >= m)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                        }\r\n                      }else{\r\n                        switch(datesCnt[activeCnt].season) {\r\n                          case 'all': \r\n                            return n;\r\n                          break;\r\n\r\n                          case 'winter':\r\n                            if((n == 12 ) || (n == 1) || (n == 2)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                          case 'summer':\r\n                            if((n == 6 ) || (n == 7) || (n == 8)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                          case 'fall':\r\n                            if((n == 9) || (n == 10) || (n == 11)) {\r\n                              return n;\r\n                            }\r\n                          break; \r\n\r\n                          case 'spring':\r\n                            if((n == 3 ) || (n == 4 ) || (n == 5)) {\r\n                              return n;\r\n                            }\r\n                          break;  \r\n                        }\r\n                      }\r\n                      }).map((month) => \r\n                        <option value={month} key={month}>\r\n                          {MONTHS_TRANSCRIPTION[month]}\r\n                        </option>\r\n                      )\r\n                    }\r\n                  </Select>\r\n                  </FormLayout>\r\n              <FormLayout>    \r\n              <Separator />\r\n          <Select\r\n            top=\"Пассажиры\"\r\n            name=\"passengers\"\r\n            onChange={this.onChange}\r\n          >\r\n            {\r\n              Object.keys(PASSENGERS).map((passengers) => \r\n                <option value={passengers} key={passengers}>\r\n                  {PASSENGERS[passengers]}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n          <Select\r\n            top=\"Язык\"\r\n            name=\"language\"\r\n            onChange={this.onChange}\r\n            value={language}\r\n          >\r\n            {\r\n              Object.keys(LANGUAGES).map((language) => \r\n                <option value={language} key={language}>\r\n                  {LANGUAGES[language]}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n          <Select\r\n            top=\"Валюта в билете\"\r\n            name=\"currency\"\r\n            onChange={(e) => {this.onChange(e); this.setState({randomCost:true, costMin:CURRENCY[e.currentTarget.value].min, costMax:CURRENCY[e.currentTarget.value].max})}}\r\n            value={currency}\r\n          >\r\n            {\r\n              Object.keys(CURRENCY).map((currency) => \r\n                <option value={currency} key={currency}>\r\n                  {CURRENCY[currency].name}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n          <Select\r\n            top=\"Валюта покупки\"\r\n            name=\"currencyForUrl\"\r\n            onChange={this.onChange}\r\n            value={currencyForUrl}\r\n          >\r\n            {\r\n              Object.keys(CURRENCY).map((currency) => \r\n                <option value={currency} key={currency}>\r\n                  {CURRENCY[currency].name}\r\n                </option>\r\n              )\r\n            }\r\n          </Select>\r\n\r\n          <FormLayoutGroup top={\"Выберите минимальную и максимальную стоимость авиабилетов, \" + currency}>\r\n          \r\n\r\n           <SimpleCell after={\r\n                       <Switch\r\n                       checked={randomCost}\r\n                       onChange={(e) => {\r\n                         this.setState({\r\n                           costMin: e.currentTarget.checked ? CURRENCY[currency].min : costMin,\r\n                           costMax: e.currentTarget.checked ? CURRENCY[currency].max : costMax,\r\n                           randomCost: e.currentTarget.checked\r\n                         })\r\n                       }}\r\n                     />\r\n           }>любая</SimpleCell>\r\n            \r\n           {!randomCost &&\r\n          <RangeSlider\r\n            top={costMin + \" - \" + costMax}\r\n            min={CURRENCY[currency].min}\r\n            max={CURRENCY[currency].max}\r\n            step={100}\r\n            defaultValue={[CURRENCY[currency].min, CURRENCY[currency].max]}\r\n            value={[costMin, costMax]}\r\n            onChange={(value) => {\r\n              this.setState({\r\n                costMin: value[0],\r\n                costMax: value[1],\r\n                randomCost: false\r\n              })\r\n            }}\r\n          />\r\n          }\r\n          {!randomCost &&\r\n          <div style={{ display: 'flex' }}>\r\n            <Input\r\n              onFocus={() => {\r\n                console.log('focus')\r\n              }}\r\n              value={costMin}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value < costMax && value >= CURRENCY[currency].min){\r\n                    this.setState({ costMin: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Input\r\n              value={costMax}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value > costMin && value <= CURRENCY[currency].max){\r\n                    this.setState({ costMax: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n  }\r\n          </FormLayoutGroup> \r\n          <Select name='profitability' onChange={this.onChange} top=\"Показывать авиабилеты только с выгодой больше, %\">\r\n            <option>30</option>\r\n            <option>40</option>\r\n            <option>50</option>\r\n            <option>60</option>\r\n            <option>70</option>\r\n            <option>80</option>\r\n            <option>90</option>\r\n          </Select>\r\n          <FormLayoutGroup top=\"Хочу вылететь в определенный день недели\">\r\n              <SimpleCell after={<Switch checked={this.state.allDays} name='all' onChange={this.onChangeDays} />}>любой</SimpleCell>\r\n              {!this.state.allDays &&\r\n              <div>\r\n                <SimpleCell after={<Switch name='0' onChange={this.onChangeDays} checked={days[0] || this.state.allDays} />}>понедельник</SimpleCell>\r\n                <SimpleCell after={<Switch name='1' onChange={this.onChangeDays} checked={days[1] || this.state.allDays} />}>вторник</SimpleCell>\r\n                <SimpleCell after={<Switch name='2' onChange={this.onChangeDays} checked={days[2] || this.state.allDays} />}>среда</SimpleCell>\r\n                <SimpleCell after={<Switch name='3' onChange={this.onChangeDays} checked={days[3] || this.state.allDays} />}>четверг</SimpleCell>\r\n                <SimpleCell after={<Switch name='4' onChange={this.onChangeDays} checked={days[4] || this.state.allDays} />}>пятница</SimpleCell>\r\n                <SimpleCell after={<Switch name='5' onChange={this.onChangeDays} checked={days[5] || this.state.allDays} />}>суббота</SimpleCell>\r\n                <SimpleCell after={<Switch name='6' onChange={this.onChangeDays} checked={days[6] || this.state.allDays} />}>воскресенье</SimpleCell>\r\n                \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              \r\n              </div>\r\n              }\r\n          </FormLayoutGroup>  \r\n          <FormLayoutGroup top=\"Температура воздуха днем в день прилета, C\">\r\n              <SimpleCell after={          \r\n          <Switch\r\n            checked={randomTempDay}\r\n            onChange={(e) => {\r\n              this.setState({\r\n                dayTempMin: e.currentTarget.checked ? -50 : dayTempMin,\r\n                dayTempMax: e.currentTarget.checked ?  50 : dayTempMax,\r\n                randomTempDay: e.currentTarget.checked\r\n              })\r\n            }}\r\n          />}>\r\n                любая\r\n              </SimpleCell>\r\n\r\n            \r\n         {!randomTempDay &&\r\n          <RangeSlider\r\n            min={-50}\r\n            max={50}\r\n            step={1}\r\n            defaultValue={[-50, 50]}\r\n            value={[dayTempMin, dayTempMax]}\r\n            onChange={(value) => {\r\n              this.setState({\r\n                dayTempMin: value[0],\r\n                dayTempMax: value[1],\r\n                randomTempDay: false\r\n              })\r\n            }}\r\n          />\r\n          }\r\n          {!randomTempDay &&\r\n          <div style={{ display: 'flex' }}>\r\n            <Input\r\n              onFocus={() => {\r\n                console.log('focus')\r\n              }}\r\n              value={dayTempMin}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value < dayTempMax && value >= -50){\r\n                    this.setState({ dayTempMin: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Input\r\n              value={dayTempMax}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value > dayTempMin && value <= 50){\r\n                    this.setState({ dayTempMax: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          }     \r\n          </FormLayoutGroup>\r\n          \r\n          <FormLayoutGroup top=\"Температура воздуха ночью в день прилета, C\">     \r\n            <SimpleCell after={\r\n                         <Switch\r\n                         checked={randomTempNight}\r\n                         onChange={(e) => {\r\n                           this.setState({\r\n                             nighTempMin: e.currentTarget.checked ? -50 : nighTempMin,\r\n                             nighTempMax: e.currentTarget.checked ?  50 : nighTempMax,\r\n                             randomTempNight: e.currentTarget.checked\r\n                           })\r\n                         }}\r\n                       />\r\n            }>любая</SimpleCell>    \r\n\r\n          {!randomTempNight &&\r\n          <RangeSlider\r\n            min={-50}\r\n            max={50}\r\n            step={1}\r\n            defaultValue={[-50, 50]}\r\n            value={[nighTempMin, nighTempMax]}\r\n            onChange={(value) => {\r\n              this.setState({\r\n                nighTempMin: value[0],\r\n                nighTempMax: value[1],\r\n                randomTempNight: false\r\n              })\r\n            }}\r\n          />\r\n          }\r\n          {!randomTempNight && \r\n           <div style={{ display: 'flex' }}>\r\n            <Input\r\n              onFocus={() => {\r\n                console.log('focus')\r\n              }}\r\n              value={nighTempMin}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value < nighTempMin && value >= -50){\r\n                    this.setState({ nighTempMin: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n            <Input\r\n              value={nighTempMax}\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                const value = parseInt(e.currentTarget.value, 10)\r\n                if(value){\r\n                  if(value > nighTempMax && value <= 50){\r\n                    this.setState({ nighTempMax: value })\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n            }\r\n          </FormLayoutGroup>\r\n          <Button mode='primary' size='xl' onClick={this.sort_res}>Подписаться</Button>\r\n          <Button style={{ border: '1px solid var(--accent)'}} href='https://www.booking.com/?aid=1540284' size='xl' target='_blank' mode='secondary'>Выбрать отель на booking.com</Button>\r\n        </FormLayout>\r\n        {this.state.snackbar}\r\n      </Panel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditSettings \r\n","import React, { Component } from 'react'\r\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport class ChooseCity extends Component {\r\n  state = {\r\n    inp: this.props.default,\r\n    list:null\r\n  }\r\n\r\n  onChange = (e) => {\r\n    let country = \"\";\r\n    if(this.props.changeDefaultName == 'citySrc') \r\n        country = this.props.state.countrySrc;\r\n    if(this.props.changeDefaultName == 'cityDst') \r\n        country = this.props.state.countryDst;\r\n    if(this.props.changeDefaultName == 'city_')\r\n        country = this.props.state.user.country.title;\r\n    console.log(this.props.state);        \r\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${country} ${\r\n      e.currentTarget.value\r\n    }&locale=ru&types[]=city`)\r\n    .then(response => response.json())\r\n    .then(list => {\r\n      if(list.length > 0){\r\n        var resArr = [];\r\n        list.forEach(function(item){\r\n          if(item.country_name === country){\r\n            resArr.push(item);\r\n          }\r\n        });\r\n        this.setState({\r\n          list: resArr\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  onChoose = (name) => {\r\n    this.props.changeFunction(name);\r\n    this.props.back()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list\r\n    } = this.state\r\n    const {\r\n      id,\r\n      back,\r\n      text\r\n    } = this.props\r\n    return (\r\n      <Panel id={id}>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack onClick={back} />\r\n          }\r\n        >{text}</PanelHeader>\r\n        <Div>\r\n          <Input\r\n            onChange={this.onChange}\r\n          />\r\n        </Div>\r\n        {list === null ? \r\n        <Placeholder>Начните вводить название города</Placeholder>:\r\n        <List>\r\n          {\r\n            list && list.map((item, i) => \r\n              <SimpleCell\r\n                onClick={() => this.onChoose(item.name)}\r\n                id={item.name}\r\n                key={i}\r\n                after={\r\n                  item.name === text && (\r\n                    <Icon24Done />\r\n                  )\r\n                }\r\n              >\r\n                {item.name}\r\n              </SimpleCell>\r\n            )\r\n          }\r\n        </List>\r\n      }\r\n      </Panel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseCity\r\n","import React, { Component } from 'react'\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\n\nexport class ChooseCountry extends Component {\n  state = {\n    inp: this.props.default,\n    list:null\n  }\n\n  onChange = (e) => {\n    fetch(`https://autocomplete.travelpayouts.com/places2?term=${\n      e.currentTarget.value\n    }&locale=ru`)\n    .then(response => response.json())\n    .then(list => {\n      if(list.length > 0){\n        var resArr = [];\n        list.forEach(function(item){\n          var i = resArr.findIndex(x => x.country_name === item.country_name);\n          if(i <= -1){\n            resArr.push(item);\n          }\n        });\n        this.setState({\n          list: resArr\n        })\n      }\n    })\n  }\n\n  onChoose = (country_name) => {\n    this.props.changeFunction(country_name);\n    this.props.back()\n  }\n\n  render() {\n    const {\n      list\n    } = this.state\n    const {\n      id,\n      back,\n      text\n    } = this.props\n    return (\n      <Panel id={id}>\n        <PanelHeader\n          left={\n            <PanelHeaderBack onClick={back} />\n          }\n        >{text}</PanelHeader>\n        <Div>\n          <Input\n            onChange={this.onChange}\n          />\n        </Div>\n        {list === null ? \n        <Placeholder>Начните вводить название страны</Placeholder>\n        :\n        <List>\n          {\n            list && list.map((item, i) => \n              <SimpleCell\n                onClick={() => this.onChoose(item.country_name)}\n                id={item.country_name}\n                key={i}\n                after={\n                  item.country_name === text && (\n                    <Icon24Done />\n                  )\n                }\n              >\n                {item.country_name}\n              </SimpleCell>\n            )\n          }\n        </List>\n       }\n      </Panel>\n    )\n  }\n}\n\nexport default ChooseCountry\n","import React, { Component } from 'react'\r\nimport { Panel, PanelHeader, PanelHeaderBack, Div, Input, List, SimpleCell, Placeholder } from '@vkontakte/vkui'\r\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\r\n\r\nexport class ChooseCountryByContinentp extends Component {\r\n  state = {\r\n    inp: this.props.default,\r\n    list:null\r\n  }\r\n\r\n  onChange = (e) => {\r\n    const search = e.currentTarget.value.toLowerCase();\r\n    fetch(`https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/countries/byContinent/${\r\n      this.props.state.continentDst\r\n    }`)\r\n    .then(response => response.json())\r\n    .then(list => {\r\n\r\n        let arr = list.map((item) => { return item.nameTranslations.ru});\r\n        let resArr = arr.filter((name) => name.toLowerCase().indexOf(search) > -1);\r\n        console.log(resArr);\r\n        this.setState({\r\n          list: resArr\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  onChoose = (country_name) => {\r\n    this.props.changeFunction(country_name);\r\n    this.props.back()\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list\r\n    } = this.state\r\n    const {\r\n      id,\r\n      back,\r\n      text\r\n    } = this.props\r\n    return (\r\n      <Panel id={id}>\r\n        <PanelHeader\r\n          left={\r\n            <PanelHeaderBack onClick={back} />\r\n          }\r\n        >{text}</PanelHeader>\r\n        <Div>\r\n          <Input\r\n            onChange={this.onChange}\r\n          />\r\n        </Div>\r\n        {list === null ? \r\n        <Placeholder>Начните вводить название страны</Placeholder>\r\n        :\r\n        <List>\r\n          {\r\n            list && list.map((item, i) => \r\n              <SimpleCell\r\n                onClick={() => this.onChoose(item)}\r\n                id={item}\r\n                key={i}\r\n                after={\r\n                    item === text && (\r\n                    <Icon24Done />\r\n                  )\r\n                }\r\n              >\r\n                {item}\r\n              </SimpleCell>\r\n            )\r\n          }\r\n        </List>\r\n       }\r\n      </Panel>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChooseCountryByContinentp;\r\n","import React from 'react'\nimport { Epic, Tabbar, TabbarItem, View, Panel, ModalRoot, ModalPage,  Div, Checkbox, Title, FormLayout, Switch, Cell, ScreenSpinner, Button, ModalPageHeader, Card, ConfigProvider, Spinner, Avatar, InfoRow, FormStatus } from '@vkontakte/vkui'\nimport bridge from '@vkontakte/vk-bridge'\nimport axios from 'axios';\n\n\n\n// icons\nimport Icon28Users3Outline from '@vkontakte/icons/dist/28/users_3_outline';\nimport Icon28Settings from '@vkontakte/icons/dist/28/settings';\nimport Icon28HomeOutline from '@vkontakte/icons/dist/28/home_outline';\nimport Icon28Users from '@vkontakte/icons/dist/28/users';\nimport Icon28Send from '@vkontakte/icons/dist/28/send';\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\nimport Icon28ServicesOutline from '@vkontakte/icons/dist/28/services_outline';\n\n\n// panels\nimport Groups from './panels/Groups'\nimport Catalog from './panels/Catalog'\nimport SectionCatalog from './panels/SectionCatalog'\nimport MySubs from './panels/MySubs'\nimport Friends from './panels/Friends'\nimport Settings from './panels/Settings'\nimport EditSettings from './panels/EditSettings';\nimport ChooseCountry from './components/ChooseCountry';\nimport ChooseCity from './components/ChooseCity';\nimport ChooseCountryByContinent from './components/ChooseCountryByContinent';\nimport SnackbarError from './components/SnackbarError';\n\nconst blue = {\n  color:'var(--accent)'\n}\n\nconst SEASONS_TRANSCRIPTION = {\n  'all': 'любое',\n  'winter': 'зима',\n  'spring': 'весна',\n  'summer': 'лето',\n  'fall': 'осень',\n};\nconst MONTHS_TRANSCRIPTION = {\n  0: 'любой',\n  1: 'январь', 2: 'февраль', 3: 'март', 4: 'апрель',\n  5: 'май', 6: 'июнь', 7: 'июль', 8: 'август',\n  9: 'сентябрь', 10: 'октябрь', 11: 'ноябрь', 12: 'декабрь',\n};\n\nconst CONTINENTS = {\n  'random': 'любая',\n  'E': 'Европа',\n  'F': 'Африка',\n  'O': 'Океания',\n  'A': 'Азия',\n  'S': 'Южная Америка',\n  'N': 'Северная Америка',\n};\n\nconst PASSENGERS = {\n  url: \"1 пассажир, экономкласс\",\n  url1Business: \"1 пассажир, бизнес-класс\",\n  url2Passengers: \"2 пассажира, экономкласс\",\n  urlForma: \"открытая редактируемая форма поиска\"\n}\n\nconst CURRENCY = {\n  AZN: \"манат\",\n  BYN: \"беларусский рубль\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рубль \",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst CURRENCY1 = {\n  AZN: \"манат\",\n  BYN: \"беларусских рублей\",\n  CNY: \"юань\",\n  EUR: \"евро\",\n  KGS: \"сом\",\n  KZT: \"тенге \",\n  RUB: \"рублей\",\n  THB: \"бат\",\n  UAH: \"гривна\",\n  USD: \"доллар\",\n  UZS: \"сум\"\n}\n\nconst LANGUAGES = {\n  de: \"немецкий\",\n  en: \"английский\",\n  es: \"испанский\",\n  fr: \"французский\",\n  it: \"итальянский\",\n  ru: \"русский\",\n  th: \"тайский\",\n  tr: \"турецкий\"\n}\n\nclass App extends React.Component {\n  state = {\n    activeStory: 'about',\n    activePanel: 'home',\n    activeModal: null,\n    popout: null,\n    currentCatalog: 0,\n    catalog:null,\n    appId: null,\n\n\n\n    form:null, //state для проброса значений из редактора подписки(база данных)\n    obj:{\n      from:null,\n      to:null,\n      all:false\n    } , //state для проброса значений из создания и редоктирования подписки база данных\n\n  }\n\n  componentDidMount() {\n    // Получаем данные о пользователе и каналы\n    // this.setPopout(<ScreenSpinner />)\n    bridge.sendPromise(\"VKWebAppGetUserInfo\")\n    .then(user => {\n    \n        this.setState({\n          appId: parseInt(window.location.href.split(\"vk_app_id=\")[1].split(\"&\")[0], 10),\n          user\n        })\n       }\n      )\n\n      axios.get(\"https://cors-anywhere.herokuapp.com/https://api.cheapflights.sale/api/Channels\")\n      .then(async data => {\n        await this.sortData(data.data)\n      })\n    \n  }\n\n  // Приведение каналов в адекватный вид:\n  // [\n  //   {\n  //     catalog: \"catalog name\",\n  //     to: [\n  //       \"country\",\n  //       {\n  //         \"section\": \"в европу\",\n  //         arr: [\n  //           \"country\"\n  //         ]\n  //       }\n  //     ]\n  //   }\n  // ]\n  sortData = async data => {\n    const catalog = []\n    data.forEach(async item => {\n      let index = catalog.findIndex(a => a.catalog === item.catalog)\n      if(index === -1){\n        catalog.push({\n          catalog: item.catalog,\n          to: []\n        })\n        index = catalog.length-1\n      }\n      if(item.section){\n        const sectionIndex = catalog[index].to.findIndex(a => a.section === item.section)\n        if(sectionIndex === -1){\n          catalog[index].to.push({\n            section: item.section,\n            arr: [item]\n          })\n        }else{\n          catalog[index].to[sectionIndex].arr.push(item)\n        }\n      }else{\n        catalog[index].to.push(item)\n      }\n    })\n    catalog.shift()\n    catalog.splice(catalog.findIndex(a => a.catalog === \"\"),1)\n    this.setState({ catalog })\n    this.setPopout(null)\n  }\n  \n  // Смена табов\n  onStoryChange = (e) => {\n    this.setState({ activeStory: e.currentTarget.dataset.story, activePanel: 'home' })\n  }\n\n  // Рисование попаута\n  setPopout = popout => {\n    this.setState({ popout })\n  }\n\n  // Открытие той или иной части света\n  openCatalog = e => {\n    this.setState({ \n      activePanel: 'catalog',\n      currentCatalog: parseInt(e.currentTarget.id, 10),\n    })\n  }\n  //открытие модалки\n  openModal = modal => {\n    console.log(modal);\n    this.setState({activeModal: modal});\n  }\n\n  chooseGlobal = ( data) => {\n    console.log(this.state.changeDefaultName, data);\n    this.setState({[this.state.changeDefaultName]: data});\n  }\n\n  // Изменение панели\n  go = activePanel => {\n    this.setState({ activePanel, currentSection: null })\n  }\n\n  // Открыть секцию\n  chooseSection = e => {\n    this.setState({ activePanel: \"sectionCatalog\", currentSection: parseInt(e.currentTarget.id, 10) })\n  }\n\n  save_request = () => {  //сохранение подписки\n    this.setState({ popout: <ScreenSpinner /> });\n    fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-user-api-request\", {\n      \"headers\": {\n        \"accept\": \"*/*\",\n        \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n        \"content-type\": \"application/json;charset=utf-8\",\n      },\n      \"referrer\": \"https://appvk.flights.ru/\",\n      \"referrerPolicy\": \"no-referrer-when-downgrade\",\n      \"body\": JSON.stringify(this.state.item),\n      \"method\": \"POST\",\n    })\n    .then(response => response.json())\n    .then(check => {\n      if(check.response === 'ok'){\n        this.setState({ popout: null, activeModal: null, activePanel:'home'});\n        console.log(check);\n      }\n    }).catch(err => {\n        this.setState({snackbar:<SnackbarError close={() => this.setState({snackbar:null})} />})\n        this.setState({ popout: null });\n    })\n  }\n  \n  //редактирование state(Дял формы редактирования и создания подписки на сообщества)\n  onChangeGroups = (name, obj) => {\n    console.log(obj)\n   this.setState({ [name]: obj });\n  }\n\n  //редактирование state(Дял формы редакттпования)\n  onChangeForm = (countrySrc,citySrc,countryDst,cityDst, request_id) => {\n    this.setState({ countrySrc, citySrc, countryDst, cityDst, request_id});\n  }\n\n  choose = e => {\n    this.setState({\n      obj:{ ...this.state.obj,\n      [e.currentTarget.name]: this.state.obj[e.currentTarget.name].map((item, i) => {\n        if(i === parseInt(e.currentTarget.id, 10)){\n          item.checked = e.currentTarget.checked\n          return item\n        }else{\n          return item\n        }\n      })\n    }\n    })\n    let bool = true;\n    this.state.obj.from.forEach(element => {\n      if(!element.checked) {\n        bool = false;\n      }\n    });\n    this.state.obj.to.forEach(element => {\n      if(!element.checked) {\n        bool = false;\n      }\n    })\n    this.setState({ obj:{ ...this.state.obj,all:bool }})\n  }\n\n  chooseAll = () => {\n    let bool = !this.state.obj.all;\n    const { from , to} = this.state.obj;\n    this.setState({\n      obj: {\n      ...this.state.obj,\n      from: from.map((item, i) => {  \n          item.checked = bool;\n          return item\n      }),\n      to: to.map((item, i) => {  \n        item.checked = bool;\n        return item\n    }), all:bool\n  }\n    })\n  }\n\n  // сохранение подписки(настройка)\n  submit = async () => {\n    const { from, to, name, groupId, id } = this.state.obj;\n    const { catalog, currentCatalog, currentSection, user} = this.state;\n    this.setPopout(<ScreenSpinner />);\n    if(from.filter((item) => item.checked).length > 0 && \n      to.filter((item) => item.checked).length > 0\n    ){\n      let arr = []\n      arr = arr.concat(from.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+groupId+\"/\"+name+\"/\"+catalog[currentCatalog].catalog+\"/\"+(currentSection ? currentSection : \"Любой\")))\n      arr = arr.concat(to.filter((item) => item.checked)\n      .map((item) => item.tag+\"/\"+groupId+\"/\"+name+\"/\"+catalog[currentCatalog].catalog+\"/\"+(currentSection ? currentSection : \"Любой\")))\n\n      fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/get-tags\", {\n        \"headers\": {\n          \"accept\": \"*/*\",\n          \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n          \"content-type\": \"application/json;charset=utf-8\",\n        },\n        \"body\": JSON.stringify({\n          user_id: String(user.id)\n        }),\n        \"method\": \"POST\",\n      })\n      .then(response => response.json())\n      .then(data => {\n        if(data.tags.length > 0){\n          arr = arr.concat(\n            data.tags.map((item) => \n              item.body+\"/\"+item.group_id+\"/\"+item.group_name+\"/\"+item.category+\"/\"+item.section\n            )\n          )\n        }\n        fetch(\"https://cors-anywhere.herokuapp.com/https://appvk.flights.ru/save-tags\", {\n          \"headers\": {\n            \"accept\": \"*/*\",\n            \"accept-language\": \"ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7\",\n            \"content-type\": \"application/json;charset=utf-8\",\n          },\n          \"referrer\": \"https://appvk.flights.ru/\",\n          \"referrerPolicy\": \"no-referrer-when-downgrade\",\n          \"body\": JSON.stringify({\n            user_id: String(user.id),\n            checkbox: arr\n          }),\n          \"method\": \"POST\",\n        })\n        .then(response => response.json())\n        .then(check => {\n          if(check.response === 'ok'){\n            this.setState({ popout: null, activeModal: null});\n          }\n        })\n      })\n    }\n  }\n\n  render () {\n    const {\n      activePanel,\n      popout,\n      defaultCountry,\n      chooseCountryText,\n      changeFunction,\n      changeDefaultName,\n      item\n    } = this.state\n    const {\n      from,\n      to,\n      all\n    } = this.state.obj;\n    return (\n      <ConfigProvider isWebView={true}>\n      <Epic activeStory={this.state.activeStory}  tabbar={\n        <Tabbar>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'about'}\n            data-story=\"about\"\n            text=\"Помощь\"\n          ><Icon28HelpOutline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'subscribes'}\n            data-story=\"subscribes\"\n            text=\"Подписки\"\n          ><Icon28HomeOutline /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'friends'}\n            data-story=\"friends\"\n            text=\"Друзья\"\n          ><Icon28Users /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'aviasales'}\n            data-story=\"aviasales\"\n            text=\"Aviasales\"\n          ><Icon28Send /></TabbarItem>\n          <TabbarItem\n            onClick={this.onStoryChange}\n            selected={this.state.activeStory === 'services'}\n            data-story=\"services\"\n            text=\"Сервисы\"\n          ><Icon28ServicesOutline /></TabbarItem>\n        </Tabbar>\n      }>\n\n\n\n        <View id=\"subscribes\" activePanel={activePanel} popout={popout} modal={\n        <ModalRoot activeModal={this.state.activeModal}>\n          <ModalPage id='subscribeCities' onClose={() => this.setState({ activeModal:null} )} dynamicContentHeight settlingHeight={100} header={<ModalPageHeader>Настройка</ModalPageHeader>}>\n          <Div style={{ position: \"relative\", textAlign: \"left\", overflowX: \"hidden\", overflowY: \"auto\", backgroundColor:'#fff' }} className=\"SubscribeCities\">\n          <Cell indicator={<Switch checked={all} onChange={this.chooseAll}/>}>Все</Cell>\n          <Title level=\"3\" weight=\"bold\">Показывать авиабилеты из:</Title>\n          <FormLayout>\n            {\n              from && (\n                from.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"from\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n            <Title level=\"3\" weight=\"bold\">Показывать авиабилеты в:</Title>\n            {\n              to && (\n                to.map((item, index) => \n                  <Checkbox\n                    key={index}\n                    id={index}\n                    name=\"to\"\n                    onChange={this.choose}\n                    checked={item.checked}\n                  >\n                    {item.tag.split(\"#\")[1].split(\"@\")[0]}\n                  </Checkbox>\n                )\n              )\n            }\n            <Button mode='commerce' size='xl' onClick={this.submit}>Применить</Button>\n          </FormLayout>\n        </Div>\n          </ModalPage>\n          <ModalPage id='confirm_settings' header={<ModalPageHeader>Подтверждение</ModalPageHeader>} onClose={() => this.setState({ activeModal: null})} settlingHeight={100}>\n              {item && \n              <Card size=\"l\" mode=\"shadow\">\n                  <Div style={{ padding: '20px', lineHeight: 1.5 }}>\n                    Из страны <b style={blue}>{\n                    (item.output).countrySrc ? (item.output).countrySrc : \"любая\"\n                    }</b> и города <b style={blue}>{(item.output).citySrc ? (item.output).citySrc : \"любой\"}</b><br />\n                    В часть света <b style={blue}>{CONTINENTS[(item.output).continentDst]}</b> и страну <b  style={blue}>{(item.output).countryDst ? (item.output).countryDst : \"любая\"}</b><br />\n                    В город <b  style={blue}>{(item.output).cityDst ? (item.output).cityDst : \"любой\"}</b><br />\n                    Направление полетов: туда-обратно - <b  style={blue}>{(item.output).dual ? \"да\" : \"нет\"}</b><br />\n                    Направление полетов: туда - <b  style={blue}>{(item.output).forward ? \"да\" : \"нет\"}</b><br />\n                    {\n                      (item.output).dates.map((item, i) => \n                        <div key={i}>\n                          Год вылета ({i+1}) <b  style={blue}>{item.year}</b><br />\n                          Время года ({i+1}) <b  style={blue}>{SEASONS_TRANSCRIPTION[item.season]}</b><br />\n                          Месяц ({i+1}) <b  style={blue}>{MONTHS_TRANSCRIPTION[item.month]}</b><br />\n                        </div>    \n                      )\n                    }<br />\n                    Пассажиры <b style={blue}>{PASSENGERS[(item.output).passengers]}</b><br />\n                    Цена от <b style={blue}>{(item.output).costMin}</b> до <b style={blue}>{(item.output).costMax}</b> {CURRENCY1[(item.output).currency]}<br />\n\n                    Период показа <b style={blue}>{(item.output).interval}</b> минут<br />\n                    Глубина поиска <b style={blue}>{(item.output).updated}</b> минут<br />\n                    Максимальное количество билетов за 24 часа <b style={blue}>{(item.output).limit === \"0\" ? \"все\" : (item.output).limit}</b><br />\n                    Язык <b style={blue}>{LANGUAGES[(item.output).language]}</b><br />\n                    Валюта (цена) <b style={blue}>{CURRENCY[(item.output).currency]}</b><br />\n                    Валюта (метапоисковика) <b style={blue}>{CURRENCY[(item.output).currencyForUrl]}</b><br />\n                    {\n                      (item.output).optional && (\n                        <div><br />\n                          <div style={{ color: 'var(--tabbar_inactive_icon)' }}>Дополнительные параметры</div>\n                          {\n                            (item.output).profitability && (\"Выгодность покупки больше \")\n                          }\n                          {\n                            (item.output).profitability && \n                            <b style={blue}>{(item.output).profitability+\"%\"}</b>\n                          }<br />\n                          Дни недели вылета <b style={blue}>{\n                            ((days) => {\n                              const daysOfWeek = [\n                                \"вс\",\n                                \"пн\",\n                                \"вт\",\n                                \"ср\",\n                                \"чт\",\n                                \"пт\",\n                                \"сб\"\n                              ]\n                              let check = 0;\n                              days.every((element, index, array) => {\n                                  check++;\n                                  return element === true;\n                              });\n                              if (check === 7) {\n                                  return 'все';\n                              }\n                              let res = '';\n                              for (let index = 1; index < days.length; index++) {\n                                  if (days[index]) {\n                                      res += daysOfWeek[index].toLowerCase() + ', ';\n                                  }\n                              }\n                              res += daysOfWeek[0].toLowerCase();\n                              return res;\n                            })((item.output).days)\n                          }</b><br />\n                          {\n                            (item.output).showAddionalWeather && (\n                              <div>\n                                Прогноз погоды в день прилета<br />\n                                Днем от <b style={blue}>{(item.output)['dayTemp.min']}</b> С до <b style={blue}>{(item.output)['dayTemp.max']}</b> С<br />\n                                Ночью от <b style={blue}>{(item.output)['nightTemp.min']}</b> С до <b style={blue}>{(item.output)['nightTemp.max']}</b> С<br />\n                              </div>\n                            )\n                          }\n                        </div>\n                      )\n                    }\n                  </Div>\n                    <Div>\n                      <Button size='xl' onClick={this.save_request}>Подписаться</Button>  \n                    </Div>\n\n                    <Div>\n                      <Button style={{ border: '1px solid var(--accent)'}} mode='secondary' size='xl' onClick={() => this.setState({activeModal:null})}>Редактировать</Button>\n                    </Div>\n                          \n                </Card>\n              }\n            </ModalPage>\n        </ModalRoot>\n      }>\n          <MySubs\n            id=\"home\"\n            state={this.state}\n            go={this.go}\n            onChangeGroups={this.onChangeGroups}\n            onChange={this.onChangeForm}\n            changeFunction={this.chooseGlobal}\n            changeDefaultName={(changeDefaultName) => this.setState({ changeDefaultName }, console.log(changeDefaultName))}\n            openModal={this.openModal}\n            onChangeGroups={this.onChangeGroups}\n            setPopout={this.setPopout}\n          />\n\n          <Settings\n            id=\"settings\"\n            state={this.state}\n            setPopout={this.setPopout}\n            onChangeGroups={this.onChangeGroups}\n            openModal={this.openModal}\n            go={this.go}\n          />\n\n          <EditSettings \n            id='edit_settings'\n            onChangeGroups={this.onChangeGroups}\n            setPopout={this.setPopout}\n            go={this.go}\n            openModal={this.openModal}\n            state={this.state}\n          />\n\n          <Groups\n            id=\"groups\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            openCatalog={this.openCatalog}\n          />\n          <Catalog\n            id=\"catalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            openModal={this.openModal}\n            go={this.go}\n            onChangeGroups={this.onChangeGroups}\n            chooseSection={this.chooseSection}\n          />\n          <SectionCatalog\n            id=\"sectionCatalog\"\n            state={this.state}\n            setPopout={this.setPopout}\n            openModal={this.openModal}\n            onChangeGroups={this.onChangeGroups}\n            go={this.go}\n          />\n\n        </View>\n        <View id=\"friends\" activePanel={activePanel} popout={popout} modal={\n          <ModalRoot activeModal={this.state.activeModal}>\n            <ModalPage id='bullet_to_friend' onClose={() => this.setState({ activeModal: null })} header={<ModalPageHeader>Билет к другу</ModalPageHeader>} dynamicContentHeight>\n            {this.state.friend == null ? <Spinner />:\n           <div align=\"center\"> \n            <Avatar src={this.state.friend.photo_200} size={80} shadow={false} />\n            <span style={{fontWeight:'bold', fontSize:15}}>{this.state.friend.first_name+\" \"+this.state.friend.last_name}</span>\n            <Div>\n        \n             <InfoRow header=\"Страна\">\n             {this.state.friend.country.title}\n             </InfoRow>\n            \n             <InfoRow header=\"Город\" style={{marginTop:10}}>\n             {this.state.friend.city.title}\n             </InfoRow>\n\n             <InfoRow header=\"Минимальная цена билета\" style={{marginTop:10}}>\n             {this.state.friend.price+\" RUB\"}\n             </InfoRow>\n\n             {this.state.friend.iata == 'error' ? \n             <Div>\n             <FormStatus>В городе вашего друга нет аэропорта</FormStatus></Div>:null}\n             <Div>\n             <Button size='xl' disabled={this.state.user.user_code == 'error' || this.state.friend.itoa == 'error'}>Календарь цен</Button>\n             </Div>\n            </Div>\n           </div>\n            }\n          </ModalPage>\n          </ModalRoot>\n        }>\n          <Friends\n            id=\"home\"\n            state={this.state}\n            setPopout={this.setPopout}\n            go={this.go}\n            openModal={this.openModal}\n            onChangeGroups={this.onChangeGroups}\n          />\n          <ChooseCity\n            id='chooseCity'\n            default={defaultCountry}\n            text={chooseCountryText}\n            changeFunction={this.chooseGlobal}\n            changeDefaultName={changeDefaultName}\n            state={this.state}\n            back={() => this.setState({ activePanel: 'home' })}\n          />  \n        </View>\n        <View id=\"aviasales\" activePanel={activePanel} popout={popout}>\n          <Panel id=\"home\"></Panel>\n        </View>\n      </Epic>\n      </ConfigProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as eruda from 'eruda';\nimport * as erudaCode from 'eruda-code';\nimport * as erudaDom from 'eruda-dom';\nimport bridge from '@vkontakte/vk-bridge'\nimport '@vkontakte/vkui/dist/vkui.css';\n \nimport './main.css';\nimport './style.css';\nbridge.send(\"VKWebAppInit\", {})\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\neruda.init();\neruda.add(erudaCode);\neruda.add(erudaDom);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}